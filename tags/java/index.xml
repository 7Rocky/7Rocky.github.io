<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/tags/java/</link><description>Recent content in java on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 03 Feb 2024 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>RegistryTwo</title><link>https://7rocky.github.io/htb/registrytwo/</link><pubDate>Sat, 03 Feb 2024 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/registrytwo/</guid><description>Hack The Box. Linux. Máquina insana. Esta máquina expone una aplicación web que permite crear dominios personalizados con código HTML. Además, hay un registro de Docker expuesto en el que podemos descargar &lt;em>blobs&lt;/em> de imágenes de Docker después de obtener un &lt;em>token&lt;/em> JWT adecuado. La aplicación web ejecuta un archivo War con Tomcat, podemos descompilarlo y ver que consulta un servidor RMI. Dado que TomCat está detrás de un &lt;em>proxy&lt;/em> inverso de nginx, podemos acceder a algunos &lt;em>servlets&lt;/em> sensibles de Tomcat para modificar nuestra sesión y establecer permisos de administrador en la aplicación web. Necesitamos esto para modificar la configuración de RMI utilizando una vulnerabilidad de asignación en masa y apuntar el servidor RMI a nosotros. Después de eso, podemos explotar una vulnerabilidad de deserialización insegura en Java para obtener RCE en un contenedor. Luego, podemos interactuar con el servidor RMI legítimo utilizando un reenvío de puertos. Este servidor nos permite leer archivos arbitrarios con un ataque de navegación de directorios. Podemos encontrar una contraseña en texto claro para el usuario &lt;code>developer&lt;/code>, que se reutiliza en SSH. Luego, &lt;code>root&lt;/code> ejecuta un archivo JAR para analizar archivos del sitio web de &lt;em>hosting&lt;/em> enviándolos a un servidor ClamAV. El problema aquí es que el JAR llama a las funciones del registro RMI, que se reinicia periódicamente. Por lo tanto, podemos elaborar un registro de RMI malicioso y una explotación para ganar una condición de carrera y ocupar el puerto, de modo que &lt;code>root&lt;/code> consulte nuestro servidor ClamAV falso. El resultado será que todos los archivos en &lt;code>/root&lt;/code> se pondrán en cuarentena dentro de un directorio legible, lo cual conduce a la escalada de privilegios</description></item><item><title>RedPanda</title><link>https://7rocky.github.io/htb/redpanda/</link><pubDate>Sat, 26 Nov 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/redpanda/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina tiene una aplicación web hecha con Spring Boot que es vulnerable a Server-Side Template Injection con un formato particular. Luego, para escalar privilegios, es necesario analizar un programa en Java, añadir metadatos maliciosos a una imagen JPEG, añadir una Entidad Externa XML en un archivo XML controlado, romper la lógica de un analizador de logs y finalmente esperar a que root procese el archivo XML para leer su clave privada de SSH</description></item></channel></rss>