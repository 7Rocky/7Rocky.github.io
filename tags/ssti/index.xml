<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ssti on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/tags/ssti/</link><description>Recent content in ssti on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 30 Jul 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/tags/ssti/index.xml" rel="self" type="application/rss+xml"/><item><title>Late</title><link>https://7rocky.github.io/htb/late/</link><pubDate>Sat, 30 Jul 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/late/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina contiene una aplicación web en Flask que extrae texto de imágenes y lo renderiza, siendo vulnerable a SSTI. Luego, existe un PAM configurado para SSH con rutas relativas, que puede ser abusado debido a ciertos privilegios para sobrescribir ejecutables. Para comprometer esta máquina se necesitan conocimientos básicos de explotación web y de enumeración en Linux</description></item><item><title>Catch</title><link>https://7rocky.github.io/htb/catch/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/catch/</guid><description>Hack The Box. Linux. Máquina media. Esta máquina ofrece un archivo APK que contiene tokens de autenticación hard-coded de otros servicios expuestos. Uno de los tokens puede ser usado para enumerar una aplicación de Let&amp;rsquo;s Chat por medio de su API y obtener credenciales para Cachet. Este servicio es vulnerable a Server-Side Template Injection en PHP y podemos obtener más credenciales para acceder por SSH. La máquina ejecuta una tarea Cron para analizar archivos APK con un script en Bash que es vulnerable a inyección de comandos, por lo que tenemos que subir un archivo APK malicioso para explotarlo y convertirnos en root</description></item><item><title>Hancliffe</title><link>https://7rocky.github.io/htb/hancliffe/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/hancliffe/</guid><description>Hack The Box. Windows. Máquina difícil. Esta máquina tiene una página web que esconde una aplicación Nuxeo en Java vulnerable a SSTI después de romper la lógica de nginx. Luego accedemos a la máquina y encontramos una aplicación con un exploit público para acceder como otro usuario. Después, extraemos credenciales de Firefox y usamos un generador de contraseñas para acceder como otro usuario y encontrar un ejecutable de Windows. Después de hacer ingeniería inversa para obtener las credenciales esperadas, encontramos una vulnerabilidad de Buffer Overflow que necesita ser explotada mediante Socket Reuse para acceder como Administrator</description></item><item><title>GoodGames</title><link>https://7rocky.github.io/htb/goodgames/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/goodgames/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina tiene una página web vulnerable a inyección de código SQL desde donde podemos obtener una contraseña para acceder a una verb interna que es vulnerable a SSTI. Luego, ganamos acceso a un contenedor de Docker que monta un directorio de la máquina, de manera que podemos aprovecharlo para escalar privilegios. Para comprometer esta máquina se necesitan habilidades básicas de pentesting web y de Docker. En este write-up se utiliza un script en Python personalizado para comprometer la máquina desde cero</description></item><item><title>Bolt</title><link>https://7rocky.github.io/htb/bolt/</link><pubDate>Sat, 19 Feb 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/bolt/</guid><description>Hack The Box. Linux. Máquina media. Esta máquina tiene varios subdominios y una imagen de Docker con mucha información necesaria para explotar los servicios web. Existe una vulnerabilidad de SSTI en la comunicación entre dos servicios. Luego, podemos extraer una clave privada PGP de la caché de Google Chrome y descrifrar un mensaje. Para comprometer esta máquina, se necesitan conocimientos avanzados de Docker y habilidades básicas de explotación web</description></item><item><title>Epsilon</title><link>https://7rocky.github.io/htb/epsilon/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/epsilon/</guid><description>Hack The Box. Linux. Máquina media. Esta máquina contiene una página web que expone un repositorio de Git con secretos en confirmaciones antiguas. Hay otra página web que necesita de un token JWT válido para explotar una vulnerabilidad de SSTI. El secreto de los tokens JWT está escrito en una función AWS Lambda. Luego, existe una tarea Cron que puede ser explotada mediante enlaces simbólicos para poder leer archivos arbitrarios. Para comprometer esta máquina, se necesitan conocimientos de Git, JWT, SSTI y AWS Lambda, ademñas de explotación de tareas Cron</description></item><item><title>Nunchucks</title><link>https://7rocky.github.io/htb/nunchucks/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/nunchucks/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina tiene una página web vulnerable a Server-Side Template Injection (SSTI) y tiene algunas capabilities habilitadas pero protegidas. Para comprometer la máquina se necesitan conocimientos de plantillas en Node.js y ejecución de comandos en Perl</description></item><item><title>Spider</title><link>https://7rocky.github.io/htb/spider/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/spider/</guid><description>Hack The Box. Linux. Máquina difícil. Esta máquina contiene una página web vulnerable a Server-Site Template Injection (SSTI) en dos puntos e inyección de código SQL (SQLi), y otra página interna vulnerable a inyección de entidades externas XML (XXE). Para comprometer esta máquina se necesitan conocimientos avanzados de SSTI y evasión de filtros, SQLi, XXE y reenvío de puertos. En este write-up se utiliza un script en Python para explotar un SSTI y un script en Bash para leer archivos mediante XXE</description></item></channel></rss>