<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/tags/mysql/</link><description>Recent content in mysql on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 07 Jan 2023 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>Health</title><link>https://7rocky.github.io/htb/health/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/health/</guid><description>Hack The Box. Linux. Máquina media. Esta máquina tiene una funcionalidad de webhook que parece vulnerable a Server-Side Request Forgery. Tras probar varios bypasses, vemos que el ataque de SSRF funciona mediante una redirección. Internamente, hay una versión de Gogs desactualizada que es vulnerable a SQLi. Una vez que tenemos un payload para extraer hashes de contraseñas de la base de datos, podemos obtenerlos y romperlos de la instanca de Gogs remota con SQLi a través de SSRF. Luego, conseguimos una conexión por SSH y descubrimos que podemos introducir rutas locales en la base de datos para leer archivos del servidor como root. En este write-up se utiliza un script en Python para realizar el ataque de SSRF y un programa en Go para romper los hashes de Gogs</description></item></channel></rss>