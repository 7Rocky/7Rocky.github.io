<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary-exploitation on 7Rocky</title><link>https://7rocky.github.io/tags/binary-exploitation/</link><description>Recent content in binary-exploitation on 7Rocky</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 10 Sep 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/tags/binary-exploitation/index.xml" rel="self" type="application/rss+xml"/><item><title>Scanned</title><link>https://7rocky.github.io/htb/scanned/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/scanned/</guid><description>Hack The Box. Linux. Máquina insana. Esta máquina tiene una página web que es capaz de analizar malware. Al analizar el código en C del sandbox, se ve que se puede utilizar un archivo de log para exfiltrar información por medio del servidor web, y también abusar de una mala configuración para escapar de chroot. Luego, podemos leer una base de datos SQLite y extraer el hash de una contraseña, que se reutiliza para SSH. Una vez en la máquina, se puede ejecutar un binario SUID desde la sandbox y copiar una librería compartida maliciosa para que el binario SUID ejecute Bash como root. Para comprometer esta máquina se necesitan conocimientos avanzados de Linux, programación en C y Bash, experiencia en auditoría de código y técnicas de evasión. En este write-up se utiliza un script en Bash con un programa en C embebido para listar directorios y leer archivos del servidor y también un programa en Go para romper el hash de una contraseña</description></item><item><title>Retired</title><link>https://7rocky.github.io/htb/retired/</link><pubDate>Sat, 13 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/retired/</guid><description>Hack The Box. Linux. Máquina media. Esta máquina tiene una página web en PHP que es vulnerable a navegación de directorios. Aquí encontramos un archivo PHP que espera que se suba un archivo para pasarlo a un servidor de sockets en local. Somos capaces de enumerar procesos y descargar el binario que ejecuta el servidor y ver que es vulnerable a Buffer Overflow. Una vez explotado, podemos pivotar a un usuario usando enlaces simbólicos. Y luego, se nos permite añadir formatos ejecutables personalizados, que puede ser explotado para convertirnos en root. Para comprometer esta máquina se necesitan técnicas sólidas de explotación de binarios y conceptos de Linux. En este write-up se utilizan exploits personalizados en Python para la intrusión</description></item><item><title>OverGraph</title><link>https://7rocky.github.io/htb/overgraph/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/overgraph/</guid><description>Hack The Box. Linux. Máquina difícil. Esta máquina tiene una página web que es vulnerable a Open Redirect, una aplicación web hecha en AngularJS vulnerable a Client-Side Template Injection y XSS, y una implementación de GraphQL. Somos capaces de registrar una nueva cuenta al saltarnos un código OTP mediante una inyección NoSQL. Luego, podemos realizar un ataque de CSRF abusando del Open Redirect para inyectar un payload de XSS en el perfil de la víctima para obtener su adminToken, que está guardado en localStorage. Después, podemos subir archivos de video que serán procesados por ffmpeg y explotar un Server-Side Request Forgery que nos permite leer archivos del servidor. Finalmente, ganaremos acceso a la máquina como un usuario y podemos encontrar un binario está en ejecución como root. Después de analizarlo, podemos obtener un token válido para usar el programa y exploitar una vulnerabilidad para escribir datos arbitrarios en una dirección arbitraria, derivando en RCE o permisos de lectura como root</description></item><item><title>Overflow</title><link>https://7rocky.github.io/htb/overflow/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/overflow/</guid><description>Hack The Box. Linux. Máquina difícil. Esta máquina contiene una página web vulnerable a Padding Oracle Attack y Bit Flipper Attack para iniciar sesión como admin y también vulnerable a SQLi por un CMS. Existe otro subdominio que usa una versión de exiftool que tiene una vulnerabilidad de RCE. Una vez en la máquina, los movimientos laterales son relativamente fáciles y la escalada de privilegios consiste en ingeniería inversa y explotación de una vulnerabilidad de Buffer Overflow en un binario SUID. Para comprometer esta máquina se necesitan conocimientos avanzados de explotación web, criptografía y explotación de binarios. En este write-up se utiliza un script en Python para efectuar un Bit Flipper Attack y un script en Ruby para SQLi</description></item><item><title>Secret</title><link>https://7rocky.github.io/htb/secret/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/secret/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina contiene una API que utiliza tokens JWT para la autenticación. Podemos descargar el proyecto y ver que es un repositorio de Git, y de las confirmaciones antiguas podemos extraer una clave secreta. Existe un binario SUID que lee archivos como root aunque solo muestra estadísticas del archivo, pero podemos matar el proceso y leer el coredump. Para comprometer esta máquina se necesitan conocimientos de pentesting web, enumeración de Git y procesos en Linux</description></item><item><title>Hancliffe</title><link>https://7rocky.github.io/htb/hancliffe/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/hancliffe/</guid><description>Hack The Box. Windows. Máquina difícil. Esta máquina tiene una página web que esconde una aplicación Nuxeo en Java vulnerable a SSTI después de romper la lógica de nginx. Luego accedemos a la máquina y encontramos una aplicación con un exploit público para acceder como otro usuario. Después, extraemos credenciales de Firefox y usamos un generador de contraseñas para acceder como otro usuario y encontrar un ejecutable de Windows. Después de hacer ingeniería inversa para obtener las credenciales esperadas, encontramos una vulnerabilidad de Buffer Overflow que necesita ser explotada mediante Socket Reuse para acceder como Administrator</description></item><item><title>Static</title><link>https://7rocky.github.io/htb/static/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/static/</guid><description>Hack The Box. Linux. Máquina difícil. Esta máquina contiene una página web que expone un archivo Gzip corrupto que necesita ser corregido para obtener una clave de TOTP y descargar un archivo VPN. Luego, hay algunos servicios PHP vulnerables que pueden ser comprometidos para llegar a un servidor interno que contiene un archivo binario ejecutable que tiene una vulnerabilidad de Format String. Para comprometer esta máquina se necesitan conocimientos avanzados de pivoting y reenvío de puertos, además de enumeración web, explotación de PHP y explotación de Format String. En este write-up se utiliza un script personalizado de Ruby para automatizar el proceso de descarga del archivos VPN, un script de Python para ganar RCE sobre un servidor web PHP y otro script de Python para la explotación del binario mediante Format String</description></item><item><title>Rope</title><link>https://7rocky.github.io/htb/rope/</link><pubDate>Sat, 23 May 2020 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/rope/</guid><description>Hack The Box. Linux. Máquina insana. Esta máquina expone un servidor web que es vulnerable a navegación de directorios, por lo que podemos leer archivos y descubrir que se trata de un archivo binario. Después de analizar el binario, descubrimos que tiene una vulnerabilidad de Format String que puede ser explotada para conseguir RCE como john. Este usuario puede ejecutar otro binario como el usuario r4j. Este binario utiliza una librería externa que podemos modificar debido a los permisos que tiene y ganar acceso como r4j. Finalmente, existe otro binario que ejecuta un servidor de sockets en local, podemos acceder al binario y analizarlo para encontrar una vulnerabilidad de Buffer Overflow. El binario tiene todas las protecciones activas, pero sigue siendo explotable para conseguir RCE como root</description></item><item><title>Frolic</title><link>https://7rocky.github.io/htb/frolic/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/htb/frolic/</guid><description>Hack The Box. Linux. Máquina fácil. Esta máquina tiene una página web que almacena algunos archivos con varias codificaciones y lenguajes esotéricos. Finalmente, podemos llegar a una instancia de PlaySMS que es vulnerable a RCE mediante PHP. La máquina contiene un binario SUID que es vulnerable a Buffer Overflow y permite la escalada de privilegios</description></item></channel></rss>