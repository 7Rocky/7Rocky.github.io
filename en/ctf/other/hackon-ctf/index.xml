<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HackOn CTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/</link><description>Recent content in HackOn CTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/hackon-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>El cifrao del cu√±ao</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/el-cifrao-del-cu%C3%B1ao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/el-cifrao-del-cu%C3%B1ao/</guid><description>&lt;p>We are provided with a Python script that encrypts the flag with RSA:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>


&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'HackOn&lt;/span>&lt;span class="mtk6">{testing_flag}&lt;/span>&lt;span class="mtk4">'&lt;/span>

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">24&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">N1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>
&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>


&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">34456075732829756714431696264844933736161425428678&lt;/span>&lt;span class="mtk6">777444326530245267175496676105&lt;/span> 
&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">66213320562378389542956020292848603326457400359492&lt;/span>&lt;span class="mtk6">442893037745994906793456536650&lt;/span>


&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">N1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'N1: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">N1&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">e1: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">e2: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">c1: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">c2: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">flag_enc&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()),&lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"flag_enc: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">flag_enc&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>El Reset de 1745</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/el-reset-de-1745/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/el-reset-de-1745/</guid><description>&lt;p>We are provided with a Python script that creates a private RSA key and gives us some additional information:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk8">inverse&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> sage.all &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> cos,&lt;/span>&lt;span class="mtk1">floor&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">sqrt&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">450&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(cos(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">450&lt;/span>&lt;span class="mtk1">).n(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># -0.83677025469083783941541701752761854754793836436580928644247008941810266469532458996045447348443859400152817824525738732652478723578550322419681449352934903962868272432839950443728133311767399079690030001079242722034971856216464693298008475334803612328029119715730610948114017183466860376219520135065944451843458471230390067711216822465611823803314088335568327990572989813880317949003496128817743756941657517592732976171161188449564836856703887590653409218974871687234942350215936871374265782174012360582549759635891009261305443677350659234691411334888094583016691447506478413851786692210332884103069291530840376504431016357464401672842279159473862600445695092589720790836314505433051945268839223026728538635526261735680020640125514694922387865117641745486767737807560114356069413145843513030254057578430063498955558945235100024577603060294061771113596755818633721728098654211982059793050427304804021628754473574523763161349682175284850419236582818156064980865716476145483816198034274679778084438576624517718459301374217997767985615596748052223448537502912453071556058736828589970943263917953424626006378389407199956646994682638376389500968564930356704561568053846692273026900362154710217069324829901876963571359354949212621973636284&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">construct&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"priv.pem"&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk4">'wb'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exportKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'PEM'&lt;/span>&lt;span class="mtk1">))&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>In addition, we have a PCAP file with encrypted TLS 1.2 data:&lt;/p></description></item><item><title>Favela Ransomware</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/favela-ransomware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/favela-ransomware/</guid><description>&lt;p>In this challenge we have a Windows PE called &lt;code>favela_ransom.exe&lt;/code> along with other files that are part of a ransomware attack, together with the encrypted files that we have to recover:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="code-blue">*&lt;/span>
diary.txt: data
favela_ransom.exe: PE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows 
flag.enc: data
lia sikora desnuda.jpg: data
note.txt: Unicode text, UTF-8 text
ransomed.png: PNG image data, 2643 x 1580, 8-bit/color RGBA, non-interlaced
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>When opening the executable in Ghidra, and looking at the strings, we see a curious one that points to a GitHub Gist: &lt;a target="_blank" href="https://gist.githubusercontent.com/jsdario/6d6c69398cb0c73111e49f1218960f79/raw">https://gist.githubusercontent.com/jsdario/6d6c69398cb0c73111e49f1218960f79/raw&lt;/a>.&lt;/p></description></item><item><title>Guglu v2</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/guglu-v2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/guglu-v2/</guid><description>&lt;p>We are provided with a website to create notes. There is also a bot that accesses its profile and then accesses to a URL provided by us. We also have the projects in Node.js.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>Registration functions (&lt;code>/register&lt;/code>) and login (&lt;code>/login&lt;/code>) are correctly implemented.&lt;/p>
&lt;p>The main functionality of the application is the possibility of creating and looking for notes (&lt;code>web/src/routes/post.router.js&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/posts'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk1">page&lt;/span>&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">page&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">===&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">undefined&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/posts?page=1'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">owner&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.session.username;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> db.&lt;/span>&lt;span class="mtk8">getPosts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">owner&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">page&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'posts'&lt;/span>&lt;span class="mtk1">, {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">post&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/add-post'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">let&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk1">title&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">logo&lt;/span>&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">body&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">creator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.session.username;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">title&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">title&lt;/span>&lt;span class="mtk1">.length &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">?&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">title&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">:&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">title&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">substring&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1">.length &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1024&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">?&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">content&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">:&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">substring&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">); &lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> db.&lt;/span>&lt;span class="mtk8">addPost&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">title&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">logo&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">creator&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk4">"lastInsertRowid"&lt;/span>&lt;span class="mtk1">];&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`/post/&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">`&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/search'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">let&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"query"&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">let&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">creator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.session.username;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">let&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">page&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"page"&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> db.&lt;/span>&lt;span class="mtk8">searchPosts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">creator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">page&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"posts"&lt;/span>&lt;span class="mtk1">, {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">posts&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>These three endpoints use database access functions (&lt;code>web/src/lib/db.js&lt;/code>):&lt;/p></description></item><item><title>Jorge Wants a Token</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/jorge-wants-a-token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/jorge-wants-a-token/</guid><description>&lt;p>We are provided with the source code of the server in Python. On the one hand we have &lt;code>administation.py&lt;/code> (the main file), and on the other we have &lt;code>library.py&lt;/code> (auxiliary functions). The server gives us these options:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 0.cloud.chals.io 15980

 __ __ __ ____
 / / / /___ ______/ /__/ __ \____
 / /_/ / __ `/ ___/ //_/ / / / __ \
 / __ / /_/ / /__/ ,&amp;lt; / /_/ / / / /
/_/ /_/\__,_/\___/_/|_|\____/_/ /_/
Welcome to the HackOn administration. 

1. Log In - With token.
2. Register.
3. Make a complain.
4. Exit

[*]Option:
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The only useful options are &lt;code>1&lt;/code> and &lt;code>2&lt;/code>:&lt;/p></description></item><item><title>Kerbab</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/kerbab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/kerbab/</guid><description>&lt;p>We are provided with a Linux file system and other common files in kernel exploitation challenges:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-red">#&lt;/span> &lt;span class="code-dark-green">ls&lt;/span> -lh
total 12M
-rw-r--r-- 1 root root 618 Feb 25 23:21 Dockerfile
-rwxr-xr-x 1 root root 59 Feb 25 23:21 &lt;span class="code-green">deploy_docker.sh&lt;/span>
-rw-r--r-- 1 root root 155 Feb 25 23:21 docker-compose.yml 
-rw-r--r-- 1 root root 2.4M Feb 25 23:21 &lt;span class="code-red">initramfs.cpio.gz&lt;/span>
-rw-r--r-- 1 root root 6.2K Feb 25 23:21 kebab.c
drwxr-xr-x 7 root root 4.0K Feb 25 23:21 &lt;span class="code-blue">pc-bios&lt;/span>
-rwxr-xr-x 1 root root 396 Feb 25 23:21 &lt;span class="code-green">run.sh&lt;/span>
-rw-r--r-- 1 root root 9.6M Feb 25 23:21 vmlinuz-4.19.306
-rw-r--r-- 1 root root 176 Feb 25 23:21 xinetd

&lt;span class="code-red">#&lt;/span> &lt;span class="code-dark-green">cat&lt;/span> &lt;span class="mtku">run.sh&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#! /bin/bash&lt;/span>

&lt;span class="mtk8">qemu-system-x86_64&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-nographic&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-cpu&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">kvm64,+smep,+smap,check&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-kernel&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">/home/user/vmlinuz-4.19.306&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-initrd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">/home/user/initramfs.cpio.gz&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk4">M&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-L&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">/home/user/pc-bios/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-no-reboot&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-monitor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">none&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-sandbox&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">on,obsolete=deny,elevateprivileges=deny,spawn=deny&lt;/span>&lt;span class="mtk4">,resourcecontrol=deny&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">-append&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"console=ttyS0 oops=panic panic=1 quiet kaslr slub&lt;/span>&lt;span class="mtk4">_debug=- apparmor=0"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">\&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>In this case, we have the source code in C of the vulnerable kernel module (called &lt;code>safe_guard&lt;/code> as a &lt;em>device&lt;/em>). First, it defines some constants, global variables and data structures:&lt;/p></description></item><item><title>La casa de papel</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/la-casa-de-papel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/la-casa-de-papel/</guid><description>&lt;p>We are provided with a 64-bit binary called &lt;code>chall&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>In addition, we have the source code in C. The program is a notes manager with a fairly typical menu:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./chall&lt;/span>
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°í‚†¶‚†§‚†§‚†Ñ‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚¢º‚†Ä‚†Ä‚†í‚†í‚†§‚†§‚†§‚†§‚†§‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†ò‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†î‚†í‚†â‚†Å‚¢Ä‚£º‚°Ä‚†Ä‚¢†‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚°ß‚†ö‚†â‚¢π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†∞‚£ñ‚†ä‚†â‚†Ä‚†Ä‚†Ä‚£†‚†î‚†ö‚†â‚†Å‚¢Ä‚°á‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚£§‚†Ä‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†à‚†≥‚°Ñ‚†Ä‚†Ä‚†ã‚£†‚†ñ‚†Ç‚°†‚†ñ‚¢ô‚°á‚†Ä‚†à‚†â‚†â‚†â‚†â‚†ì‚†í‚†í‚†í‚†í‚†í‚†Ü‚†Ä‚†Ä‚£∑‚°Ä‚†â‚¢¶‚†Ä‚¢≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†à‚¢¶‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚†º‚°á‚†Ä‚†Ä‚†¶‚†§‚†§‚†Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†±‚°Ä‚†Ä‚†≥‚°Ä‚†ô‚£Ü‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚°Ñ‚†Ä‚¢Ä‚°§‚†ä‚†Å‚¢†‚°á‚†Ä‚††‚†§‚¢§‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ß‚°Ä‚†ô‚¢Ñ‚†Ä‚†±‚†Ñ‚†à‚†≥‚°Ñ‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚°Ñ‚†Ä‚†Ä‚°†‚†î‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£Ñ‚£Ä‚£Ä‚£Å‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†±‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ò‚£¶
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚°∏‚†Ä‚†Ä‚†∞‚£Ñ‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†É‚¢Ä‚£†‚†¥‚†õ‚†â‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†ô‚†í‚†Ä‚†Ä‚†Ä‚††‚°á‚£†‚†î‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ñ‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†í‚†≤‚†§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ë‚†¢‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£é‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¢‚†§‚£Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢°‚†â‚†ô‚†í‚†§‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†∂‚†í‚†ä‚†â‚†â‚†â‚†ì‚†¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†≤‚¢Ñ‚°Ä‚†Ä‚†Ä‚°é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†≤‚£º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä

What would you like to do?
[0] Create new note.
[1] Edit existing note.
[2] Read existing note.
[3] Throw note to the bin.
[4] Exit.
&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>First, it is convenient to know that we have the following data structures:&lt;/p></description></item><item><title>Noleak</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/noleak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/noleak/</guid><description>&lt;p>We are provided a 64-bit binary called &lt;code>noleak&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>Its decompiled C source code is pretty simple:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk1">undefined8 &lt;/span>&lt;span class="mtk8">_&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> undefined8 unaff_RBP;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> unaff_RBP;&lt;/span>
&lt;span class="mtk1">}&lt;/span>


&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">FUN_00401060&lt;/span>&lt;span class="mtk1">(FILE &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">param_1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">param_2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">param_3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">size_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">param_4&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setvbuf&lt;/span>&lt;span class="mtk1">(param_1, param_2, param_3, param_4);&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1">undefined8 &lt;/span>&lt;span class="mtk8">vuln&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> undefined8 param_10;&lt;/span>
&lt;span class="mtk1"> undefined8 local_12;&lt;/span>
&lt;span class="mtk1"> undefined2 local_a;&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> local_12 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_a &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gets&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">local_12);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> param_10;&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1">undefined8 &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_1&lt;/span>&lt;span class="mtk1">, undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_2&lt;/span>&lt;span class="mtk1">, undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_3&lt;/span>&lt;span class="mtk1">, undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_4&lt;/span>&lt;span class="mtk1">, undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_5&lt;/span>&lt;span class="mtk1">, undefined8 &lt;/span>&lt;span class="mtk9 mtki">param_6&lt;/span>&lt;span class="mtk1">) {&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">FUN_00401060&lt;/span>&lt;span class="mtk1">(stdin, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, param_5, param_6, param_2);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">FUN_00401060&lt;/span>&lt;span class="mtk1">(stdout, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">FUN_00401060&lt;/span>&lt;span class="mtk1">(stderr, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">vuln&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Basically, we have a program that uses &lt;code>gets&lt;/code> in a 10-byte buffer (&amp;quot;&lt;code>undefined8&lt;/code> + &lt;code>undefined2&lt;/code>&amp;quot;). Since &lt;code>gets&lt;/code> does not verify the size of the buffer, we have a clear Buffer Overflow vulnerbility.&lt;/p></description></item><item><title>PICtureThis</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/picturethis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/picturethis/</guid><description>&lt;p>In this challenge they give us a Windows PE called &lt;code>main.exe&lt;/code> and an encrypted DLL (&lt;code>ciphered.dll&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="code-dark-blue">*&lt;/span>
ciphered.dll: data
main.exe: PE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="analyzing-mainexe">Analyzing &lt;code>main.exe&lt;/code>&lt;/h2>
&lt;p>At the moment, we can start by opening &lt;code>main.exe&lt;/code> in Ghidra and look at the strings. We quickly see one that indicates how the program has to be executed &lt;code>main.exe&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Funcionamiento: ./reto.exe &amp;lt;input_string&amp;gt; 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we look for references to this string, we will reach the main function:&lt;/p></description></item><item><title>Quememu</title><link>https://7rocky.github.io/en/ctf/other/hackon-ctf/quememu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hackon-ctf/quememu/</guid><description>&lt;p>In this challenge they give us a PCI device (Peripheral Component interconnect) that communicates by MMIO (Memory-mapped I/O). This device has been added to the &lt;code>qemu&lt;/code> codebase and they also give us the compiled binary and a &lt;code>diff.txt&lt;/code> file with the added differences:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-red">#&lt;/span> &lt;span class="code-dark-green">ls&lt;/span> -l
total 90964
-rw-rw-r-- 1 root root 718 Feb 13 21:42 Dockerfile
-rwxrwxr-x 1 root root 59 Feb 13 21:42 &lt;span class="code-green">deploy_docker.sh&lt;/span>
-rw-rw-r-- 1 root root 5494 Feb 13 21:41 diff.txt
-rw-rw-r-- 1 root root 151 Feb 13 21:42 docker-compose.yml
-rw-rw-r-- 1 root root 26 Feb 13 21:42 flag
-rw-r--r-- 1 root root 1320526 Feb 13 21:43 &lt;span class="code-red">initramfs.cpio.gz&lt;/span>
drwxrwxr-x 7 root root 4096 Feb 13 21:43 &lt;span class="code-blue">pc-bios&lt;/span>
-rwxrwxr-x 1 root root 76179320 Feb 13 21:43 &lt;span class="code-green">qemu-system-x86_64&lt;/span>
-rwxrwxr-x 1 root root 331 Feb 13 21:43 &lt;span class="code-green">run.sh&lt;/span>
-rw------- 1 root root 11614792 Feb 13 21:42 vmlinuz-5.15.0-92-generic 
-rw-rw-r-- 1 root root 176 Feb 13 21:42 xinetd
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>In the differences, we can see the file &lt;code>quememu.c&lt;/code>, which represents the source code of the vulnerable device. In this challenge we have to exploit the vulnerable PCI device to escape &lt;code>qemu&lt;/code>.&lt;/p></description></item></channel></rss>