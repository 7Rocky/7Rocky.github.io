<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Securinets CTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/securinets-ctf/</link><description>Recent content in Securinets CTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/securinets-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Farfour Post Quantom</title><link>https://7rocky.github.io/en/ctf/other/securinets-ctf/farfour-post-quantom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/securinets-ctf/farfour-post-quantom/</guid><description>&lt;p>We are given the Python source code of a server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SystemRandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">GF&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">polys&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">matrices&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>

&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">SystemRandom&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">shuffle&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">shuffle&lt;/span>
&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randint&lt;/span>
&lt;span class="mtk1">randrange&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randrange&lt;/span>
&lt;span class="mtk1">uniform&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">randrange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">GF&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Secret.txt"&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk4">'rb'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">16&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>



&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"encrypted_flag"&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span>&lt;span class="mtk4">"IV"&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()})&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_hint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">vec&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">mat&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Pub_matrix&lt;/span>&lt;span class="mtk7">*&lt;/span>&lt;span class="mtk9 mtki">vec&lt;/span>&lt;span class="mtk1">).to_Matrix()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">])&lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">shuffle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"hint"&lt;/span>&lt;span class="mtk1">:[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">]})&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_secret&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">Secret_matrix&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">secret_vetor&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">([[&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">))] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">],(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">public_vector&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">Secret_matrix&lt;/span>&lt;span class="mtk7">*&lt;/span>&lt;span class="mtk1">secret_vetor&lt;/span>&lt;span class="mtk1">).to_Matrix()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"secret"&lt;/span>&lt;span class="mtk1">:[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">public_vector&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]})&lt;/span>


&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"G"&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)}))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[[&lt;/span>&lt;span class="mtk1">uniform&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Pub_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">([[&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk1">],(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk1">,(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># to make it easier for you &amp;lt;3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Choose an option&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You need to choose an option"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk4">"get_flag"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk4">"get_hint"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"vector"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"vector"&lt;/span>&lt;span class="mtk1">])&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">16&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vec&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[[&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">))] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"vector"&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">input_vector&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">vec&lt;/span>&lt;span class="mtk1">,(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">get_hint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">input_vector&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">Pub_matrix&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk4">"get_secret"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">get_secret&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk4">"reset_connection"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"G"&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)}))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[[&lt;/span>&lt;span class="mtk1">uniform&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Pub_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">([[&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk6">257&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk1">],(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">DomainMatrix&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Secret_matrix&lt;/span>&lt;span class="mtk1">,(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Nothing that we have Right now "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"dont try something stupid"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, there are two external files we are not given (&lt;code>Secret.txt&lt;/code> and &lt;code>flag.txt&lt;/code>):&lt;/p></description></item><item><title>PolyLCG</title><link>https://7rocky.github.io/en/ctf/other/securinets-ctf/polylcg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/securinets-ctf/polylcg/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>


&lt;span class="mtk1">xcoeff&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">22208811655020598734032926383525632836720477880970&lt;/span>&lt;span class="mtk6">00474246472547036149880673794935190953317495413822&lt;/span>&lt;span class="mtk6">51605173550118399648467393842687480378794689705591&lt;/span>&lt;span class="mtk6">1986&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">37808680712351602153671997709526569727095109831465&lt;/span>&lt;span class="mtk6">03211692869296836254519620768737356081836837102329&lt;/span>&lt;span class="mtk6">62666096246833356205012142793576147103936228780294&lt;/span>&lt;span class="mtk6">1597&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">49024134243184505783320227100238159920300309404320&lt;/span>&lt;span class="mtk6">88134156375736636296016273860394626141407089100644&lt;/span>&lt;span class="mtk6">22536412930570623370826700997678371959812630055226&lt;/span>&lt;span class="mtk6">4686&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1">ycoeff&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">10133630993576627916260025550504106878405253409844&lt;/span>&lt;span class="mtk6">19362060833812997868523627836202926635369000695519&lt;/span>&lt;span class="mtk6">48180743873903504725042832919521993704414432957904&lt;/span>&lt;span class="mtk6">07675&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">33640002395968055007884391525875869886944736127704&lt;/span>&lt;span class="mtk6">20810400457954622820421525205173981972752548906690&lt;/span>&lt;span class="mtk6">77596023856439545936981539793340574917418296756399&lt;/span>&lt;span class="mtk6">9094&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">51844665646041506834477157199619199897187969685667&lt;/span>&lt;span class="mtk6">45874607480183961791804239357212974694797397047787&lt;/span>&lt;span class="mtk6">50359084323452649241445847888262203236460379788869&lt;/span>&lt;span class="mtk6">5699&lt;/span>&lt;span class="mtk1">]&lt;/span> 
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">10369539704979520345376943788090457296701518777268&lt;/span>&lt;span class="mtk6">11312237644347493007361279529769118559778947397378&lt;/span>&lt;span class="mtk6">94673031216391400645047829279970224199137219788577&lt;/span>&lt;span class="mtk6">64263&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">LCG&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">xcoeffs&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">ycoeffs&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xcoeffs&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk9 mtki">xcoeffs&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ycoeffs&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk9 mtki">ycoeffs&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xstate&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ystate&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xstate&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xcoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xcoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xstate&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xcoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xstate&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ystate&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ycoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ycoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ystate&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ycoeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ystate&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bin_msg&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">map&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk7 mtki">:0512b&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bin_msg&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">xstate&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ystate&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>
&lt;span class="mtk1"> &lt;/span>


&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"Securinets{??????????????????????????????????????&lt;/span>&lt;span class="mtk4">?}"&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk4">"big"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">lcgCipher&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">LCG&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">xcoeff&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">ycoeff&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">lcgCipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"encrypted_flag="&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we are given the output of the program as &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>scrambler</title><link>https://7rocky.github.io/en/ctf/other/securinets-ctf/scrambler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/securinets-ctf/scrambler/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>scrambler&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the remote Glibc binary (&lt;code>libc.so_1.6&lt;/code>), so we can use &lt;a target="_blank" href="https://github.com/io12/pwninit">&lt;code>pwninit&lt;/code>&lt;/a> to patch the binary and use the provided library, so that the local and the remote exploits are equal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">pwninit&lt;/span> --libc &lt;span class="mtku">libc.so_1.6&lt;/span> --bin &lt;span class="mtku">scrambler&lt;/span> --no-template
&lt;span class="code-dark-blue">bin&lt;/span>: &lt;span class="code-blue">scrambler&lt;/span>
&lt;span class="code-dark-yellow">libc&lt;/span>: &lt;span class="code-yellow">libc.so.6&lt;/span>

&lt;span class="code-green">fetching linker&lt;/span>
&lt;span class="code-green">https://launchpad.net/ubuntu/+archive/primary/+files//libc6_2.31-0ubuntu9.7_amd64.deb&lt;/span>
&lt;span class="code-yellow">unstripping libc&lt;/span>
&lt;span class="code-green">https://launchpad.net/ubuntu/+archive/primary/+files//libc6-dbg_2.31-0ubuntu9.7_amd64.deb&lt;/span> 
&lt;span class="code-dark-green">setting &lt;span class="code-green">./ld-2.31.so&lt;/span> executable&lt;/span>
&lt;span class="code-dark-green">symlinking &lt;span class="code-green">libc.so.6&lt;/span> -&amp;gt; &lt;span class="code-green">libc.so_1.6&lt;/span>&lt;/span>
&lt;span class="code-dark-green">copying &lt;span class="code-green">scrambler&lt;/span> to &lt;span class="code-green">scrambler_patched&lt;/span>&lt;/span>
&lt;span class="code-dark-green">running patchelf on &lt;span class="code-green">scrambler_patched&lt;/span>&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Although the binary is stripped:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">scrambler&lt;/span>
scrambler: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=1343b327e61aac49d34bc641ccd80457126ef56e, for GNU/Linux 3.2.0, stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The reverse engineering process is not hard. After loading the binary in Ghidra and renaming variables and functions, we get this &lt;code>main&lt;/code> function:&lt;/p></description></item></channel></rss>