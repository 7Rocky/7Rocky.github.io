<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>m0leCon CTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/m0lecon-ctf/</link><description>Recent content in m0leCon CTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/m0lecon-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Sweep</title><link>https://7rocky.github.io/en/ctf/other/m0lecon-ctf/go-sweep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/m0lecon-ctf/go-sweep/</guid><description>We are given a binary called GoSweep:
$ file GoSweep GoSweep: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, Go BuildID=E8AKvGNouZccNMS4QzKx/gv5u3Bl0aF1q0beXnu2L/ZgB_HzVs3SKcdMITee5O/W5Hg19NTpamr0Is20WCh, stripped The binary runs a web server to play minesweeper. We have a nice UI on the remote URL:
It is a stripped binary compiled from Go, so it will be a bit hard to reverse-engineer. It is worth mentioning that this challenge was categorized as Reversing/Web, although I think it fits better in the Reversing side.</description></item></channel></rss>