<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTB UniCTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/</link><description>Recent content in HTB UniCTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/htb-unictf/index.xml" rel="self" type="application/rss+xml"/><item><title>AESWCM</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/aeswcm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/aeswcm/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>

&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AESWCM&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">aa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aa&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">tag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shuffle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AESWCM&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristics&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"What properties should your magic wand have?"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Property: "&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristic&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristic&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristics&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristics&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">characteristic&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristic_tag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">tag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characteristic&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">characteristic_tag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">characteristic_tag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Only different properties are allowed!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>First of all, the program initializes &lt;code>KEY&lt;/code> and &lt;code>IV&lt;/code> variables to 16 random bytes. After that, an instance of &lt;code>AESWCM&lt;/code> class is created.&lt;/p></description></item><item><title>Bank-er-smith</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/bank-er-smith/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/bank-er-smith/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span> &lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">KEY&lt;/span>

&lt;span class="mtk1">WELCOME&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">************** Welcome to the Gringatts Bank. ****&lt;/span>&lt;span class="mtk4">**********&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* Fortius Quo Fidelius &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">**************************************************&lt;/span>&lt;span class="mtk4">**********&lt;/span>
&lt;span class="mtk4">"""&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">():&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key_length&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">phi&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_length&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">key_length&lt;/span> &lt;span class="mtk5">//&lt;/span> &lt;span class="mtk6">2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">prime_length&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">prime_length&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">phi&lt;/span> &lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">-&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">-&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">encrypted_message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">encrypted_message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span> &lt;span class="mtk8 mtku">Bank&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">rsa&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">options&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"[1] Get public certificate.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[2] Calculate Hint.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[3] Unlock Vault.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span> &lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"vault_&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">: [&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"passphrase"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"empty"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span> &lt;span class="mtk1">i&lt;/span> &lt;span class="mtk5">in&lt;/span> &lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">100&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">rsa&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">initializeVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">passphrase&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">data&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">calculateHint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.p &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">enterVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">.encode() &lt;/span>&lt;span class="mtk5">==&lt;/span> &lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">].&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Failed to open the vault!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">__name__&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bank&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">Bank&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"vault_68"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">KEY&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">initializeVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"You managed to retrieve: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted_passphrase&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Now you are ready to enter the bank."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Hello, what would you like to do?&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">options&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">calculateHint&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Which vault would you like to open: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Enter the passphrase: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">enterVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Abort mission!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span> &lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Exiting"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span> &lt;span class="mtk8 mtku">Exception&lt;/span> &lt;span class="mtk5">as&lt;/span> &lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"An error occurred while processing data: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>Basically, the server uses RSA, creates a vault with an identifier &lt;code>&amp;quot;vault_68&amp;quot;&lt;/code> to store a secret key (&lt;code>passphrase&lt;/code>). Then the key is encrypted (&lt;code>encrypted_passphrase&lt;/code>) and the flag is stored in the vault:&lt;/p></description></item><item><title>BatchCraft Potions</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/batchcraft-potions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/batchcraft-potions/</guid><description>&lt;p>We are given this website:&lt;/p>
&lt;p>&lt;img alt="BatchCraft Potions 1" src="https://7rocky.github.io/images/other/HTB%20UniCTF/BatchCraft-Potions-1.webp">&lt;/p>
&lt;h2 id="static-code-analysis">Static code analysis&lt;/h2>
&lt;p>We are provided with the JavaScript source code of the web application, built with Node.js and Express JS. This is &lt;code>index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'express'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">path&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'path'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">cookieParser&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'cookie-parser'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> nunjucks &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'nunjucks'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> routes &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'./routes'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> Database &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'./database'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">global&lt;/span>&lt;span class="mtk1">.db &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">new&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Database&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">json&lt;/span>&lt;span class="mtk1">());&lt;/span>
&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">cookieParser&lt;/span>&lt;span class="mtk1">());&lt;/span>

&lt;span class="mtk1">nunjucks.&lt;/span>&lt;span class="mtk8">configure&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'views'&lt;/span>&lt;span class="mtk1">, {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">autoescape&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">express&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">app&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'views'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'./views'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/static'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">static&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">path&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">resolve&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'static'&lt;/span>&lt;span class="mtk1">)));&lt;/span>
&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'etag'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">false&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">routes&lt;/span>&lt;span class="mtk1">());&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">all&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'*'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">404&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'404 page not found'&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">async&lt;/span>&lt;span class="mtk1"> () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">global&lt;/span>&lt;span class="mtk1">.db.&lt;/span>&lt;span class="mtk8">connect&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">global&lt;/span>&lt;span class="mtk1">.db.&lt;/span>&lt;span class="mtk8">migrate&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">listen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'0.0.0.0'&lt;/span>&lt;span class="mtk1">, () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">console&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">log&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Listening on port 1337'&lt;/span>&lt;span class="mtk1">));&lt;/span> 
&lt;span class="mtk1">})();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This is a normal script. It points to &lt;code>routes/index.js&lt;/code> and &lt;code>database.js&lt;/code>.&lt;/p></description></item><item><title>Curse Breaker</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/curse-breaker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/curse-breaker/</guid><description>&lt;p>We are given a binary called &lt;code>breaker&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">breaker&lt;/span>
breaker: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=276c71525dd765da538440a4615fa5b717e331ad, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>Using Ghidra, we can read the decompiled source code in C. This is the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">size_t&lt;/span>&lt;span class="mtk1"> newline_index;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> i5;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> magic_word[&lt;/span>&lt;span class="mtk6">50&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> i;&lt;/span>

&lt;span class="mtk1"> magic_word._0_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._8_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._16_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._24_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._32_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._40_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> magic_word._48_2_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Say the magic word: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(magic_word, &lt;/span>&lt;span class="mtk6">50&lt;/span>&lt;span class="mtk1">, stdin);&lt;/span>
&lt;span class="mtk1"> newline_index &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strcspn&lt;/span>&lt;span class="mtk1">(magic_word, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> magic_word[newline_index] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\0&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">install_filter&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> i &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> i5 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) (i &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (magic_word[i5] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\0&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">syscall&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">258&lt;/span>&lt;span class="mtk1">, (ulong) i, (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) magic_word[i5], (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) magic_word[i5 &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) magic_word[i5 &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">], (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) magic_word[i5 &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">], (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) magic_word[i5 &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">]);&lt;/span> 
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Free at last!"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Basically, the program asks for a magic word, then calls &lt;code>install_filter&lt;/code> and finally executes weird &lt;code>syscall&lt;/code> instructions.&lt;/p></description></item><item><title>Fake News</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/fake-news/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/fake-news/</guid><description>&lt;p>We are given a folder named &lt;code>html&lt;/code> with a lot files from a WordPress server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ls&lt;/span>
index.php wp-activate.php &lt;span class="code-blue code-bg-green">wp-blogs&lt;/span> wp-config-sample.php wp-cron.php wp-load.php wp-settings.php xmlrpc.php 
license.txt &lt;span class="code-blue">wp-admin&lt;/span> wp-comments-post.php wp-config.php &lt;span class="code-blue">wp-includes&lt;/span> wp-login.php wp-signup.php
readme.html wp-blog-header.php wp-config-docker.php &lt;span class="code-blue">wp-content&lt;/span> wp-links-opml.php wp-mail.php wp-trackback.php
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="basic-inspection">Basic inspection&lt;/h2>
&lt;p>Obviously, &lt;code>wp-blogs&lt;/code> stands out, so let&amp;rsquo;s examine files that are inside:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ls&lt;/span> &lt;span class="mtku">wp-blogs&lt;/span>
&lt;span class="code-blue code-bg-green">2022&lt;/span>

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ls&lt;/span> &lt;span class="mtku">wp-blogs/2022/&lt;/span>
&lt;span class="code-blue code-bg-green">11&lt;/span>

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ls&lt;/span> &lt;span class="mtku">wp-blogs/2022/11/&lt;/span>
index.php style.css

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">du&lt;/span> -h wp-blogs/2022/11/&lt;span class="code-dark-blue">*&lt;/span>
304K	wp-blogs/2022/11/index.php 
8.0K	wp-blogs/2022/11/style.css
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The file &lt;code>wp-blogs/2022/11/index.php&lt;/code> is suspicious because it is huge and has only 101 lines:&lt;/p></description></item><item><title>Great Old Talisman</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/great-old-talisman/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/great-old-talisman/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>great_old_talisman&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open the binary in Ghidra, we will see this decompiled C source code for the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> in_FS_OFFSET;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> n;&lt;/span>
&lt;span class="mtk1"> undefined8 canary;&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> canary &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(undefined8 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) (in_FS_OFFSET &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">28&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">This Great Old Talisman will protect you from the &lt;/span>&lt;span class="mtk4">evil powers of zombies!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">Do you want to enchant it with a powerful spell? (&lt;/span>&lt;span class="mtk4">1 -&amp;gt; Yes, 0 -&amp;gt; No)&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__isoc99_scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">n);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Spell: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, talis &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">) n &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// WARNING: Subroutine does not return&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">520&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The function is so simple, it asks for an integer number &lt;code>n&lt;/code> (supposed to be just &lt;code>0&lt;/code> or &lt;code>1&lt;/code>) and then allows us to enter 2 bytes at &lt;code>talis + 8 * n&lt;/code>. The variable &lt;code>talis&lt;/code> is global, and after that, the program calls &lt;code>exit&lt;/code>.&lt;/p></description></item><item><title>Mayday Mayday</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/mayday-mayday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/mayday-mayday/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alpha&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk6">9&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">delta&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk6">4&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">delta&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alpha&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">φ&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'N = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'e = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'c = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'dp = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'dq = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have the result in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>MSS</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/mss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/mss/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MSS&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">d&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">poly&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'False'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'reason'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'This scheme is intended for less users.'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'False'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'reason'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Enough shares for today.'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'True'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">poly&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">)}&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk4">'enc_flag'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()}&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4"># # ##### ##### # ### &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4">## ## # # # # ## # # &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # ##### ##### # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # # ## # # &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # ##### ##### ## ##### ## ###&lt;/span>

&lt;span class="mtk4">This is a secure secret sharing scheme with really&lt;/span>&lt;span class="mtk4"> small threshold. We are pretty sure the key is se&lt;/span>&lt;span class="mtk4">cure...&lt;/span> 
&lt;span class="mtk4"> """&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">Send in JSON format any of the following commands.&lt;/span>

&lt;span class="mtk4"> - Get your share&lt;/span>
&lt;span class="mtk4"> - Encrypt flag&lt;/span>
&lt;span class="mtk4"> - Exit&lt;/span>

&lt;span class="mtk4">query = """&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MSS&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">19&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">()))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'command'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'command'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'get_share'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Please send your user ID.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'encrypt_flag'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[+] Here is your encrypted flag : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'exit'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[+] Thank you for using our service. Bye! :)'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Unknown command:('&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">TypeError&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">error&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">error&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Make sure your JSON query is properly formatte&lt;/span>&lt;span class="mtk4">d.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The challenge creates a polynomial with random coefficients, where the &lt;code>key&lt;/code> is the independent term:&lt;/p></description></item><item><title>MSS Revenge</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/mss-revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/mss-revenge/</guid><description>&lt;p>This challenge is the same as &lt;a target="_blank" href="../mss">MSS&lt;/a>, with a patched unintended solution.&lt;/p>
&lt;h2 id="review-of-the-challenge">Review of the challenge&lt;/h2>
&lt;p>The server creates a polynomial with random 256-bit coefficients:&lt;/p>
&lt;p class="scroll">
$$
P(x) = \mathrm{key} + a_1 x + a_2 x^2 + \dots + a_{30} x^{30}
$$
&lt;/p>

&lt;p>The objective is to find $\mathrm{key}$, which is used to derive an AES key to encrypt the flag. The server allows us to evaluate the polynomial 19 times with values of $0 &amp;lt; x \leqslant 2^{15}$.&lt;/p></description></item><item><title>Potion Master</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/potion-master/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/potion-master/</guid><description>&lt;p>We are given a Haskell script called &lt;code>potion.hs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span> Data.Char (&lt;span class="mtk8">ord&lt;/span>)
&lt;span class="mtk5">import&lt;/span> Data.Bits (&lt;span class="mtk8">xor&lt;/span>)

&lt;span class="mtk3">-- Complete the incantation...&lt;/span>
flag &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"HTB{XXX}"&lt;/span>

&lt;span class="mtk8">extractFlag&lt;/span> &lt;span class="mtk5">::&lt;/span> &lt;span class="mtk7">String&lt;/span> &lt;span class="mtk5">-&amp;gt;&lt;/span> &lt;span class="mtk7">String&lt;/span>
extractFlag (s&lt;span class="mtk5">:&lt;/span>rest)
 &lt;span class="mtk5">|&lt;/span> s &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'H'&lt;/span> &lt;span class="mtk5">||&lt;/span> s &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'T'&lt;/span> &lt;span class="mtk5">||&lt;/span> s &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'B'&lt;/span>
 &lt;span class="mtk5">=&lt;/span> extractFlag rest
 &lt;span class="mtk5">|&lt;/span> s &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'{'&lt;/span> &lt;span class="mtk5">&amp;&amp;&lt;/span> last rest &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'}'&lt;/span>
 &lt;span class="mtk5">=&lt;/span> init rest
 &lt;span class="mtk5">|&lt;/span> otherwise &lt;span class="mtk5">=&lt;/span> error (&lt;span class="mtk4">"Invalid format"&lt;/span>)

&lt;span class="mtk8">chunks&lt;/span> &lt;span class="mtk5">::&lt;/span> &lt;span class="mtk7">Int&lt;/span> &lt;span class="mtk5">-&amp;gt;&lt;/span> [a] &lt;span class="mtk5">-&amp;gt;&lt;/span> [[a]]
chunks n l
 &lt;span class="mtk5">|&lt;/span> n &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">0&lt;/span> &lt;span class="mtk5">=&lt;/span> []
 &lt;span class="mtk5">|&lt;/span> n &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">1&lt;/span> &lt;span class="mtk5">=&lt;/span> [[x] &lt;span class="mtk5">|&lt;/span> x &lt;span class="mtk5">&amp;lt;-&lt;/span> l]
 &lt;span class="mtk5">|&lt;/span> length l &lt;span class="mtk5">&amp;lt;=&lt;/span> n &lt;span class="mtk5">=&lt;/span> [l]
 &lt;span class="mtk5">|&lt;/span> otherwise &lt;span class="mtk5">=&lt;/span> [take n l] &lt;span class="mtk5">++&lt;/span> (chunks n (drop n l))

&lt;span class="mtk8">takeLast&lt;/span> &lt;span class="mtk5">::&lt;/span> &lt;span class="mtk7">Int&lt;/span> &lt;span class="mtk5">-&amp;gt;&lt;/span> [a] &lt;span class="mtk5">-&amp;gt;&lt;/span> [a]
takeLast n &lt;span class="mtk5">=&lt;/span> reverse &lt;span class="mtk5">.&lt;/span> take n &lt;span class="mtk5">.&lt;/span> reverse

a &lt;span class="mtk5">=&lt;/span> [&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">43&lt;/span>, &lt;span class="mtk6">61&lt;/span>, &lt;span class="mtk6">58&lt;/span>, &lt;span class="mtk6">5&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">4&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">11&lt;/span>, &lt;span class="mtk6">64&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">40&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">43&lt;/span>, &lt;span class="mtk6">61&lt;/span>, &lt;span class="mtk6">62&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">51&lt;/span>, &lt;span class="mtk6">46&lt;/span>, &lt;span class="mtk6">15&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">49&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">44&lt;/span>, &lt;span class="mtk6">47&lt;/span>, &lt;span class="mtk6">4&lt;/span>, &lt;span class="mtk6">6&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">7&lt;/span>, &lt;span class="mtk6">47&lt;/span>, &lt;span class="mtk6">7&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">59&lt;/span>, &lt;span class="mtk6">52&lt;/span>, &lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">15&lt;/span>, &lt;span class="mtk6">11&lt;/span>, &lt;span class="mtk6">7&lt;/span>, &lt;span class="mtk6">61&lt;/span>, &lt;span class="mtk6">0&lt;/span>] 
b &lt;span class="mtk5">=&lt;/span> [&lt;span class="mtk6">6&lt;/span>, &lt;span class="mtk6">106&lt;/span>, &lt;span class="mtk6">10&lt;/span>, &lt;span class="mtk6">0&lt;/span>, &lt;span class="mtk6">119&lt;/span>, &lt;span class="mtk6">52&lt;/span>, &lt;span class="mtk6">51&lt;/span>, &lt;span class="mtk6">101&lt;/span>, &lt;span class="mtk6">0&lt;/span>, &lt;span class="mtk6">0&lt;/span>, &lt;span class="mtk6">15&lt;/span>, &lt;span class="mtk6">48&lt;/span>, &lt;span class="mtk6">116&lt;/span>, &lt;span class="mtk6">22&lt;/span>, &lt;span class="mtk6">10&lt;/span>, &lt;span class="mtk6">58&lt;/span>, &lt;span class="mtk6">125&lt;/span>, &lt;span class="mtk6">100&lt;/span>, &lt;span class="mtk6">102&lt;/span>, &lt;span class="mtk6">33&lt;/span>]
c &lt;span class="mtk5">=&lt;/span> [&lt;span class="mtk6">304&lt;/span>, &lt;span class="mtk6">357&lt;/span>, &lt;span class="mtk6">303&lt;/span>, &lt;span class="mtk6">320&lt;/span>, &lt;span class="mtk6">304&lt;/span>, &lt;span class="mtk6">307&lt;/span>, &lt;span class="mtk6">349&lt;/span>, &lt;span class="mtk6">305&lt;/span>, &lt;span class="mtk6">257&lt;/span>, &lt;span class="mtk6">337&lt;/span>, &lt;span class="mtk6">340&lt;/span>, &lt;span class="mtk6">309&lt;/span>, &lt;span class="mtk6">428&lt;/span>, &lt;span class="mtk6">270&lt;/span>, &lt;span class="mtk6">66&lt;/span>]
d &lt;span class="mtk5">=&lt;/span> [&lt;span class="mtk6">52&lt;/span>, &lt;span class="mtk6">52&lt;/span>, &lt;span class="mtk6">95&lt;/span>, &lt;span class="mtk6">95&lt;/span>, &lt;span class="mtk6">110&lt;/span>, &lt;span class="mtk6">49&lt;/span>, &lt;span class="mtk6">51&lt;/span>, &lt;span class="mtk6">51&lt;/span>, &lt;span class="mtk6">95&lt;/span>, &lt;span class="mtk6">110&lt;/span>, &lt;span class="mtk6">110&lt;/span>, &lt;span class="mtk6">53&lt;/span>]

&lt;span class="mtk8">checkFlag&lt;/span> &lt;span class="mtk5">::&lt;/span> &lt;span class="mtk7">String&lt;/span> &lt;span class="mtk5">-&amp;gt;&lt;/span> &lt;span class="mtk7">Bool&lt;/span>
checkFlag flag &lt;span class="mtk5">=&lt;/span>
 length content &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">58&lt;/span> &lt;span class="mtk5">&amp;&amp;&lt;/span>
 all (&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">True&lt;/span>) (map (&lt;span class="mtk5">\&lt;/span> (l,r) &lt;span class="mtk5">-&amp;gt;&lt;/span> l &lt;span class="mtk5">==&lt;/span> r) (zip one a)) &lt;span class="mtk5">&amp;&amp;&lt;/span>
 all (&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">True&lt;/span>) (map (&lt;span class="mtk5">\&lt;/span> (l,r) &lt;span class="mtk5">-&amp;gt;&lt;/span> l &lt;span class="mtk5">==&lt;/span> r) (zip two b)) &lt;span class="mtk5">&amp;&amp;&lt;/span>
 all (&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">True&lt;/span>) (map (&lt;span class="mtk5">\&lt;/span> (l,r) &lt;span class="mtk5">-&amp;gt;&lt;/span> l &lt;span class="mtk5">==&lt;/span> r) (zip three c)) &lt;span class="mtk5">&amp;&amp;&lt;/span>
 all (&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk6">True&lt;/span>) (map (&lt;span class="mtk5">\&lt;/span> (l,r) &lt;span class="mtk5">-&amp;gt;&lt;/span> l &lt;span class="mtk5">==&lt;/span> r) (zip four d))
 &lt;span class="mtk5">where&lt;/span> content &lt;span class="mtk5">=&lt;/span> map ord (extractFlag flag)
 one &lt;span class="mtk5">=&lt;/span> map (&lt;span class="mtk5">\&lt;/span> [l, r] &lt;span class="mtk5">-&amp;gt;&lt;/span> (l &lt;span class="mtk5">-&lt;/span> r)) (chunks &lt;span class="mtk6">2&lt;/span> content)
 two &lt;span class="mtk5">=&lt;/span> map (foldr xor &lt;span class="mtk6">0&lt;/span>) (chunks &lt;span class="mtk6">3&lt;/span> content)
 three &lt;span class="mtk5">=&lt;/span> map (foldr (+) &lt;span class="mtk6">0&lt;/span>) (chunks &lt;span class="mtk6">4&lt;/span> content)
 four &lt;span class="mtk5">=&lt;/span> map head (chunks &lt;span class="mtk6">5&lt;/span> content)

main &lt;span class="mtk5">=&lt;/span> putStrLn (&lt;span class="mtk5">if&lt;/span> (checkFlag flag)
 &lt;span class="mtk5">then&lt;/span> &lt;span class="mtk4">"The spell went off without a hitch!"&lt;/span>
 &lt;span class="mtk5">else&lt;/span> &lt;span class="mtk4">"You disappear in a puff of smoke!"&lt;/span>
 )
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="running-haskell">Running Haskell&lt;/h2>
&lt;p>Haskell is a programming language for functional programming. I have never used Haskell, so let&amp;rsquo;s start by running the official Docker image of Haskell and run the above script:&lt;/p></description></item><item><title>RiseFromTheDead</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/risefromthedead/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/risefromthedead/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>rise&lt;/code> and also a core file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="code-blue">*&lt;/span>
core: ELF 64-bit LSB core file, x86-64, version 1 (SYSV), SVR4-style, from './rise flag', real uid: 0, effective uid: 0, real gid: 0, effective gid: 0, execfn: './rise', platform: 'x86_64'
rise: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=8341bf2064b7903b6e87d69c63a1849338d3f1e6, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The core file corresponds to an execution of &lt;code>rise&lt;/code> (actually, the command was &lt;code>./rise flag&lt;/code>).&lt;/p></description></item><item><title>Sacred Scrolls</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/sacred-scrolls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/sacred-scrolls/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>sacred_scrolls&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open the binary in Ghidra, we will see this decompiled C source code for the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> undefined8 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">puVar1;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> i;&lt;/span>
&lt;span class="mtk1"> byte bVar2;&lt;/span>
&lt;span class="mtk1"> undefined wizard_tag[&lt;/span>&lt;span class="mtk6">1528&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> undefined8 uStack_110;&lt;/span>
&lt;span class="mtk1"> undefined8 target;&lt;/span>
&lt;span class="mtk1"> undefined8 local_100;&lt;/span>
&lt;span class="mtk1"> undefined8 local_f8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_f0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_e8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_e0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_d8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_d0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_c8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_c0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_b8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_b0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_a8;&lt;/span>
&lt;span class="mtk1"> undefined8 local_a0;&lt;/span>
&lt;span class="mtk1"> undefined8 local_98;&lt;/span>
&lt;span class="mtk1"> undefined8 local_90;&lt;/span>
&lt;span class="mtk1"> undefined8 local_88;&lt;/span>
&lt;span class="mtk1"> undefined8 local_80;&lt;/span>
&lt;span class="mtk1"> undefined8 local_78;&lt;/span>
&lt;span class="mtk1"> undefined8 local_70;&lt;/span>
&lt;span class="mtk1"> undefined8 local_68;&lt;/span>
&lt;span class="mtk1"> undefined8 local_60;&lt;/span>
&lt;span class="mtk1"> undefined8 local_58;&lt;/span>
&lt;span class="mtk1"> undefined8 local_50;&lt;/span>
&lt;span class="mtk1"> undefined8 local_48;&lt;/span>
&lt;span class="mtk1"> undefined &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">wizard_tag_copy;&lt;/span>
&lt;span class="mtk1"> undefined8 local_38;&lt;/span>
&lt;span class="mtk1"> undefined4 local_2c;&lt;/span>

&lt;span class="mtk1"> bVar2 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> uStack_110 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">400ecc&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> uStack_110 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">400ed1&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> uStack_110 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">400edb&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">clean&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> uStack_110 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">400eec&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Enter your wizard tag: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> local_2c &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">600&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_38 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">5ff&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> wizard_tag_copy &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> wizard_tag;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, wizard_tag, &lt;/span>&lt;span class="mtk6">1535&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Interact with magic library &lt;/span>&lt;span class="mtk6">%s&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, wizard_tag_copy);&lt;/span> 
&lt;span class="mtk1"> puVar1 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">target;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">25&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">; i&lt;/span>&lt;span class="mtk5">--&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">puVar1 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> puVar1 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1 &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (ulong)bVar2 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">(), i &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> puVar1 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (undefined8 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk8">spell_read&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> target &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">puVar1;&lt;/span>
&lt;span class="mtk1"> local_100 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_f8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_f0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_e8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_e0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_d8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_d0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_c8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_c0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">9&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_b8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_b0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">b&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_a8 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">c&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_a0 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">d&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_98 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">e&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_90 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">f&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_88 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_80 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">11&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_78 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">12&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_70 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">13&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_68 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">14&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_60 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_58 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_50 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">17&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> local_48 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> puVar1[&lt;/span>&lt;span class="mtk6">24&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00401f50,&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">target);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">spell_upload&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">spell_save&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">target);&lt;/span>
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Here we are asked to enter wizard tag and then we have menu with three options:&lt;/p></description></item><item><title>Sacred Scrolls' Revenge</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/sacred-scrolls-revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/sacred-scrolls-revenge/</guid><description>&lt;p>This challenge is a fixed version of &lt;a target="_blank" href="../sacred-scrolls">Sacred Scrolls&lt;/a>. Almost all the program behavior is the same as in the previous version, so read that write-up before this one.&lt;/p>
&lt;p>They fixed the challenge due to an unintended solution (command injection):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./sacred_scrolls&lt;/span>


&lt;span class="code-blue"> ▄▞▀▀▀▜▄▖&lt;/span>
&lt;span class="code-blue"> ▗ ▖ ▗ ▖ ▗ ▖▟▞▖▘▗▖▚▘ ▝▀▄&lt;/span>
&lt;span class="code-blue"> ▖▝ ▘ ▝ ▝ ▝ ▘ ▝ ▝ ▝ ▘ ▝ ▖▌▀ ▖▖▚▘▝▗▝▝ ▗▝▄▖▘ ▘&lt;/span>
&lt;span class="code-blue"> ▗▗▞▘▚▝▝▝▗▝ ▘ ▖ ▗▚▖&lt;/span>
&lt;span class="code-blue"> ▗ ▖ ▗ ▗ ▖▗▄▜▝▚▝▝▖▘▘▝ ▖ ▖ ▘ ▗ ▖▛▞&lt;/span>
&lt;span class="code-blue"> ▖ ▖▘ ▖ ▗ ▘ ▖ ▗▝ ▗▄▞▚▗▗▘ ▝ ▖ ▖ ▖▘▀▀▖&lt;/span>
&lt;span class="code-blue"> ▖ ▗▖▛▚▗▝ ▖ ▗ ▝ ▝ ▘ ▖ ▘▗▗▗▝▌&lt;/span>
&lt;span class="code-blue"> ▗ ▗▄▞▀▚▝ ▖ ▖▝ ▖▝ ▖▗ ▖▘▝▗▗▄▞▘&lt;/span>
&lt;span class="code-blue"> ▖ ▝ ▗ ▖ ▄▞▀▚▗▝▝ ▖ ▘ ▘ ▗▝ ▖ ▘▗▗▝▖▞▞▌▜▐▐▖&lt;/span>
&lt;span class="code-blue"> ▗ ▘▄▖▀▀▗▝▝▗ ▝ ▗ ▘ ▖▖▘▖▝▗ ▚▝▖▖▌▌▌▙▞▌▀&lt;/span>
&lt;span class="code-blue"> ▘ ▄▞▞▀▗▝▞▝▖▝ ▘▝ ▖▘▖▖▘▞▝▖▚▚▐▐▟▟▞▘▘&lt;/span>
&lt;span class="code-blue"> ▖▝ ▄▖▛▀▖▞▖▌▘▘▝▖ ▖▝ ▗ ▝ ▖▗ ▘▖▖▖▞▐▗▚▚▙▙▛▀▝&lt;/span>
&lt;span class="code-blue"> ▄▄▜▚▙▄▄▀▝▗ ▄▝▝▘ ▘ ▘ ▘ ▗ ▖▗ ▝▖▄▐▐▐▟▟▜▜▝ ▘&lt;/span>
&lt;span class="code-blue"> ▐▟▛█▜▚▚▚▞▄▖▘ ▖ ▗ ▗ ▘▝ ▖▗▗▐▝▄▟▞▙█▐▝&lt;/span>
&lt;span class="code-blue"> ▐▚▛▞▜▚▟ ▝▚▚ ▘▝ ▝ ▝▗ ▖▘ ▗▝▝▖▞▖▌▙▜▙▙▀▘ ▗ ▝ ▗ ▘&lt;/span>
&lt;span class="code-blue"> ▜▐▚▐▐▜▟█▖ ▀▙▖▗ ▖▗▝ ▖▗ ▖▘▖▞▞▟▞▛▛▟▀ ▗ ▘ ▖&lt;/span>
&lt;span class="code-blue"> ▝▛▗ ▖▌▙▙█▘ ▗▚ ▖▗ ▗▗▗▗▚▐▐▐▞▛▟▞▛▝ ▗▝&lt;/span>
&lt;span class="code-blue"> █ ▖▗▀▝▝▛█▗ ▜▘▖▗▝▗▗▚▚▚▙▜▞▙▜▝ ▝ ▘ ▗ ▖&lt;/span>
&lt;span class="code-blue"> ▐▖▖ ▚ ▚▜▜▖▞▐▚▗▗▐▗▜▞▛▙▚▙▀ ▝ ▗ ▘ ▗&lt;/span>
&lt;span class="code-blue"> ▚▝▖▚▚▖▀▛▞▐▟▚▘▌▌▛▙▜▟▝▘ ▗ ▗&lt;/span>
&lt;span class="code-blue"> ▗ ▝▌▝▖▌▜▚▛▟█▛▙▜▞▛▛▞▘ ▖ ▝ ▖ ▗▝ ▘&lt;/span>
&lt;span class="code-blue"> ▝▙▗▐▐▐▜▜▙█▞▟▞▛▝ ▗ ▖ ▗ ▗ ▝&lt;/span>
&lt;span class="code-blue"> ▝▘▌▖▖▙▀▙▜▚▜▝ ▗ ▘&lt;/span>
&lt;span class="code-blue"> ▝▀▗▀▞▞▘▘ ▝ ▘ ▗▝ ▗ ▝&lt;/span>
&lt;span class="code-blue"> ▝ ▝ ▗▝ ▘ ▝ ▝ ▖▝&lt;/span>
&lt;span class="code-blue"> ▘ ▝&lt;/span>


&lt;span class="code-green">[+] All ⅀ ℙ ∉ ⎳ ⎳ ⅀ have been whiped out..&lt;/span>

&lt;span class="code-blue">Enter your wizard tag: asdf&lt;/span>

&lt;span class="code-blue">Interact with magic library asdf&lt;/span>

&lt;span class="code-blue">1. Upload ⅀ ℙ ∉ ⎳ ⎳&lt;/span>
&lt;span class="code-blue">2. Read ⅀ ℙ ∉ ⎳ ⎳&lt;/span>
&lt;span class="code-blue">2. Cast ⅀ ℙ ∉ ⎳ ⎳&lt;/span>
&lt;span class="code-blue">3. Leave&lt;/span>

&lt;span class="code-blue">&amp;gt;&amp;gt; 1&lt;/span>

&lt;span class="code-blue">[*] Enter file (it will be named spell.zip): '; /bin/sh; echo '&lt;/span> 

&lt;span class="code-blue">$ ls&lt;/span>
&lt;span class="code-blue">glibc sacred_scrolls sacred_scrolls_revenge solve.py&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="trying-the-previous-exploit">Trying the previous exploit&lt;/h2>
&lt;p>Let&amp;rsquo;s try to run the previous exploit on the updated program:&lt;/p></description></item><item><title>Spellbook</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/spellbook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/spellbook/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>spellbook&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open the binary in Ghidra, we will see this decompiled C source code for the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">size_t&lt;/span>&lt;span class="mtk1"> option;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">(), option &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">edit&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">goto&lt;/span>&lt;span class="mtk1"> LAB_001010e9;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">delete&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1">LAB_001010e9:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n%s&lt;/span>&lt;span class="mtk4">[-] You are not a wizard! You are a muggle!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_001017f7);&lt;/span> 
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we run the binary, it shows a typical menu for a heap exploitation challenge:&lt;/p></description></item><item><title>The Magic Informer</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/the-magic-informer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/the-magic-informer/</guid><description>&lt;p>We are given this website:&lt;/p>
&lt;p>&lt;img alt="The Magic Informer 1" src="https://7rocky.github.io/images/other/HTB%20UniCTF/The-Magic-Informer-1.webp">&lt;/p>
&lt;p>This time we don&amp;rsquo;t have source code available, so we must poke around with the website.&lt;/p>
&lt;h2 id="registering-a-new-account">Registering a new account&lt;/h2>
&lt;p>At the bottom of the page we can find a link to a registration form:&lt;/p>
&lt;p>&lt;img alt="The Magic Informer 2" src="https://7rocky.github.io/images/other/HTB%20UniCTF/The-Magic-Informer-2.webp">&lt;/p>
&lt;p>So we can register and then log in:&lt;/p>
&lt;p>&lt;img alt="The Magic Informer 3" src="https://7rocky.github.io/images/other/HTB%20UniCTF/The-Magic-Informer-3.webp">&lt;/p>
&lt;p>And we get access to our dashboard:&lt;/p>
&lt;p>&lt;img alt="The Magic Informer 4" src="https://7rocky.github.io/images/other/HTB%20UniCTF/The-Magic-Informer-4.webp">&lt;/p></description></item><item><title>Zombie Rolled</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/zombie-rolled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/zombie-rolled/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">fractions&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">prod&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>

&lt;span class="mtk3"># I hope no one cares about Kerckhoff's principle &lt;/span>&lt;span class="mtk3">:)&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> derive_public_key, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">.numerator &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">.denominator, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">denominator&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">numerator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">denominator&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">.to_bytes(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"big"&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">denominator&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">staticmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ar&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ar&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">super&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">raise&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid key pair"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">numerator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">prod&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">]))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">denominator&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">.to_bytes(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"big"&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">denominator&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">staticmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">nbits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">tuple&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">nbits&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> derive_public_key(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"pub = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># make sure it really works&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># mixing them :)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"mix = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have the result in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>Zombiedote</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/zombiedote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/zombiedote/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>zombiedote&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>We have a typical menu for a heap exploitation challenge:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./zombiedote&lt;/span>
&lt;span class="code-white">[ BioShield Solutions Research Institute ]&lt;/span>
&lt;span class="code-blue">Virus Concentration Levels Logging - Manual Mode: &lt;/span>&lt;span class="code-green">ON&lt;/span> 

&lt;span class="code-blue">[ MANUAL MODE LOGGING ]&lt;/span>
&lt;span class="code-white">[1] Create log&lt;/span>
&lt;span class="code-white">[2] Insert into log&lt;/span>
&lt;span class="code-white">[3] Delete log&lt;/span>
&lt;span class="code-white">[4] Edit log&lt;/span>
&lt;span class="code-white">[5] Inspect log&lt;/span>
&lt;span class="code-white">&amp;gt;&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we open the binary in Ghidra, we will see the decompiled C scource code for program. After setting up variable names and types and understanding the log structure, we can define the following &lt;code>struct&lt;/code> in Ghidra to improve code readability:&lt;/p></description></item><item><title>Zombienator</title><link>https://7rocky.github.io/en/ctf/other/htb-unictf/zombienator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-unictf/zombienator/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>zombienator&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open the binary in Ghidra, we will see this decompiled C source code for the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> ulong option;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">##########################&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># 1. Create Zombienator #&lt;/span>&lt;span class="mtk10">\ &lt;/span>&lt;span class="mtk4">n# 2. Remove Zombienator #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># 3. Display Zombienator #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># 4. Attack #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># 5. Exit #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"># #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">##########################&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt; &amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> option &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read_num&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">attack&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> option) &lt;/span>&lt;span class="mtk5">goto&lt;/span>&lt;span class="mtk1"> LAB_00101a2a;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">display&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> option) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">create&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">removez&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1">LAB_00101a2a:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Good luck!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// WARNING: Subroutine does not return&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">520&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>What we have is a typical menu from a heap exploitation challenge:&lt;/p></description></item></channel></rss>