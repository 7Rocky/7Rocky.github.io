<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HITCON CTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/hitcon-ctf/</link><description>Recent content in HITCON CTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/hitcon-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Share</title><link>https://7rocky.github.io/en/ctf/other/hitcon-ctf/share/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/hitcon-ctf/share/</guid><description>We are given the Python source code of the server:
#!/usr/bin/env python3 from Crypto.Util.number import isPrime, getRandomRange, bytes_to_long from typing import List import os, signal class SecretSharing: def __init__(self, p: int, n: int, secret: int): self.p = p self.n = n self.poly = [secret] + [getRandomRange(0, self.p - 1) for _ in range(n - 1)] def evaluate(self, x: int) -&amp;gt; int: return ( sum([self.poly[i] * pow(x, i, self.p) for i in range(len(self.</description></item></channel></rss>