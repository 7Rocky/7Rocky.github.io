<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>corCTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/corctf/</link><description>Recent content in corCTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/corctf/index.xml" rel="self" type="application/rss+xml"/><item><title>eyes</title><link>https://7rocky.github.io/en/ctf/other/corctf/eyes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/eyes/</guid><description>&lt;p>We are given the source code in SageMath that was used to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>

&lt;span class="mtk3"># my NEW and IMPROVED secret sharing scheme!! (now&lt;/span>&lt;span class="mtk3"> with multivariate quadratics)&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'rb'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> GF(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1024&lt;/span>

&lt;span class="mtk1">conv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">: matrix(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, [&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:][::&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">].&lt;/span>&lt;span class="mtk8">ljust&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'0'&lt;/span>&lt;span class="mtk1">))])&lt;/span> 

&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> random_matrix(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> random_matrix(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> matrix(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, [&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1">fn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: (&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">.T &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1">.T &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">fn&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">conv&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)))&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>fizzbuzz100</title><link>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz100/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz100/</guid><description>&lt;p>We are given the Python source code that is running on a server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/local/bin/python&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>

&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span> 

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Fizz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Buzz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server uses a classic RSA cryptosystem to encrypt the flag padded with 16 random bytes in both sides. We are given the public key $(n, e)$ and the ciphertext.&lt;/p></description></item><item><title>fizzbuzz101</title><link>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz101/</guid><description>&lt;p>We are given the Python source code that is running on a server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/local/bin/python&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>

&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span> 

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Fizz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Buzz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"101"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server uses a classic RSA cryptosystem to encrypt the flag padded with 16 random bytes in both sides. We are given the public key $(n, e)$ and the ciphertext.&lt;/p></description></item><item><title>fizzbuzz102</title><link>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/fizzbuzz102/</guid><description>&lt;p>We are given the Python source code that is running on a server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/local/bin/python&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbits&lt;/span>

&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span> 

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">845&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">845&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">lcg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">lcg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Fizz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Buzz"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"101"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server uses a classic RSA cryptosystem to encrypt the flag padded with 16 random bytes in both sides. We are given the public key $(n, e)$ and the ciphertext.&lt;/p></description></item><item><title>qcg-k</title><link>https://7rocky.github.io/en/ctf/other/corctf/qcg-k/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/qcg-k/</guid><description>&lt;p>We are provided with the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mod&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">mod&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mod&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">coeff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">coeff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>

&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">77897050769654696452572824710099972349639759246855&lt;/span>&lt;span class="mtk6">689360228775736949644730457&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16158503035655503650357438344334975980222051334857&lt;/span>&lt;span class="mtk6">74201606517271376232756943394544659860070576145673&lt;/span>&lt;span class="mtk6">18443589804609490097470597795752454605475440761932&lt;/span>&lt;span class="mtk6">24141560315438683650498045875098875194826053398028&lt;/span>&lt;span class="mtk6">81919203378413839610932130987808091904716923808523&lt;/span>&lt;span class="mtk6">52908229260181525214437879457705329043037761995619&lt;/span>&lt;span class="mtk6">65192760957166694834171210342487393282284747428088&lt;/span>&lt;span class="mtk6">01766316102903890282966551309635423015707512929643&lt;/span>&lt;span class="mtk6">20885583629718018592309286787991755761508229522018&lt;/span>&lt;span class="mtk6">48806616643615613562842355410104862578550863465661&lt;/span>&lt;span class="mtk6">73483927129032834896752299863418373866787603005300&lt;/span>&lt;span class="mtk6">35281499735458621466526116569619933854858318572221&lt;/span>&lt;span class="mtk6">77076627368030677&lt;/span> 
&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">89866657619542895003034422507140132572679585415226&lt;/span>&lt;span class="mtk6">25625218561169199279419042595142610100040988087502&lt;/span>&lt;span class="mtk6">08259072713647569854020199374642847037316899329291&lt;/span>&lt;span class="mtk6">30393203117636602178018507848785649354508800188743&lt;/span>&lt;span class="mtk6">71587199649965685742134884651107493812479234148805&lt;/span>&lt;span class="mtk6">68966421446025558841369539056808094203226399278549&lt;/span>&lt;span class="mtk6">32087382823071685758673790956107922949613967702162&lt;/span>&lt;span class="mtk6">72833435684440954774251862518243249608047971545524&lt;/span>&lt;span class="mtk6">86408381323764152209330976907010046956596096465462&lt;/span>&lt;span class="mtk6">23524993514082696236537467051490141237727571532781&lt;/span>&lt;span class="mtk6">80752939277436109738789404154406479625797746665884&lt;/span>&lt;span class="mtk6">10032713464066465703278494049801758321361976721665&lt;/span>&lt;span class="mtk6">2249367376800156&lt;/span>

&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">kPRNG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hsh&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">kPRNG&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">hsh&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">s&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"quotes.txt"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">quote&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">quote&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">quote&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">quote&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output &lt;code>qcgk_out.txt&lt;/code>:&lt;/p></description></item><item><title>two-wrongs</title><link>https://7rocky.github.io/en/ctf/other/corctf/two-wrongs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/corctf/two-wrongs/</guid><description>&lt;p>We are provided with the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> qiskit &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> QuantumCircuit, QuantumRegister, ClassicalRegiste&lt;/span>&lt;span class="mtk1">r, transpile&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> qiskit_aer &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> AerSimulator&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">numpy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">np&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">binascii&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">sys&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> flag &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> flag&lt;/span>

&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">sv_sim&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> AerSimulator(&lt;/span>&lt;span class="mtk9 mtki">method&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">"statevector"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">bit_idxs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">map&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Select a sensor index to remove from each bit: '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">split&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">' '&lt;/span>&lt;span class="mtk1">)))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">enc_byte&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit_encs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'08b'&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">sys&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">byteorder&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sensor_val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">enc_bit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sensor_val&lt;/span>&lt;span class="mtk1">.split(&lt;/span>&lt;span class="mtk4">' '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit_encs&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit_idxs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'?'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sensor_vals&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">bit_encs&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rand_bit_flip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.x(&lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.z(&lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">enc_bit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ClassicalRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ClassicalRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumCircuit(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.initialize([&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rand_bit_flip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cz(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.measure(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.measure(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> transpile(&lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sv_sim&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv_sim&lt;/span>&lt;span class="mtk1">.run(&lt;/span>&lt;span class="mtk1">cc&lt;/span>&lt;span class="mtk1">).result()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.get_counts()][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run_insts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">insts&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inst&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">insts&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inst&lt;/span>&lt;span class="mtk1">.split(&lt;/span>&lt;span class="mtk4">' '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">arg2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">])]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.x(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.y(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'z'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.z(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'h'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'cx'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">arg2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'cy'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.cy(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">arg2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">toks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'cz'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">qc&lt;/span>&lt;span class="mtk1">.cz(&lt;/span>&lt;span class="mtk1">arg1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">arg2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">measure_bit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">insts&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ClassicalRegister(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ClassicalRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ClassicalRegister(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> QuantumCircuit(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ans&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.initialize([&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rand_bit_flip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">],&lt;/span>
&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">norms&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cx(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.cz(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.h(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.measure(&lt;/span>&lt;span class="mtk1">anc_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.measure(&lt;/span>&lt;span class="mtk1">anc_z&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">syn_z&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run_insts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">main&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">insts&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">.measure(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ans&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> transpile(&lt;/span>&lt;span class="mtk1">qc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sv_sim&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv_sim&lt;/span>&lt;span class="mtk1">.run(&lt;/span>&lt;span class="mtk1">cc&lt;/span>&lt;span class="mtk1">).result()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.get_counts()][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sv&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Here's your flag:"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">binascii&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hexlify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(flag.encode())))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Alright, good luck decoding."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sens&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">enc_byte&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Sensor measurements:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sens&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">insts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Help me decode, one bit per line, instructions (e&lt;/span>&lt;span class="mtk4">x. x 1, z 2) separated by semicolons:'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'You can only touch main or res. Use an integer to&lt;/span>&lt;span class="mtk4"> index main, or r for res.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inst_set&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">split&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">';'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">insts&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">inst_set&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit_ans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">insts&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit_ans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">measure_bit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">insts&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Your byte:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bit_ans&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'On to the next byte!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The challenge server generates a random 16-byte AES key to encrypt the flag. We are given the ciphertext, and then the server uses a quantum circuit to encode each bit of the AES key. We are allowed to get some measurements and add instructions to the circuit afterwards so that we can try to guess each bit of the AES key.&lt;/p></description></item></channel></rss>