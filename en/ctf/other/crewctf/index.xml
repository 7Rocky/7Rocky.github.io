<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CrewCTF on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/other/crewctf/</link><description>Recent content in CrewCTF on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/other/crewctf/index.xml" rel="self" type="application/rss+xml"/><item><title>4ES</title><link>https://7rocky.github.io/en/ctf/other/crewctf/4es/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/crewctf/4es/</guid><description>&lt;p>This challenge was made by me for CrewCTF 2024 as a member of &lt;a target="_blank" href="https://ctftime.org/team/85618">thehackerscrew&lt;/a>. We are provided with the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choices&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>


&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'rb'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">chars&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'crew_AES*4=$!?'&lt;/span>
&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>

&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">z&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choices&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">chars&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">)),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choices&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">chars&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">)),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choices&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">chars&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">)),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choices&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">chars&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">)),&lt;/span>
&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">k1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">k2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">k3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">k4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">z&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk1">z&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'AES_AES_AES_AES!'&lt;/span>
&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> )&lt;/span>

&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">z&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">block_size&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'pt = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">enc_flag = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>Format muscle</title><link>https://7rocky.github.io/en/ctf/other/crewctf/format-muscle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/crewctf/format-muscle/</guid><description>&lt;p>This challenge was made by me for CrewCTF 2024 as a member of &lt;a target="_blank" href="https://ctftime.org/team/85618">thehackerscrew&lt;/a>. We are given a binary called &lt;code>format-muscle&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">checksec&lt;/span> &lt;span class="mtku">format-muscle&lt;/span>
[&lt;span class="code-blue">*&lt;/span>] './format-muscle'
 Arch: amd64-64-little 
 RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
 Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
 NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
 PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
 RUNPATH: &lt;span class="code-dark-red">b'.'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="reverse-engineering">Reverse engineering&lt;/h2>
&lt;p>The reverse-engineering step is quite simple. This is the original C code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;stdio.h&amp;gt;&lt;/span>
&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;stdlib.h&amp;gt;&lt;/span>
&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;string.h&amp;gt;&lt;/span>

&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> data[&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">];&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setbuf&lt;/span>&lt;span class="mtk1">(stdout, &lt;/span>&lt;span class="mtk6">NULL&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">do&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(data, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(data), stdin);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(data);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">strncmp&lt;/span>&lt;span class="mtk1">(data, &lt;/span>&lt;span class="mtk4">"quit"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">));&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 id="format-string-vulnerability">Format String vulnerability&lt;/h3>
&lt;p>As can be seen, we have a &lt;code>do&lt;/code>-&lt;code>while&lt;/code> loop that allows us to enter data in a buffer that will be printed out with &lt;code>printf&lt;/code>, as the first argument. So, we have a clear Format String vulnerability:&lt;/p></description></item><item><title>Read between the lines</title><link>https://7rocky.github.io/en/ctf/other/crewctf/read-between-the-lines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/other/crewctf/read-between-the-lines/</guid><description>&lt;p>This challenge was made by me for CrewCTF 2024 as a member of &lt;a target="_blank" href="https://ctftime.org/team/85618">thehackerscrew&lt;/a>. We are provided with the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">shuffle&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>


&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'rb'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100&lt;/span>

&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">extend&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">shuffle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">65537&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span> 

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item></channel></rss>