<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hardware on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/</link><description>Recent content in Hardware on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/htb-challenges/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>Gawk</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/gawk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/gawk/</guid><description>&lt;p>We are told that someone needs help with a printer. We only have an IP address and a port. &lt;code>nmap&lt;/code> does not show any useful information:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nmap&lt;/span> -Pn -sV 167.99.207.74 -p 32108
Starting Nmap 7.93 ( https://nmap.org )
Nmap scan report for 167.99.207.74
Host is up (0.079s latency).

PORT STATE SERVICE VERSION
32108/tcp open unknown

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . 
Nmap done: 1 IP address (1 host up) scanned in 97.94 seconds
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="using-pjl">Using PJL&lt;/h2>
&lt;p>After reading a bit on printer exploitation, I found &lt;a target="_blank" href="https://github.com/RUB-NDS/PRET">PRET&lt;/a>, which is a tool to interact with printers using PostScript or PJL (printer languages). It works with Python version 2, so let&amp;rsquo;s use a Docker container:&lt;/p></description></item><item><title>HM74</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/hm74/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/hm74/</guid><description>&lt;p>We are given this Verilog hardware description code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">module&lt;/span> &lt;span class="mtk8">encoder&lt;/span>(
&lt;span class="mtk8"> input&lt;/span> [&lt;span class="mtk6">3&lt;span class="mtk5">:&lt;/span>0&lt;/span>] data_in,
&lt;span class="mtk8"> output&lt;/span> [&lt;span class="mtk6">6&lt;span class="mtk5">:&lt;/span>0&lt;/span>] ham_out
);

 &lt;span class="mtk7">wire&lt;/span> p0, p1, p2;

 &lt;span class="mtk5">assign&lt;/span> p0 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">3&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">2&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];
 &lt;span class="mtk5">assign&lt;/span> p1 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">3&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">1&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];
 &lt;span class="mtk5">assign&lt;/span> p2 &lt;span class="mtk5">=&lt;/span> data_in[&lt;span class="mtk6">2&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">1&lt;/span>] &lt;span class="mtk5">^&lt;/span> data_in[&lt;span class="mtk6">0&lt;/span>];

 &lt;span class="mtk5">assign&lt;/span> ham_out &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk5">{&lt;/span> p0, p1, data_in[&lt;span class="mtk6">3&lt;/span>], p2, data_in[&lt;span class="mtk6">2&lt;/span>], data_in[&lt;span class="mtk6">1&lt;/span>], data_in[&lt;span class="mtk6">0&lt;/span>] &lt;span class="mtk5">}&lt;/span>; 
&lt;span class="mtk5">endmodule&lt;/span>

&lt;span class="mtk5">module&lt;/span> &lt;span class="mtk8">main&lt;/span>;
 &lt;span class="mtk7">wire&lt;/span>[&lt;span class="mtk6">3&lt;span class="mtk5">:&lt;/span>0&lt;/span>] data_in &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">5&lt;/span>;
 &lt;span class="mtk7">wire&lt;/span>[&lt;span class="mtk6">6&lt;span class="mtk5">:&lt;/span>0&lt;/span>] ham_out;

 &lt;span class="mtk7">encoder&lt;/span> &lt;span class="mtk8">en&lt;/span>(data_in, ham_out);

 &lt;span class="mtk5">initial&lt;/span> &lt;span class="mtk5">begin&lt;/span>
 &lt;span class="mtk5">#&lt;/span>&lt;span class="mtk6">10&lt;/span>;
 &lt;span class="mtk7">$display&lt;/span>(&lt;span class="mtk4">"&lt;span class="mtk6">%b&lt;/span>"&lt;/span>, ham_out);
 &lt;span class="mtk5">end&lt;/span>
&lt;span class="mtk5">endmodule&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have an online instance to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 165.232.100.46 31734
Captured
Captured
Captured
Captured
Captured: 1001100111000001001011101101000010101010100101111010001111001101100000111001010111110001110001110001011011110110000111100010011000111011110100111111000111110011011111011000100111111100011011000011001011110000001100110111010111011111000001011111111111111100110100000111101011011110111010111010011000011111100001011111011001000111110001110110011110100000001100110101010010111011111010111101100110000110000001000111100011010100101101111101101111001110000101110001001101111001111010000011111110100001110000110000101011010010010110101011100011001011101110100100101110011101001011000111110011001100001111110010100011101110011011011100011010111100000101001011111111110011111110000010010000100101001101010101110011000001001100110001011111101100010111010001001110101110101111110100000101000111010010110111111000011110110011101001101010100011110000111100100001011011001101111011110000111111111111010110011111001100110100100001100011000000011001100100111111010111
Captured
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Plus, this is the description of the challenge:&lt;/p></description></item><item><title>Mini Line</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/mini-line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/mini-line/</guid><description>&lt;p>We are given a file called &lt;code>firmware.hex&lt;/code> that looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">:100154002F6C69622F6C642D6C696E75782E736FC9 
:030164002E330037
:10016800040000001400000003000000474E550082
:10017800891BDEC57F0B4D5D5D0569FF4FE7A53423
:04018800F5185E41C7
:10018C00040000001000000001000000474E550064
:10019C00000000000300000002000000000000004E
:1001AC000100000001000000010000000000000040
:0801BC0000000000000000003B
:1001C400000000000000000000000000000000002B
:1001D40000000000780300000000000003000B0092
:1001E40000000000381001000000000003001600A9
:1001F40007000000000000000000000022000000D2
:100204003C0000000000000000000000200000008E
:1002140016000000000000000000000012000000B2
:100224005800000000000000000000002000000052
:100234006700000000000000000000002000000033
:100244000100000000000000000000001200000097
:100254000061626F7274005F5F6378615F66696EEC
:10026400616C697A65005F5F6C6962635F73746176
:1002740072745F6D61696E006C6962632E736F2EB8
:100284003600474C4942435F322E34005F49544D97
:100294005F64657265676973746572544D436C6F0E
:1002A4006E655461626C65005F5F676D6F6E5F734E
:1002B400746172745F5F005F49544D5F7265676972
:1002C40073746572544D436C6F6E655461626C65F2
:0102D4000029
:1002D6000000000000000200000002000000000014
:0202E600020014
:1002E80001000100280000001000000000000000CC
:1002F8001469690D000002003200000000000000CF
:10030800080F0100170000000C0F01001700000083
:100318001C100100170000002C100100170000003D
:1003280030100100170000003C1001001700000009
:10033800201001001503000024100100150400001E
:1003480028100100150600003410010015070000F0
:100358000C10010016030000101001001605000023
:1003680014100100160600001810010016080000FD
:0C03780008402DE9270000EB0880BDE8DC
:1003840004E02DE504E09FE50EE08FE008F0BEE513
:100394006C0C010000C68FE210CA8CE26CFCBCE558
:1003A40000C68FE210CA8CE264FCBCE500C68FE292
:1003B40010CA8CE25CFCBCE500C68FE210CA8CE279
:0403C40054FCBCE544
:1003C80000B0A0E300E0A0E304109DE40D20A0E14C
:1003D80004202DE504002DE528A09FE524308FE2B8
:1003E80003A08AE020C09FE50CC09AE704C02DE571
:1003F80018309FE503309AE714009FE500009AE75C
:10040800E5FFFFEBEAFFFFEBF00B01001C0000002B
:100418002C0000003000000014309FE514209FE5F8
:1004280003308FE0022093E7000052E31EFF2F0104
:10043800DCFFFFEAD00B0100280000002C009FE53C
:100448002C309FE500008FE003308FE0000053E17F
:1004580020309FE503308FE01EFF2F0118209FE515
:10046800023093E7000053E31EFF2F0113FF2FE133
:10047800EC0B0100E80B01009C0B010024000000BC
:1004880038009FE538109FE500008FE001108FE0ED
:10049800001041E0A13FA0E1411183E024309FE535
:1004A800C110B0E103308FE01EFF2F0118209FE537
:1004B800023093E7000053E31EFF2F0113FF2FE1E3
:1004C800A80B0100A40B01004C0B01003400000034
:1004D8004C309FE54C209FE503308FE00030D3E59A
:1004E80002208FE0000053E31EFF2F1138309FE5F4
:1004F80010402DE9033092E7000053E30200000AA0
:1005080028309FE503009FE7A0FFFFEBCAFFFFEB42
:100518001C309FE50120A0E303308FE00020C3E5F5
:100528001080BDE8580B0100100B010020000000EE
:10053800280B0100180B0100D0FFFFEA04B02DE5DD
:1005480000B08DE20CD04DE20030A0E105304BE563
:1005580050309FE5003093E5FF3CC3E305205BE5A1
:100568000224A0E10210A0E138209FE5013083E1D8
:10057800003082E530309FE50528A0E3002083E5C0
:1005880028309FE50228A0E3002083E51C309FE582
:100598000127A0E3002083E50000A0E100D08BE262
:1005A80004B09DE41EFF2FE1008002E0048002E019
:1005B8000C8002E000482DE904B08DE210D04DE235
:1005C80010000BE50030A0E305304BE5080000EA19
:1005D80005305BE510201BE5033082E00030D3E5F1
:1005E8000300A0E1D4FFFFEB05305BE5013083E2B7
:1005F80005304BE505305BE510201BE5033082E054
:100608000030D3E5000053E3F0FFFF1A0000A0E13B
:100618000000A0E104D04BE20088BDE804B02DE55D
:1006280000B08DE234309FE5003093E52C209FE543
:10063800153C83E3003082E524309FE52020A0E3C9
:10064800B020C3E11C309FE51020A0E30020C3E5E3
:100658000000A0E100D08BE204B09DE41EFF2FE172
:1006680000C002E0000002E00C0002E004B02DE54A
:1006780000B08DE214D04DE20030A0E10D304BE522
:1006880068309FE58020A0E3002083E560209FE597
:100698000D305BE50338A0E12338A0E1B030C2E1BA
:1006A8000000A0E14C309FE50030D3E5FF3003E2C5
:1006B800033CA0E1433CA0E1000053E3F8FFFFAA9C
:1006C8002C309FE5B030D3E10338A0E12338A0E116
:1006D80005304BE520309FE58020A0E3002083E52E
:1006E8000000A0E100D08BE204B09DE41EFF2FE1E2
:1006F8000C8002E0080002E0040002E0048002E04E
:1007080000482DE904B08DE230D04DE26C319FE510
:1007180003308FE020C04BE20F0093E80F008CE815
:100728005C319FE524300BE558319FE503308FE0BD
:1007380034C04BE20F0093E80700ACE80030CCE58A
:1007480044319FE503308FE00300A0E198FFFFEB01
:10075800B1FFFFEB34319FE503308FE00300A0E1E8
:1007680093FFFFEB0100A0E3BFFFFFEB20319FE504
:1007780003308FE00300A0E18DFFFFEB0030A0E322
:1007880008300BE50A0000EA20204BE208301BE5A0
:10079800033082E00030D3E51A3023E2FF3003E271
:1007A8000300A0E1B0FFFFEB08301BE5013083E256
:1007B80008300BE508301BE5100053E3F1FFFFDAC2
:1007C8000030A0E30C300BE50C0000EA24204BE2DB
:1007D8000C301BE5033082E00030D3E5A330A0E104
:1007E800FF3003E2393023E2FF3003E20300A0E1E7
:1007F8009DFFFFEB0C301BE5013083E20C300BE56D
:100808000C301BE5040053E3EFFFFFDA0030A0E3F0
:1008180010300BE50C0000EA34204BE210301BE5E9
:10082800033082E00030D3E5A330A0E1FF3003E2DB
:10083800393023E2FF3003E20300A0E18AFFFFEB37
:1008480010301BE5013083E210300BE510301BE55A
:100858000D0053E3EFFFFFDA38309FE503308FE0F8
:100868000300A0E152FFFFEB0000A0E37EFFFFEBD7
:100878000030A0E30300A0E104D04BE20088BDE80B
:10088800E00200001A9614CCD402000050020000C6
:10089800500200004802000078010000F0472DE9EE
:1008A8004C609FE54C509FE506608FE005508FE057
:1008B800056046E00070A0E10180A0E10290A0E19F
:1008C800AAFEFFEB4661B0E1F087BD080040A0E357
:1008D800043095E40920A0E10810A0E10700A0E198
:1008E800014084E233FF2FE1040056E1F7FFFF1ACD
:1008F800F087BDE8540601004C0601001EFF2FE1F9
:0809080008402DE90880BDE85C
:10091000010002003A0000003D0000000A00000053
:100920003D0000000F0000003D000000240000001A
:100930003D000000320000003D0000000200000009
:100940003D000000050000003D0000001300000015
:100950003D0000000D0000003D0000000C00000004
:100960003D000000230000003D00000011000000D9
:100970003D000000260000003D00000001000000D6
:100980003D000000170000003D00000008000000CE
:100990003D000000090000003D00000000000000D4
:1009A0000000000053504920496E697469616C6908
:1009B0007A6174696F6E00005374617274206269A9
:1009C00074207365740000005472616E736D6974F5
:1009D00074696E67206461746120746F20736C6148
:1009E0007665000044617461207472616E7366659F
:1009F0007220697320636F6D706C657465640000AC
:100A0000524E5861782E68294577296E2E766945B1
:100A1000BE98AECC1412BABE103030308800000040
:100A20003A0000003D0000000A0000003D00000008
:100A30000F0000003D000000240000003D00000009
:100A4000320000003D000000020000003D000000F8
:100A5000050000003D000000130000003D00000004
:100A60000D0000003D0000000C0000003D000000F3
:100A7000230000003D000000110000003D000000C8
:100A8000260000003D000000010000003D000000C5
:100A9000170000003D000000080000003D000000BD
:100AA000090000003D000000000000000000000000
:080AB00018F9FF7F01000000AE
:040AB800000000003A
:020000021000EC
:040F080040050000A0
:040F0C00D804000005
:100F100001000000280000000C0000007803000021
:100F20000D0000000809000019000000080F010072
:100F30001B000000040000001A0000000C0F01005C
:100F40001C00000004000000F5FEFF6FAC01000073
:100F5000050000005402000006000000C40100006B
:100F60000A000000810000000B00000010000000DB
:100F70001500000000000000030000000010010048
:100F8000020000002000000014000000110000001A
:100F900017000000580300001100000008030000C3
:100FA00012000000500000001300000008000000C4
:100FB000FBFFFF6F00000008FEFFFF6FE80200006C
:100FC000FFFFFF6F01000000F0FFFF6FD60200007F
:100FD000FAFFFF6F060000000000000000000000A4
:100FE0000000000000000000000000000000000001
:100FF00000000000000000000000000000000000F1
:10100000100F010000000000000000008403000039
:10101000840300008403000084030000040900002E
:10102000000000000000000000000000A408000014
:081030000807000000000000A9
:08103800000000003C10010063
:04000003000003C82E
:00000001FF
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We only know that this is the firmware of an LPC2148 microcontroller that is sending data.&lt;/p></description></item><item><title>Secure Digital</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/secure-digital/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/secure-digital/</guid><description>&lt;p>We are told that someone has read the master key of a microSD card, and we are given the signal traces in a &lt;code>trace_captured.sal&lt;/code> file.&lt;/p>
&lt;h2 id="signal-analysis">Signal analysis&lt;/h2>
&lt;p>We can use Saleae Logic 2 to analyze the traces, and we have this:&lt;/p>
&lt;p>&lt;img alt="Secure Digital 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Secure-Digital-1.webp">&lt;/p>
&lt;h3 id="spi">SPI&lt;/h3>
&lt;p>If we research a bit, we will find out that microSD cards use Serial Peripheral Interface (SPI) as a communication protocol. Comparing the signals we have to the ones we see in &lt;a target="_blank" href="https://support.saleae.com/protocol-analyzers/analyzer-user-guides/using-spi">SPI Analyzer - User Guide&lt;/a>, we can guess that Channel 0 and Channel 1 are MISO or MOSI, Channel 2 is Enable and Channel 3 is Clock, so we can add the analyzer:&lt;/p></description></item><item><title>Unique</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/unique/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/unique/</guid><description>&lt;p>We are told that a vehicle is sending the VIN (Vehicle Identificacion Number) and they saved the signal capture in a file (&lt;code>trace_captured.sal&lt;/code>). We need to find the VIN.&lt;/p>
&lt;h2 id="initial-reconnaissance">Initial reconnaissance&lt;/h2>
&lt;p>We can open &lt;code>trace_captured.sal&lt;/code> with Saleae Logic2:&lt;/p>
&lt;p>&lt;img alt="Unique 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Unique-1.webp">&lt;/p>
&lt;p>At first, we can select &amp;ldquo;Async Serial&amp;rdquo; and test some bitrates:&lt;/p>
&lt;p>&lt;img alt="Unique 2" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Unique-2.webp">&lt;/p>
&lt;p>As we can see, the dots don&amp;rsquo;t fit with the signal pulses. We can do some calculation to see what is the correct bitrate:&lt;/p></description></item><item><title>VHDLock</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/vhdlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/vhdlock/</guid><description>&lt;p>We are given a &lt;code>lock.vhd&lt;/code> file with this code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk3">-- first component for xor operation&lt;/span>
&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk5">library&lt;/span>&lt;span class="mtk1"> ieee;&lt;/span>
&lt;span class="mtk5">use&lt;/span>&lt;span class="mtk1"> ieee.std_logic_1164.&lt;/span>&lt;span class="mtk5">all&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">entity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">xor_get&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1">(input1,input2 : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">xor_get&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">architecture&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">of&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">xor_get&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk5">begin&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> input1 &lt;/span>&lt;span class="mtk5">xor&lt;/span>&lt;span class="mtk1"> input2;&lt;/span>
&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk3">-- second component for decoder 4x16&lt;/span>
&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk5">library&lt;/span>&lt;span class="mtk1"> ieee;&lt;/span>
&lt;span class="mtk5">use&lt;/span>&lt;span class="mtk1"> ieee.std_logic_1164.&lt;/span>&lt;span class="mtk5">all&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">entity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">decoder_4x16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">input&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">decoder_4x16&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">architecture&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">of&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">decoder_4x16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk5">begin&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">process&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">input&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">begin&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">input&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000000001"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0001"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000000010"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0010"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000000100"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0011"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000001000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0100"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000010000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0101"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000100000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0110"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000001000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0111"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000010000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1000"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000100000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1001"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000001000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1010"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000010000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1011"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000100000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1100"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0001000000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1101"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0010000000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1110"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0100000000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1111"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"1000000000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">when&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">others&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">"0000000000000000"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">process&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk3">-- main component&lt;/span>
&lt;span class="mtk3">----------------------------------&lt;/span>
&lt;span class="mtk5">library&lt;/span>&lt;span class="mtk1"> ieee;&lt;/span>
&lt;span class="mtk5">use&lt;/span>&lt;span class="mtk1"> ieee.std_logic_1164.&lt;/span>&lt;span class="mtk5">all&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">entity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">main&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1">(input_1,input_2 : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> xorKey : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> output1,output2 : &lt;/span>&lt;span class="mtk5">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">main&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">architecture&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">of&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">main&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">signal&lt;/span>&lt;span class="mtk1"> decoder1,decoder2: &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">component&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">xor_get&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1">(input1,input2 : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">component&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">component&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">decoder_4x16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">input&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">output&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk5">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">std_logic_vector&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">downto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">component&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">begin&lt;/span>
&lt;span class="mtk1"> L0 : &lt;/span>&lt;span class="mtk5">decoder_4x16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">map&lt;/span>&lt;span class="mtk1">(input_1,decoder1);&lt;/span>
&lt;span class="mtk1"> L1 : &lt;/span>&lt;span class="mtk5">decoder_4x16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">map&lt;/span>&lt;span class="mtk1">(input_2,decoder2);&lt;/span>
&lt;span class="mtk1"> L2 : &lt;/span>&lt;span class="mtk5">xor_get&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">map&lt;/span>&lt;span class="mtk1">(decoder1,xorKey,output1);&lt;/span> 
&lt;span class="mtk1"> L3 : &lt;/span>&lt;span class="mtk5">xor_get&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">map&lt;/span>&lt;span class="mtk1">(decoder2,xorKey,output2);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">end&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Behavioral&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have &lt;code>out.txt&lt;/code>:&lt;/p></description></item><item><title>Walkie Hackie</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/walkie-hackie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/walkie-hackie/</guid><description>&lt;p>We are given four radiofrequency signal captures (&lt;code>1.complex&lt;/code> to &lt;code>4.complex&lt;/code>) and a website to test codes:&lt;/p>
&lt;p>&lt;img alt="Walkie Hackie 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Walkie-Hackie-1.webp">&lt;/p>
&lt;p>Moreover, this is the description of the challenge:&lt;/p>
&lt;blockquote>
&lt;p>Our agents got caught during a mission and found that the guards are using old walkie-talkies for their communication. The field team captured their transmissions. Can you interrupt their communication to help our agents escape from the guards?&lt;/p>
&lt;/blockquote>
&lt;h2 id="radiofrequency-analysis">Radiofrequency analysis&lt;/h2>
&lt;p>Although there is a hint in the HTML source code of the website pointing to &lt;a target="_blank" href="https://github.com/jopohl/urh">Universal Radio Hacker&lt;/a>, I prefer using &lt;a target="_blank" href="https://github.com/miek/inspectrum">&lt;code>inspectrum&lt;/code>&lt;/a>.&lt;/p></description></item><item><title>Watch Tower</title><link>https://7rocky.github.io/en/ctf/htb-challenges/hardware/watch-tower/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/hardware/watch-tower/</guid><description>&lt;p>We are told that someone has been collecting and altering information in the network. Plus, we are given a file called &lt;code>tower_logs.pcapng&lt;/code>.&lt;/p>
&lt;h2 id="network-traffic-analysis">Network traffic analysis&lt;/h2>
&lt;p>If we open the PCAP file in Wireshark, we will see a lot of Modbus packets:&lt;/p>
&lt;p>&lt;img alt="Watch Tower 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Watch-Tower-1.webp">&lt;/p>
&lt;p>&lt;img alt="Watch Tower 2" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Hardware-Watch-Tower-2.webp">&lt;/p>
&lt;h3 id="modbus">Modbus&lt;/h3>
&lt;p>One thing to notice is the function code. There are three function codes involved in this trace (more information in &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Modbus">Wikipedia&lt;/a>):&lt;/p>
&lt;ul>
&lt;li>&lt;code>Write Multiple Coils&lt;/code>&lt;/li>
&lt;li>&lt;code>Read Coil&lt;/code>&lt;/li>
&lt;li>&lt;code>Write Multiple Registers&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The one that looks relevant is &lt;code>Write Multiple Registers&lt;/code> because there are only 2 packets with &lt;code>Write Multiple Coils&lt;/code> and &lt;code>Read Coil&lt;/code> packets do not seem to hold any data. Indeed, all &lt;code>Write Multiple Registers&lt;/code> packets are together (we can use &amp;ldquo;Apply as Column&amp;rdquo;):&lt;/p></description></item></channel></rss>