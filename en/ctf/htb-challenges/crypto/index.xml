<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crypto on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/</link><description>Recent content in Crypto on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/htb-challenges/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>400curves</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/400curves/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/400curves/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>

&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">ffffffff00000001000000000000000000000000ffffffffff&lt;/span>&lt;span class="mtk6">fffffffffffffc&lt;/span>
&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63b&lt;/span>&lt;span class="mtk6">ce3c3e27d2604b&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">ffffffff00000001000000000000000000000000ffffffffff&lt;/span>&lt;span class="mtk6">ffffffffffffff&lt;/span>

&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'b'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">}&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">recieveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">Q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">Q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Ea&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Ep&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">Q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">y1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">y2&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">Q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">l&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">y2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Ep&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">l&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Ea&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Ep&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">l&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Ep&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">l&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Ep&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y3&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">P&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">R&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">R&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">R&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">E&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">R&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Establising the TLS handsake...&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">recieveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Awaiting public key of the client...&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">.strip().split()]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">S&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Shared secret: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">S&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Error occured!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses Elliptic Curve Cryptography (ECC) with curve &lt;a target="_blank" href="https://neuromancer.sk/std/secg/secp256r1">secp256r1&lt;/a>.&lt;/p></description></item><item><title>AbraCryptabra</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/abracryptabra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/abracryptabra/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>

&lt;span class="mtk1">LOGO&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">╭━━━┳╮╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭╮╱╱╱╭╮&lt;/span>
&lt;span class="mtk4">┃╭━╮┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭╯╰╮╱╱┃┃&lt;/span>
&lt;span class="mtk4">┃┃╱┃┃╰━┳━┳━━┳━━┳━┳╮╱╭┳━┻╮╭╋━━┫╰━┳━┳━━╮&lt;/span>
&lt;span class="mtk4">┃╰━╯┃╭╮┃╭┫╭╮┃╭━┫╭┫┃╱┃┃╭╮┃┃┃╭╮┃╭╮┃╭┫╭╮┃&lt;/span>
&lt;span class="mtk4">┃╭━╮┃╰╯┃┃┃╭╮┃╰━┫┃┃╰━╯┃╰╯┃╰┫╭╮┃╰╯┃┃┃╭╮┃&lt;/span>
&lt;span class="mtk4">╰╯╱╰┻━━┻╯╰╯╰┻━━┻╯╰━╮╭┫╭━┻━┻╯╰┻━━┻╯╰╯╰╯&lt;/span>
&lt;span class="mtk4">╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╭━╯┃┃┃&lt;/span>
&lt;span class="mtk4">╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰━━╯╰╯&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_bits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">input&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'08b'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">input&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">DisruptionSpell&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">object&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">spawnScroll&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">intList&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">disrupt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">flag_bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">flag_bits&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">flag_bits&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Wizard&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">108314726549199134030277012155370097074&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">armor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">31157724864730593494380966212158801467&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">stamina&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">critChance&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">attack&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">armor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">critChance&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">spellAttack&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">stamina&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">spellAttack&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">dontAcceptDefeat&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">playerHealth&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">.lstrip(&lt;/span>&lt;span class="mtk4">'HTB{'&lt;/span>&lt;span class="mtk1">).rstrip(&lt;/span>&lt;span class="mtk4">'}'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag_bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_bits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">distruptionSpell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">DisruptionSpell&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag_bits&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">distruptionSpell&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">spawnScroll&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">distruptionSpell&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">disrupt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">flag_bits&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">playerHealth&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">armor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">critChance&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalSpellIngredient&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">spell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">magicka&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">-&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">stamina&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalSpellIngredient&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">md5&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalSpellIngredient&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalSpell&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalSpellIngredient&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalSpell&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You're a wizard Harry, "&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">block_size&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encryptionWizard&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Wizard&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">playerHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wizardHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">200&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">LOGO&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">" * The Basilisk is approaching... *&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">" - You think you're a wizard?"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">playerHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wizardHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"> &amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">spellAttack&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encryptionWizard&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">attack&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">spellAttack&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">playerHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">" - This is too easy...&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">spellAttack&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wizardHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">" - You won't be so lucky next time!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">playerHealth&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">" - You can't even save your self!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encryptionWizard&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dontAcceptDefeat&lt;/span>&lt;span class="mtk1">(&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">playerHealth&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthinessSize&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">scrollOfWorthinessSize&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">scrollOfWorthiness&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">disruptedFlag&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Unexpected error occured.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server simulates a game where we (as players) need to guess the number the wizard has generated. If our guess is correct, the wizard loses one health point; otherwise, we lose one health point:&lt;/p></description></item><item><title>AESWCM</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/aeswcm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/aeswcm/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>

&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AESWCM&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">aa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aa&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1">))&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct_block&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">xor_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt_block&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">tag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shuffle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AESWCM&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">properties&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"What properties should your magic wand have?"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Property: "&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">properties&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">properties&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">property_tag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">tag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">property&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">property_tag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">property_tag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">set&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tags&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">counter&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Only different properties are allowed!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>First of all, the program initializes &lt;code>KEY&lt;/code> and &lt;code>IV&lt;/code> variables to 16 random bytes. After that, an instance of &lt;code>AESWCM&lt;/code> class is created.&lt;/p></description></item><item><title>AHS512</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ahs512/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ahs512/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha512&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">**************** Welcome to the Hash Game. *******&lt;/span>&lt;span class="mtk4">*********&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* Hash functions are really spooky. &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* In this game you will have to face your fears&lt;/span>&lt;span class="mtk4">. *&lt;/span>
&lt;span class="mtk4">* Can you find a colision in the updated sha512&lt;/span>&lt;span class="mtk4">? *&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">**************************************************&lt;/span>&lt;span class="mtk4">*********&lt;/span>
&lt;span class="mtk4">"""&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">():&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generateKey&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">col&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">col&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [((&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">ff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rotated&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rotated&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"pumpkin_spice_latte!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Find a message that generate the same hash as this&lt;/span>&lt;span class="mtk4"> one: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span> 
&lt;span class="mtk1"> )&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Enter your message: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">digest&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Conditions not satisfied!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">Exiting"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">An error occurred while processing data: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Basically, the server uses a custom hashing function (&lt;code>AHS512&lt;/code>) and we are asked to find a collision with a given hash:&lt;/p></description></item><item><title>Ancient Encodings</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ancient-encodings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ancient-encodings/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">base64&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b64encode&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">b64encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)))&lt;/span> 


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encoded_flag&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">0x53465243657a51784d56383361444e664d32356a4d475178626a6c664e44497a5832677a4d6a4e664e7a42664e5463306558303d 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The program takes the flag and uses &lt;code>encode&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">b64encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)))&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>As can be seen, the flag is converted to Base64 encoding, then to a decimal number and finally to hexadecimal format.&lt;/p></description></item><item><title>Android-in-the-middle</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/android-in-the-middle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/android-in-the-middle/</guid><description>&lt;p>We have the Python source code to launch a local instance for the challenge:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">python3&lt;/span> &lt;span class="mtku">source.py&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 127.0.0.1 1337
DEBUG MSG - Generating The Global DH Parameters
DEBUG MSG - g = 2, p = 10177459997049772558637057109490700048394574760284564283959324525695097805837401714582821820424475480057537817583807249627119267268524840254542683041588432363128111683358536204391767254517057859973149680238170237977230020947732558089671785239121778309357814575486749623687357688511361367822815452806637006568922401890961240475060822815400430220536180181951862931844638638933951683988349468373510128406899660648258602475728913837826845743111489145006566908004165703542907243208106044538037004824530893555918497937074663828069774495573109072469750423175863678445547058247156187317168731446722852098571735569138516533993 
DEBUG MSG - Calculation Complete

DEBUG MSG - Generating The Public Key of CPU...
DEBUG MSG - Calculation Complete
DEBUG MSG - Public Key is: ???

Enter The Public Key of The Memory:
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Taking a look at the source code, we see that the program expects a number $M$ from us to generate a shared secret.&lt;/p></description></item><item><title>Arranged</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/arranged/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/arranged/</guid><description>&lt;p>We are given the SageMath source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, p, b, priv_a, priv_b&lt;/span>

&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> GF(p)&lt;/span>
&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> EllipticCurve(&lt;/span>&lt;span class="mtk1">F&lt;/span>&lt;span class="mtk1">, [&lt;/span>&lt;span class="mtk6">726&lt;/span>&lt;span class="mtk1">, b])&lt;/span>
&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">92664443700060421744731665585720229740257255936853&lt;/span>&lt;span class="mtk6">89789128881064194700114878783516673806793236640623&lt;/span>&lt;span class="mtk6">62524967242819810112524880301882054682462685841995&lt;/span>&lt;span class="mtk6">367&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">48568029557806042414031557727826142240574624266190&lt;/span>&lt;span class="mtk6">61437325274365157616489963087648882578621484232159&lt;/span>&lt;span class="mtk6">43934426386324619172945855063250025970285111571580&lt;/span>&lt;span class="mtk6">3253&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> priv_a&lt;/span>
&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> priv_b&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> priv_a &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">B&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> priv_b &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>

&lt;span class="mtk3"># now use it as shared secret&lt;/span>
&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">update&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">hash&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'2__&lt;/span>&lt;span class="mtk6">\xd9&lt;/span>&lt;span class="mtk4">]3k&lt;/span>&lt;span class="mtk6">\x94\x89&lt;/span>&lt;span class="mtk4">3&lt;/span>&lt;span class="mtk6">\x1a\x7f\x93\xd5\x14\x05&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we have the output of the script:&lt;/p></description></item><item><title>baby quick maffs</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/baby-quick-maffs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/baby-quick-maffs/</guid><description>&lt;p>We are given a Python script to encrypt the flag, and we are given the &lt;code>output.txt&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env&lt;/span> &lt;span class="mtk3">python3&lt;/span>
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk1">secret&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk1">flag,&lt;/span> &lt;span class="mtk1">p,&lt;/span> &lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">random&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk1">randint&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">partition_message&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk1">m1&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">parts&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">[]&lt;/span>
 &lt;span class="mtk1">remainder&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">0&lt;/span>
 &lt;span class="mtk5">while&lt;/span> &lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">&amp;lt;&lt;/span> &lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk5">if&lt;/span> &lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk1">m1&lt;/span> &lt;span class="mtk5">&amp;lt;&lt;/span> &lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">remainder&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">m&lt;/span> &lt;span class="mtk5">-&lt;/span> &lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m1&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk1">remainder&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">remainder&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk1">m&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">remainder&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">partition_message&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">)&lt;/span> 
 &lt;span class="mtk1">ciphers&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">for&lt;/span> &lt;span class="mtk1">c&lt;/span> &lt;span class="mtk5">in&lt;/span> &lt;span class="mtk1">parts&lt;/span>&lt;span class="mtk1">]&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphers&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">remainder&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk1">N&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">ciphers&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">remainder&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(flag,&lt;/span> &lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">with&lt;/span> &lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">as&lt;/span> &lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">out&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">remainder&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">ciphers&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>
 &lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">6083782486455360611313889289556658208725888944237734041722591252756006664878102248734673207367745303402874595854966731263105387801996693270011840173939423
1081087287982224274239399953615475281184099226198643053396569433856757255106426461817760194704250226883807897800355728788149068771546876055268915238961343
[5408283916250636369066846815501131861319520431106165986129813106223074286810632222888292034380612581416458756909119954039579666773680866532576166358987272, 5408283916250636369066846815501131861319520431106165986129813106223074286810632222888292034380612581416458756909119954039579666773680866532576166358987272, 5598555010250184271123226314796180406367795504188162611960100902143581636125416986623404842897202277277978566659455918773104687212096435095590205751904580] 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="analyizing-the-encryption-mechanism">Analyizing the encryption mechanism&lt;/h2>
&lt;p>Let&amp;rsquo;s see what we have. The encryption consists of taking a random number $m_1$ so that $1 \leqslant m_1 \leqslant N$, where $N = p q$. Then it takes the flag as $m$ (decimal format) and partitions it like $m = m_1 + m_1 + r$ (there are three elements in the output list), where $r$ is &lt;code>remainder&lt;/code> in the code. Each of the partitions is encrypted as:&lt;/p></description></item><item><title>Bank-er-smith</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bank-er-smith/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bank-er-smith/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span> &lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">KEY&lt;/span>

&lt;span class="mtk1">WELCOME&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">************** Welcome to the Gringatts Bank. ****&lt;/span>&lt;span class="mtk4">**********&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* Fortius Quo Fidelius &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">**************************************************&lt;/span>&lt;span class="mtk4">**********&lt;/span>
&lt;span class="mtk4">"""&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">():&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key_length&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">phi&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_length&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">key_length&lt;/span> &lt;span class="mtk5">//&lt;/span> &lt;span class="mtk6">2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">prime_length&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">prime_length&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">phi&lt;/span> &lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">-&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">-&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">encrypted_message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">encrypted_message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span> &lt;span class="mtk8 mtku">Bank&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">rsa&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">options&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"[1] Get public certificate.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[2] Calculate Hint.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[3] Unlock Vault.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span> &lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"vault_&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">: [&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"passphrase"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"empty"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span> &lt;span class="mtk1">i&lt;/span> &lt;span class="mtk5">in&lt;/span> &lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">100&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">rsa&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">initializeVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">passphrase&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">name&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">data&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">calculateHint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.p &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">shift&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">enterVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk9 mtki">passphrase&lt;/span>&lt;span class="mtk1">.encode() &lt;/span>&lt;span class="mtk5">==&lt;/span> &lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk9 mtki">vault&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">].&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Failed to open the vault!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">__name__&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bank&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">Bank&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">"vault_68"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">KEY&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">initializeVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vaults&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"You managed to retrieve: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted_passphrase&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Now you are ready to enter the bank."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Hello, what would you like to do?&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">options&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">calculateHint&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span> &lt;span class="mtk1">option&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vault&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Which vault would you like to open: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Enter the passphrase: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">bank&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">enterVault&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">vault&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Abort mission!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span> &lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Exiting"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span> &lt;span class="mtk8 mtku">Exception&lt;/span> &lt;span class="mtk5">as&lt;/span> &lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"An error occurred while processing data: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>Basically, the server uses RSA, creates a vault with an identifier &lt;code>&amp;quot;vault_68&amp;quot;&lt;/code> to store a secret key (&lt;code>passphrase&lt;/code>). Then the key is encrypted (&lt;code>encrypted_passphrase&lt;/code>) and the flag is stored in the vault:&lt;/p></description></item><item><title>BBGun06</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bbgun06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bbgun06/</guid><description>&lt;p>We are given a Python source code that asks for a signature. This is the &lt;code>main&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> RSA(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">parseEmail&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.sign(&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.verify(&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">headers&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generateHeaders&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">valid_email&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">headers&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">valid_email&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">forged_signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">recieveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Enter the signature as hex: "&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">forged_signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">forged_signature&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.verify(&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">forged_signature&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Invalid signature"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">different&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">forged_signature&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"An error occured"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The function &lt;code>rsa.verify&lt;/code> will do this:&lt;/p></description></item><item><title>BFD56</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bfd56/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bfd56/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> pt,key,block_length&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>

&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"ABCDEFGHIKLMNOPQRSTUVWXYZ"&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strmask&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">[(&lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">25&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strunmask&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">[(&lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">25&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mask&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">indices&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">characters&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">],&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">indices&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">],&lt;/span>&lt;span class="mtk9 mtki">indices&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">characters&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ret&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">block_length&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">sample&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">alph&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">block_length&lt;/span>&lt;span class="mtk1">)])&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">indices&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characters&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">indices&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">characters&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext_blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> : &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">block_length&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">block_length&lt;/span>&lt;span class="mtk1">)]&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext_blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block_enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">strmask&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">cmask&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk1">indices&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">characters&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block_enc&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block_enc&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'ciphertext.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(pt,key,block_length)))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the &lt;code>ciphertext.txt&lt;/code> file:&lt;/p></description></item><item><title>Biased Heritage</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/biased-heritage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/biased-heritage/</guid><description>&lt;p>This challenge is kind of a continuation of &lt;a target="_blank" href="../colliding-heritage">Colliding Heritage&lt;/a>. We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"HTB{???????????????????????????????????????}"&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SHA256chnorr&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># while True:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.q = getPrime(512)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.p = 2*self.q + 1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># if isPrime(self.p):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">184e26a581fca2893b2096528eb6103ac03f60b023e1284ebd&lt;/span>&lt;span class="mtk6">a3ab24ad9a9fe0e37b33eeecc4b3c3b9e50832fd856e9889f6&lt;/span>&lt;span class="mtk6">c9a10cde54ee798a7c383d0d8d2c3&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[S]ign a message'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[V]erify a signature'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SHA256chnorr&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'g:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'p:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'right hand'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'No!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Signature:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'V'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter s&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter e&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sha256chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'right hand'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Valid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid choice...'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="schnorr-signature">Schnorr signature&lt;/h2>
&lt;p>The challenge implements a signing server using &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Schnorr_signature">Schnorr signature&lt;/a>. The algorithm to sign a message $m$ is the following:&lt;/p></description></item><item><title>Blessed</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/blessed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/blessed/</guid><description>&lt;p>This challenge was made by me for Hack The Box. We are given the Python source of the server that contains the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">eth_typing&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSPrivateKey&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">BLSPubkey&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">BLSSignature&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">typing&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">Generator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">List&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">py_ecc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ciphersuites&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">G2ProofOfPossession&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">py_ecc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">g2_primitives&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pubkey_to_G1&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">py_ecc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">point_compression&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decompress_G1&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">py_ecc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">typing&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G1Compressed&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">py_ecc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">optimized_bls12_381&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">optimized_curve&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">curve_order&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">G1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">neg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">normalize&lt;/span>


&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">FileNotFoundError&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'HTB&lt;/span>&lt;span class="mtk6">{f4k3_fl4g_f0r_t3st1ng}&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rng&lt;/span>&lt;span class="mtk1">() -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">Generator&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">curve_order&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Gx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4&lt;/span>&lt;span class="mtk6">a13945d898c296&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Gy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececb&lt;/span>&lt;span class="mtk6">b6406837bf51f5&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">EccPoint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Gx&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Gy&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">curve&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'p256'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">curve&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'p256'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk1">pointQ&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">W0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">B&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Wn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">W0&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Wn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">G&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">yield&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Wn&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">yield&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Wn&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Robot&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">verified&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bool&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bool&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">verified&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">BLSPubkey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSPubkey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_sk&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">BLSPrivateKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSPrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_sk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSPrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">curve_order&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">SkToPk&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_sk&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">json&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'robot_id'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk4">'pk'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()}&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SuperComputer&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rand&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">Generator&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rng&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">List&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">Robot&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">create&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_find_robot_by_id&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">Robot&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">create&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Robot&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rand&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'msg'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Do not lose your secret key!'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'sk'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_sk&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">json&lt;/span>&lt;span class="mtk1">()}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pk&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">BLSPubkey&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pk&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'This command requires a public key'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Robot&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rand&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">verified&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pk&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'msg'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Robot joined but not verified'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'robot_id'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">_find_robot_by_id&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'No robot found'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'User already verified'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'msg'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Prove that you have the secret key that correspon&lt;/span>&lt;span class="mtk4">ds to your public key: pk = sk * G1'&lt;/span>&lt;span class="mtk1">}))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pubkey_to_G1&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C_hex&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Take a random value x and send me C = x * G1 (hex&lt;/span>&lt;span class="mtk4">): '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decompress_G1&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">G1Compressed&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">C_hex&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rand&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Give me x (hex): '&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">normalize&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">G1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">normalize&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Proof failed!'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sk_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Give me (sk + x) (hex): '&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">normalize&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">G1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sk_x&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">neg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Pk&lt;/span>&lt;span class="mtk1">))) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">normalize&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">C&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Proof failed!'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'msg'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Robot verified'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">BLSSignature&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">List&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'This command requires a signature'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">_find_robot_by_id&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">robot_id&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'No robot found'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">Verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'list'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Invalid signature'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">json&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unveil_secrets&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">agg_sig&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">BLSSignature&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">agg_pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">robots&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">agg_sig&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'This command requires an aggregated signature'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">FastAggregateVerify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">agg_pk&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'unveil_secrets'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">agg_sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'msg'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Secrets have been unveiled!'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'flag'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Invalid aggregated signature'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">help&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'help'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Show this panel'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'create'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Generate a new robot, already verified'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'join'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Add a new robot, given a public key and a signatu&lt;/span>&lt;span class="mtk4">re'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'verify'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Start interactive process to verify a robot given&lt;/span>&lt;span class="mtk4"> an ID'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'list'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Return a list of all existing robots'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'unveil_secrets'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Show the secrets given an aggregated signature of&lt;/span>&lt;span class="mtk4"> all registered robots'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'exit'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Shutdown the SuperComputer'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run_cmd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]) -&amp;gt; &lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">List&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">Dict&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">]]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'cmd'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSPubkey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'pk'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLSSignature&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'sig'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'robot_id'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'0'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'create'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">create&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'join'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'verify'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'list'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">robot_id&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'unveil_secrets'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">unveil_secrets&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'exit'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'exit'&lt;/span>&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">help&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Welcome! You have been invited to use our SuperCo&lt;/span>&lt;span class="mtk4">mputer, which is very powerful and totally secure.&lt;/span>&lt;span class="mtk4"> Only sophisticated robots are able to use it, so &lt;/span>&lt;span class="mtk4">you need to create a robot to interact with the Su&lt;/span>&lt;span class="mtk4">perComputer or maybe join an existing one. The key&lt;/span>&lt;span class="mtk4"> to our success is that critical operations need t&lt;/span>&lt;span class="mtk4">he approval of all registered robots. Hackers cann&lt;/span>&lt;span class="mtk4">ot beat our security!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crew&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Architects/Engineers'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Explosives Experts/Demolition Specialists'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Hackers'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Stealth/Infiltration specialists'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Scavengers'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SuperComputer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">crew&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'Hackers'&lt;/span>&lt;span class="mtk1">})) &lt;/span>&lt;span class="mtk3"># No hackers here...&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">help&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk9 mtki">indent&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">end&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">run_cmd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">end&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server defines an instance of &lt;code>SuperComputer&lt;/code>, and we are allowed to interact with it using these commands:&lt;/p></description></item><item><title>Bloom Bloom</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bloom-bloom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/bloom-bloom/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">shuffle&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">KEY&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">startswith&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'709149eb5baf8f8cb617226854a7b4f3'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">BBS&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">length&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">out_length&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">length&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">reset_params&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">extract_bit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_output&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">reset_params&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">out_length&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">extract_bit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">gen_output&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1">encryptor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">BBS&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">enc_messages&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGES&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_messages&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">encryptor&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">KEY&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_messages&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the result in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>Brainy's Cipher</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/brainys-cipher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/brainys-cipher/</guid><description>&lt;p>We are given this text file (&lt;code>brainy.txt&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">++++++++++[>+>+++>+++++++>++++++++++&lt;&lt;&lt;&lt;-]>>>>+++++++++++++++++++++++.-----------.&lt;------------.---.++.---------.+.++.-.++.+.-----.++..++++.--.++++.+..-------.+.+++.---.+.+++++.-------.+.---.+++++++.+.-------..+++.-.+++++.-------.++.+++++.-----.+++++..-----.--.++++++++.-------.--.++++.+++.---.++..+++.------.+++.--.-..++++++.-.----..+++++.------.++++++.---.---.--.+++.++++.-------.+++++..-.++..-------.++++++.---.++..+++.----.++++.-------.++++++++..----.+++.+.------.--.-.++.-.+++++.--..--.++++.-.++++.---.------.+++++.++.+.---.+++.---.----.++++.--.+++.-----.+++++.+.---.--.+++++++.---.---...---.+.++++++++.----.++++.-----.++.--.-.--.++.-.-.+++++.--..+++++.-------.-.++++.++.-----.++++++.--------.+++.+++.-.+++.----.----.++++++.----.++++++.-------.-----.>+.&lt;++++++++++++++.---------.+.++++++.--------.++.+++++++.--------.+++++++.----.+.----.+++...----.++++..++.----..+++.+++.-----.++++.--.++..-------.+++.++++.--.---.--.++++++..-----..+++++++.-------.+++++++.--------..++++++.++.--..++.----.+++.++.------.++++.+.-..+.+.-------.++++++.-.---.---.-.++++++++..-----.---.++.+.++..-.--.+++.++++.--..------.++++++++.-------.+++++++..---.+.++..---.----.+.++++++..-.-.-----.--.++++.--.+++++++.----.++++.-----.-.+.++.+..+..--.-.---.+++++.--.--.++++++.--------.++.---.+++++++..----.---.+++++++++.-...-------.++++++++.-------.++.-.+++++.----.-.+++++.---.----.+++++.++.-----.---.+++++++.++.---------...++.+++++++.------.+++++.-------.++++.-----.+++++.----.-----.>-------------.++++++++++++.&lt;++++++++++++++.-----..-.----.++++++.-..-----.++.++++++.--.----..--.++.-.++++++++.------.+..--.+++++++.------.---.++++++.----.++++++.-.++.------.++++...--.---.+++++++.--------.++++++++.----..+.----.+..---.++++++++.+.---.-.---.--.++++++++.-----.+++++.----.+.+++.------.--..+++++++++.-.---.++.----.++++.-.------.+++++.--.++.+++.-----.++.++.--..----.-.+++++++.+.----.---.+++++.+++.---.-----.+++++.------.++++++.-.----..++.+++.--.---.++.++++++.--------..+++++.+++.---.-----.++.++++++.---.+++.-.-------.++.+++.-.---.+++.---.+.++.-----.+++++++.---.--.-..++++.++.-------.++++.+.--.++++..+.+.-.---.-.--.+.+++++.--.+++.------..--.++++++++.-.------.++++.+++.-----.+.----.-----.>------------.+++++++++++++.&lt;++++++++++++++.-.---------.++++++..++.+.--.----.-.--.+++.---.++++++++..-----.+.--.--.++++++.+++.----.---.+.++.++++.------.++++++..--.----.++++..---.+++.----.--..++++++++.-.-----..---.+++++++++.---------.++++++.----.+++++.-.--.---.++++++.+.+.---------.++++++.----.++++.+++.-----.+++.--.+++.----.+++.------.++++++.----.++++++.---..------.+++++++.----.++.+.+.++.-..-------.++++++.-------.++++.---.++++.+++.-----.++++++..----.-.+++++..---.---.-..+.--.+++.---.++++.++.---.-.+++++.-..-------.++..+++.++++.----.---.++.+++++.--------.++++.+.------..+++++.---.++++++.-.------.+++.++.--.---.++.+++.-----.+++++.---.+.--.-.+++++++.+.-------.--.+++++.-----..+++++.++.---.+++++.-.--.-.----.-----.>--------------.&lt;++++++++++++++.----.----.--.+++++++.+.--------.++++++++.--..+..---.---.+++++..++.--.++.--.+.------.+++++++.-----.+++++.---.++.++.----.++.----.++.-----.+++..+++++.-----.--.+++...++.----.++++++.--------.+++++++++.--------.+.++++.+.----..++++++.-------.++..++++.--------.++++++.-.-----.++.++++.++.---.-----.++.-.+.++++.++.---.--.-.++++.-..----..+++++++.-----.++++++.---.----.--.+++++.+.--.+++++.----.++++.---.--.+.++.++.--.+.------.+.-.+++.--.---.++.--.++++++++.------.--.+++++.-.-.++++++.------.++++++.------..+++.++.------..++++.-.++..-----.++++++.--------.++.+++++.--.-----.++++++++..-.-----.+++++++.------.+++.------.++.++.-.-.+++.----.+.+++++++.---.+.++..-----.++++.--------.+++++..-.+++++..---.-.-----.++.--.+++++++++.--------.+++++.+++.----.--.+++.--..++.---.++.++++.---.-.++++.--------.+++++..------.+++++++.++.-------.+++.--..++.+.---.++++++.---------.++.+++++.--.++.++.--------.+++++++.-.---.-.++.----.+++++++.--------.++++++.------.+++++++.---.+++.--.++++.---.---..-..++.++.-.-.---.++++++..--.+++.+.----.++++.---------..++.+.+++++.---.-.+.----.+++++++.--.---.--.+..-.-.++++++.--.++++.-.+.-----.+.+++.+.----.++.++..--------.++.+++++++.--------.+++++.+..-----.--.+.++++++.--.----.+.++++++.--------.++++++++.------.--.++++++...+.-------.+++++++++.-----.+.+.----.+++.-----.++++++.+.+.--------.+++.+++++.-------.+.+++++++.--.-------.++++++++.-.------.>++++++++++++++++++++++++++. 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It corresponds to &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Brainfuck">Brainfuck&lt;/a> esoteric languages. If we use a tool like &lt;a target="_blank" href="https://www.tutorialspoint.com/execute_brainfk_online.php">www.tutorialspoint.com&lt;/a>, we can get the output:&lt;/p>
&lt;p>&lt;img alt="Brainy&amp;rsquo;s Cipher 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-Brainy's-Cipher-1.webp">&lt;/p>
&lt;p>In summary, we have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">p = 7901324502264899236349230781143813838831920474669364339844939631481665770635584819958931021644265960578585153616742963330195946431321644921572803658406281
q = 12802918451444044622583757703752066118180068668479378778928741088302355425977192996799623998720429594346778865275391307730988819243843851683079000293815051
dp = 5540655028622021934429306287937775291955623308965208384582009857376053583575510784169616065113641391169613969813652523507421157045377898542386933198269451
dq = 9066897320308834206952359399737747311983309062764178906269475847173966073567988170415839954996322314157438770225952491560052871464136163421892050057498651
c = 62078086677416686867183857957350338314446280912673392448065026850212685326551183962056495964579782325302082054393933682265772802750887293602432512967994805549965020916953644635965916607925335639027579187435180607475963322465417758959002385451863122106487834784688029167720175128082066670945625067803812970871 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>$p$ and $q$ seem to be parameters for an RSA cryptosystem, and $c$ must be the ciphertext. However, we need to find out what are $dp$ and $dq$.&lt;/p></description></item><item><title>Classic, yet complicated!</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/classic-yet-complicated/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/classic-yet-complicated/</guid><description>&lt;p>We are given a ciphertext:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">alp gwcsepul gtavaf, nlv prgpbpsu mb h jcpbyvdlq, ipltga rv glniypfa we ekl 16xs nsjhlcb. px td o lccjdstslpahzn fptspf xstlxzi te iosj ezv sc xcns ttsoic lzlvrmhaw ez sjqijsa xsp rwhr. tq vxspf sciov, alp wsphvcv pr ess rwxpqlvp nwlvvc dyi dswbhvo ef htqtafvyw hqzfbpg, ezutewwm zcep xzmyr o scio ry tscoos rd woi pyqnmgelvr vpm . qbctnl xsp akbflowllmspwt nlwlpcg, lccjdstslpahzn fptspfo oip qvx dfgysgelipp ec bfvbxlrnj ojocjvpw, ld akfv ekhr zys hskehy my eva dclluxpih yoe mh yiacsoseehk fj l gebxwh sieesn we ekl iynfudktru. xsp yam zd woi qwoc. 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can use a &lt;a target="_blank" href="https://www.boxentriq.com/code-breaking/cipher-identifier">cipher-identifier&lt;/a> to detect that we are dealing with Vigenère cipher:&lt;/p></description></item><item><title>Colliding Heritage</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/colliding-heritage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/colliding-heritage/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span> 

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"HTB{???????????????????????????}"&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MD5chnorr&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># while True:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.q = getPrime(128)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># self.p = 2*self.q + 1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># if isPrime(self.p):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">16dd987483c08aefa88f28147702e51eb&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">md5&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">H&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ev&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[S]ign a message'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'[V]erify a signature'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MD5chnorr&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'g:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'p:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'I am the left hand'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'No!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Signature:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'V'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter message&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter s&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter e&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">md5chnorr&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'I am the left hand'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Valid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid signature!'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid choice...'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="schnorr-signature">Schnorr signature&lt;/h2>
&lt;p>The challenge implements a signing server using &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Schnorr_signature">Schnorr signature&lt;/a>. The algorithm to sign a message $m$ is the following:&lt;/p></description></item><item><title>Composition</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/composition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/composition/</guid><description>&lt;p>We are given the source code of the server in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span> 
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ecc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">EllipticCurve&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Welcome to the ECRSA test center. Your encrypted &lt;/span>&lt;span class="mtk4">data will be sent soon."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Please check the logs for the parameters."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">legendre&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">,(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">num&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getrandpoint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ec&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">legendre&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">expr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">num&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">legendre&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">expr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">num&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ec&lt;/span>&lt;span class="mtk1">.lift_x(&lt;/span>&lt;span class="mtk1">num&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk3"># Calculate discriminant(ensures elliptic curve is&lt;/span>&lt;span class="mtk3"> non-singular)&lt;/span>
&lt;span class="mtk1">calc_discrim&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">: (&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">27&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># Returns RSA key in form ((e,n),(p,q))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">50&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_prime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">),(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Generating your key..."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Creating ECC params"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk3"># Gotta make sure the params are valid&lt;/span>
&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">discrim&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">calc_discrim&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">expr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>
&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">discrim&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">discrim&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">calc_discrim&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">EllipticCurve&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getrandpoint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">multiply&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk3"># Use key that has been shared with ECRSA&lt;/span>
&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Encrypted flag: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"IV: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"N: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"ECRSA Ciphertext: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Would you like to test the ECRSA curve?"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[y/n]&amp;gt; "&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'n'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Generating random point..."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">getrandpoint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Thanks for testing!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It encrypts the flag using ECC, which uses a custom library (&lt;code>ecc.py&lt;/code>):&lt;/p></description></item><item><title>Converging Visions</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/converging-visions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/converging-visions/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, p, a, b&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">utils&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">EllipticCurve&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mul1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">mul2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">60897882583250395019290734183554677148448130569594&lt;/span>&lt;span class="mtk6">43481824909430411674443639248386564763122373451773&lt;/span>&lt;span class="mtk6">38158266041105992233408699669643665700905532400804&lt;/span>&lt;span class="mtk6">1039&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mul1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mul2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">inc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Coordinates lost in space'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mul2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">inc&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mod&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Relic&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">EllipticCurve&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setupPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Coordinate greater than curve modulus'&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_point&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Point not on curve'&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'Point confirmed on curve'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">enc_seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_seed&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'New Points'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1">.x, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">EP&lt;/span>&lt;span class="mtk1">.y, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">.x, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">.y)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Options:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'1. Setup Point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'2. Receive new point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'3. Find true point'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Relic&lt;/span>&lt;span class="mtk1">(p, a, b)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter x coordinate.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'x : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">setupPoints&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Point confirmed on curve'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Response'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Configure origin point first'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">setup&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Input x,y'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Px&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'x: '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Py&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'y: '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">artifact&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">nextPoints&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Px&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Py&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'You have confirmed the location. However, It&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s dangerous to go alone. Take this: '&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'The vessels will never be found...'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Configure origin point first'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid option, shutting down..."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'An error occured: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> p.bit_length() &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses Elliptic Curve Cryptography (ECC) with secret parameters (&lt;code>p&lt;/code>, &lt;code>a&lt;/code>, &lt;code>b&lt;/code>). The implementation is found in &lt;code>utils.py&lt;/code>. It also uses a custom pseudo-random number generator (PRNG) with the same unknown parameters and a certain formula.&lt;/p></description></item><item><title>CryptoConundrum</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/cryptoconundrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/cryptoconundrum/</guid><description>&lt;p>We are given the source code in Python to encrypt a message:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">all&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">.isupper() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>&lt;span class="mtk1">.startswith(&lt;/span>&lt;span class="mtk4">'A'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">salt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">14&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">].encode() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">salt&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w+'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We are also given the output in &lt;code>output.txt&lt;/code> and another file called &lt;code>frequencies.txt&lt;/code>:&lt;/p></description></item><item><title>Down the Rabinhole</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/down-the-rabinhole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/down-the-rabinhole/</guid><description>&lt;p>We are given a Python code to encrypt the flag, and the corresponding &lt;code>out.txt&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span> 
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8 mtku">os&lt;/span>


&lt;span class="mtk1">FLAG&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"HTB{--REDACTED--}"&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">getPrimes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">coefficient&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk5">while&lt;/span> &lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">a&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">3&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">coefficient&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">a&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk6">2&lt;/span>
 &lt;span class="mtk5">if&lt;/span> &lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk5">break&lt;/span>
 &lt;span class="mtk5">while&lt;/span> &lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">b&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">3&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">coefficient&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">b&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk6">2&lt;/span>
 &lt;span class="mtk5">if&lt;/span> &lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk5">break&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">q&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">coefficient&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrimes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">coefficient&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">n&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">q&lt;/span>

 &lt;span class="mtk1">padded_message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">))&lt;/span>
 &lt;span class="mtk9 mtki">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>

 &lt;span class="mtk1">c1&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk9 mtki">coefficient&lt;/span>&lt;span class="mtk1">))&lt;/span> &lt;span class="mtk5">%&lt;/span> &lt;span class="mtk1">n&lt;/span>
 &lt;span class="mtk1">c2&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">padded_message&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">padded_message&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk9 mtki">coefficient&lt;/span>&lt;span class="mtk1">))&lt;/span> &lt;span class="mtk5">%&lt;/span> &lt;span class="mtk1">n&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
 &lt;span class="mtk1">coefficient&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">out&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk4">""&lt;/span>

 &lt;span class="mtk1">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>
 &lt;span class="mtk1">n1&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c2&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">coefficient&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">out&lt;/span> &lt;span class="mtk5">+=&lt;/span> &lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n1&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

 &lt;span class="mtk1">message&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
 &lt;span class="mtk1">n2&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c3&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">c4&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">coefficient&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">out&lt;/span> &lt;span class="mtk5">+=&lt;/span> &lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n2&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c3&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c4&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

 &lt;span class="mtk1">out&lt;/span> &lt;span class="mtk5">+=&lt;/span> &lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>

 &lt;span class="mtk5">with&lt;/span> &lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"out.txt"&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">as&lt;/span> &lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">__name__&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">19776862259930835769533075141648724317136726865325219582974628641663028757626265811083579217562652521882819442186121072998911507994180202653223643709290080839913395525826127153190928840827396123760992080649033993986933259414523207699646834981906819263319717393978144309193843291629147724979917210633945695963741292906203710063193032172565935616940163881309010593278779797311032854042143 
18940449739373929782738747330951086701639920358124022449285915914681280430796481828627299763135820762855030234173393995786612606880441619894387463477558992819159868677736220547584576162287130594708254787956440732197673909613467337841562238900614238638819659960733399020443364866675611439229048487547611412841048501574753238490324081535533435151621545695715920828646120795059085207687562
8139131820890905559667838555211733555742225714065473904284826530490173193882559461890851501765452084252909412188575022633596512451349296562551141247433279875212083704533696867645657058965269748533381751261887853181791035505421692256731545740535452608088572835061213186774986415770477686449034066741760771862922788827235376073691257160953903839272893965131226612277505938410382901008254
26981290975895303933094134784682647576666219028610175215312705398803184876873073206073503314367717924247311343215620922642215797499997039996235807898656819655954778538207489354154710796202412578870511364360408739855039573753404337104901925571890067221867326539447741757218265017060345184819121122211405292705642802582423249795098475142694876497945367191724577275836649641722277321440333
11417442976137891276889457530453693512824297007151561589652706330477531354073557298919952168938641673547415923544612769937040826488039629275033613885416852757446100888628373584968290007182319967658770715301605453943639269415203462531753249668211460008832837924575003999865632991329309338991536326471187269457640505585240846158952935988441171094886116683100214189858525596159931001818615
18355127503780127719693553150263322113757549849264731376621241697648137569897555203319854095104524520716185245672659763235856966677160994023952943459682923666302498240656511471051133821432105321005228730688019003306690750456433049212247022010356640992865785005342800448602013572898416040572578635571772069565860571397553306232025854213437948953083273924864099046923310816080854899416432
186
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>First of all, we see that the program takes a 128-bit prime number called &lt;code>coefficient&lt;/code> to generate other prime numbers $p$ and $q$. Let $C$ be the value of &lt;code>coefficient&lt;/code>, then the prime numbers $p$ and $q$ are computed as:&lt;/p></description></item><item><title>Ebola Virus</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ebola-virus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/ebola-virus/</guid><description>&lt;p>We are given these two files:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">cat&lt;/span> &lt;span class="mtku">key.txt&lt;/span>
CTGAAATGTTCCGCGAGCCGAACCGATTCACCGCCTAGAAACGTATTGTGCTGGTGTGCGGCGGTTAGAGATATTAGGTAGCGCCGTTACTCTAACATTTCGAATCAACCTTTCAGGGGAGTCACTGCCATCGTAAGTAGAGTACTTAGCATCGATGGCCATGCCTACTAATTACAGGCTGAATGACACTAAACCTTAGTTCACTGACCCGTTTTGTCATGTACTCTTGTGGTATGGGTCTTCAAATTGATCTGATTGGGAAGATAGAAAAACGGCTCTATCCTGGGTCGAGCCTCCCATGAAGCAGTCAAGGGGCCGCGAGGACTTCGATACTTGCCCTGCTCGAGCACATTTTAAAGCTTATTCCACATACTAGACTTACCCCCCGGCGTGTCGTACTGGAAGGTTAAACCTCTTGAGTTGATCTGACAACCTAGACGCGTGCCACGTTGTGTGGGATAGGTCACTCTCATTTCCACGAGGGACCAGAACCTTTGGCAATCCAGTTATTCTGCACTCGTGGCCGCCTCTCCTGGCAGGGGACCGGTAAGTTTGCGTATTCGCCGGGGAGTGGAGACGGATCGTCGTACACTGTTTCGAAAATTTTTGAGGATGGAGAGCAGAGCTATTGGATAAACGCTTGTACAGGTTCAATACTATTAGCAACGTGCCACCGGCACAGCTATCTCTGTTTCGCATGAAAGAGCCGTTAATCACGACGTTTAATCGAAACACATACCGATGGTCTACGAATATTATATCCGATACTAAGTCGGCCGCCGCAGTCCAGACGCCATATCGCTTTGAAGACCCCAAGGCGAACATTAACCGGTACGAGCAACTGCGGAGTGCCCTGCAATAGTCCGTCTGTAAAGGGCCCAGGCTAGGGCAAATAGTCCCTAAAACTAGAGATGGTCAACCGCTATGTGGGGCATTCTCCGTGAGACTCAGCCGTATTACAGTGAGCGTATTCCCAAACTCCCCTTCTGTGTATGACCAGTGTCGCTGCAAATGGACCGAGCAG 

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">xxd&lt;/span> &lt;span class="mtku">encrypted.bin&lt;/span>
00000000: f3d3 8309 0748 15ee b309 8144 5dea a409 .....H.....D]...
00000010: 26b3 eaa4 83a4 09b3 6e09 b326 ea75 8323 &amp;.......n..&amp;.u.#
00000020: 09a4 835d 4415 eaa4 0944 eeee 6e83 a4a4 ...]D....D..n...
00000030: 0967 d344 26d3 0944 a409 154f 7583 6e09 .g.D&amp;..D...Ou.n.
00000040: 4fb3 75b3 ee09 444f 09ea 6e75 5d83 b375 O.u...DO..nu]..u
00000050: 83c3 f009 0748 15ee b309 8144 5dea a409 .....H.....D]...
00000060: c344 a483 b3a4 8309 5007 60b7 dc09 4f44 .D......P.`...OD
00000070: 5da4 7509 b32f 2f83 b35d 83c3 0944 6e09 ].u..//..]...Dn.
00000080: bf28 ab91 0944 6e09 df09 a444 d8ea ee75 .(...Dn....D...u
00000090: b36e 8315 eaa4 0915 ea75 485d 83b3 88a4 .n.......uH]....
000000a0: 2309 156e 8309 446e 0967 d3b3 7509 44a4 #..n..Dn.g..u.D.
000000b0: 096e 1567 2309 ae85 b35d b323 094a 15ea .n.g#....].#.J..
000000c0: 75d3 094a eac3 b36e 2309 b36e c309 75d3 u..J...n#..n..u.
000000d0: 8309 1575 d383 5d09 446e 09c2 b3d8 48ea ...u..].Dn....H.
000000e0: 88ea 2309 b783 d815 265d b375 4426 09f9 ..#.....&amp;].uD&amp;..
000000f0: 832f ea48 ee44 2609 154f 09d6 156e e615 ./.H.D&amp;..O...n..
00000100: f009 f3d3 8309 eeb3 7575 835d 0915 2626 ........uu.]..&amp;&amp;
00000110: ea5d 5d83 c309 446e 09b3 0981 44ee eeb3 .]]...Dn....D...
00000120: e683 096e 83b3 5d09 75d3 8309 0748 15ee ...n..].u....H..
00000130: b309 f944 8183 5d23 094f 5d15 d809 67d3 ...D..]#.O]...g.
00000140: 4426 d309 75d3 8309 c344 a483 b3a4 8309 D&amp;..u....D......
00000150: 75b3 8883 a409 4475 a409 6eb3 d883 f0da u.....Du..n.....
00000160: daed 7509 44a4 0975 d315 eae6 d375 0975 ..u.D..u.....u.u
00000170: d3b3 7509 4f5d ea44 7509 48b3 75a4 0915 ..u.O].Du.H.u...
00000180: 4f09 75d3 8309 cb75 835d 152f 15c3 44c3 O.u....u.]./..D.
00000190: b383 094f b3d8 44ee 1f09 b35d 8309 6eb3 ...O..D....]..n.
000001a0: 75ea 5db3 ee09 0748 15ee b309 8144 5dea u.]....H.....D].
000001b0: a409 d315 a475 a4f0 0907 4815 eeb3 0944 .....u....H....D
000001c0: a409 446e 755d 15c3 ea26 83c3 0944 6e75 ..Dnu]...&amp;...Dnu
000001d0: 1509 75d3 8309 d3ea d8b3 6e09 2f15 2fea ..u.......n././.
000001e0: eeb3 7544 156e 0975 d35d 15ea e6d3 0926 ..uD.n.u.].....&amp;
000001f0: ee15 a483 0926 156e 75b3 2675 0967 4475 .....&amp;.nu.&amp;u.gDu
00000200: d309 75d3 8309 48ee 1515 c323 09a4 8326 ..u...H....#...&amp;
00000210: 5d83 7544 156e a423 0915 5de6 b36e a409 ].uD.n.#..]..n..
00000220: 155d 0915 75d3 835d 0948 15c3 44ee 1f09 .]..u..].H..D...
00000230: 4fee ea44 c3a4 0915 4f09 446e 4f83 2675 O..D....O.DnO.&amp;u
00000240: 83c3 09b3 6e44 d8b3 eea4 09a4 ea26 d309 ....nD.......&amp;..
00000250: b3a4 0926 d344 d82f b36e 8583 83a4 2309 ...&amp;.D./.n....#.
00000260: e615 5d44 eeee b3a4 2309 4f5d ea44 7509 ..]D....#.O].Du.
00000270: 48b3 75a4 2309 d815 6e88 831f a423 094f H.u.#...n....#.O
00000280: 155d 83a4 7509 b36e 7583 ee15 2f83 09b3 .]..u..nu.../...
00000290: 6ec3 092f 155d 26ea 2f44 6e83 a409 4f15 n../.]&amp;./Dn...O.
000002a0: ea6e c309 44ee ee09 155d 09c3 83b3 c309 .n..D....]......
000002b0: 155d 0944 6e09 75d3 8309 5db3 446e 4f15 .].Dn.u...].DnO.
000002c0: 5d83 a475 f0da da07 4815 eeb3 0975 d383 ]..u....H....u..
000002d0: 6e09 a42f 5d83 b3c3 a409 75d3 5d15 eae6 n../].....u.]...
000002e0: d309 d3ea d8b3 6ed7 7515 d7d3 ead8 b36e ......n.u......n
000002f0: 0975 5db3 6ea4 d844 a4a4 4415 6e09 8144 .u].n..D..D.n..D
00000300: b309 c344 5d83 2675 0926 156e 75b3 2675 ...D].&amp;u.&amp;.nu.&amp;u
00000310: 0950 75d3 5d15 eae6 d309 485d 1588 836e .Pu.].....H]...n
00000320: 09a4 8844 6e09 155d 09d8 ea26 15ea a409 ...Dn..]...&amp;....
00000330: d883 d848 5db3 6e83 a4dc 0967 4475 d309 ...H].n....gDu..
00000340: 75d3 8309 48ee 1515 c323 09a4 8326 5d83 u...H....#...&amp;].
00000350: 7544 156e a423 0915 5de6 b36e a409 155d uD.n.#..]..n...]
00000360: 0915 75d3 835d 0948 15c3 44ee 1f09 4fee ..u..].H..D...O.
00000370: ea44 c3a4 0915 4f09 446e 4f83 2675 83c3 .D....O.DnO.&amp;u..
00000380: 092f 8315 2fee 8323 09b3 6ec3 0967 4475 ./../..#..n..gDu
00000390: d309 a4ea 5d4f b326 83a4 09b3 6ec3 09d8 ....]O.&amp;....n...
000003a0: b375 835d 44b3 eea4 0950 83f0 e6f0 0948 .u.]D....P.....H
000003b0: 83c3 c344 6ee6 2309 26ee 1575 d344 6ee6 ...Dn.#.&amp;..u.Dn.
000003c0: dc09 2615 6e75 b3d8 446e b375 83c3 0967 ..&amp;.nu..Dn.u...g
000003d0: 4475 d309 75d3 83a4 8309 4fee ea44 c3a4 Du..u.....O..D..
000003e0: f09b 83b3 ee75 d3d7 26b3 5d83 0967 155d .....u..&amp;.]..g.]
000003f0: 8883 5da4 09d3 b381 8309 4f5d 8329 ea83 ..].......O].)..
00000400: 6e75 ee1f 0948 8383 6e09 446e 4f83 2675 nu...H..n.DnO.&amp;u
00000410: 83c3 0967 d344 ee83 0975 5d83 b375 446e ...g.D...u]..uDn
00000420: e609 2fb3 7544 836e 75a4 0967 4475 d309 ../.uD.nu..gDu..
00000430: a4ea a42f 8326 7583 c309 155d 0926 156e .../.&amp;u....].&amp;.n
00000440: 4f44 5dd8 83c3 0907 60b7 f009 f3d3 44a4 OD].....`.....D.
00000450: 09d3 b3a4 0915 2626 ea5d 5d83 c309 75d3 ......&amp;&amp;.]]...u.
00000460: 5d15 eae6 d309 26ee 15a4 8309 2615 6e75 ].....&amp;.....&amp;.nu
00000470: b326 7509 6744 75d3 092f b375 4483 6e75 .&amp;u.gDu../.uD.nu
00000480: a409 67d3 836e 0944 6e4f 8326 7544 156e ..g..n.DnO.&amp;uD.n
00000490: 0926 156e 755d 15ee 092f 5d83 26b3 ea75 .&amp;.nu].../].&amp;..u
000004a0: 4415 6ea4 09b3 5d83 096e 1575 09a4 755d D.n...]..n.u..u]
000004b0: 4426 75ee 1f09 2f5d b326 7544 2683 c3f0 D&amp;u.../].&amp;uD&amp;...
000004c0: 4dea 5d44 b3ee 0926 835d 83d8 156e 4483 M.]D...&amp;.]...nD.
000004d0: a409 75d3 b375 0944 6e81 15ee 8183 09c3 ..u..u.Dn.......
000004e0: 445d 8326 7509 2615 6e75 b326 7509 6744 D].&amp;u.&amp;.nu.&amp;u.gD
000004f0: 75d3 0975 d383 0948 15c3 1f09 154f 0975 u..u...H.....O.u
00000500: d383 09c3 8326 83b3 a483 c309 26b3 6e09 .....&amp;......&amp;.n.
00000510: b3ee a415 0926 156e 755d 4448 ea75 8309 .....&amp;.nu]DH.u..
00000520: 446e 0975 d383 0975 5db3 6ea4 d844 a4a4 Dn.u...u].n..D..
00000530: 4415 6e09 154f 0907 4815 eeb3 f009 cb83 D.n..O..H.......
00000540: 152f ee83 095d 83d8 b344 6e09 446e 4f83 ./...]...Dn.DnO.
00000550: 2675 4415 eaa4 09b3 a409 ee15 6ee6 09b3 &amp;uD.........n...
00000560: a409 75d3 8344 5d09 48ee 1515 c309 2615 ..u..D].H.....&amp;.
00000570: 6e75 b344 6ea4 0975 d383 0981 445d eaa4 nu.Dn..u....D]..
00000580: f0da daf3 d383 0944 6e26 ea48 b375 4415 .......Dn&amp;.H.uD.
00000590: 6e09 2f83 5d44 15c3 2309 75d3 b375 0944 n./.]D..#.u..u.D
000005a0: a423 0975 d383 0975 44d8 8309 446e 7583 .#.u...uD...Dnu.
000005b0: 5d81 b3ee 094f 5d15 d809 446e 4f83 2675 ]....O]...DnO.&amp;u
000005c0: 4415 6e09 6744 75d3 0975 d383 0981 445d D.n.gDu..u....D]
000005d0: eaa4 0975 1509 156e a483 7509 154f 09a4 ...u...n..u..O..
000005e0: 1fd8 2f75 15d8 a409 44a4 09df 0975 1509 ../u....D....u..
000005f0: dfbf 09c3 b31f a4f0 099b ead8 b36e a409 .............n..
00000600: b35d 8309 6e15 7509 446e 4f83 2675 4415 .]..n.u.DnO.&amp;uD.
00000610: eaa4 09ea 6e75 44ee 0975 d383 1f09 c383 ....nuD..u......
00000620: 8183 ee15 2f09 a41f d82f 7515 d8a4 f009 ..../..../u.....
00000630: 7744 5da4 7509 a41f d82f 7515 d8a4 09b3 wD].u..../u.....
00000640: 5d83 0975 d383 09a4 eac3 c383 6e09 156e ]..u........n..n
00000650: a483 7509 154f 094f 8381 835d 094f b375 ..u..O.O...].O.u
00000660: 44e6 ea83 2309 d8ea a426 ee83 092f b344 D...#....&amp;.../.D
00000670: 6e23 09d3 83b3 c3b3 26d3 8309 b36e c309 n#......&amp;....n..
00000680: a415 5d83 0975 d35d 15b3 75f0 09f3 d344 ..]..u.]..u....D
00000690: a409 44a4 094f 15ee ee15 6783 c309 481f ..D..O....g...H.
000006a0: 0981 15d8 4475 446e e623 09c3 44b3 5d5d ....DuDn.#..D.]]
000006b0: d315 83b3 2309 5db3 a4d3 2309 a41f d82f ....#.]...#..../
000006c0: 7515 d8a4 0915 4f09 44d8 2fb3 445d 83c3 u.....O.D./.D]..
000006d0: 0988 44c3 6e83 1f09 b36e c309 ee44 8183 ..D.n....n...D..
000006e0: 5d09 4fea 6e26 7544 156e 2309 b36e c309 ].O.n&amp;uD.n#..n..
000006f0: 446e 09a4 15d8 8309 26b3 a483 a423 0948 Dn......&amp;....#.H
00000700: 1575 d309 446e 7583 5d6e b3ee 09b3 6ec3 .u..Dnu.]n....n.
00000710: 0983 0075 835d 6eb3 ee09 48ee 8383 c344 ...u.]n...H....D
00000720: 6ee6 0950 83f0 e6f0 0915 1585 446e e609 n..P........Dn..
00000730: 4f5d 15d8 0975 d383 09e6 ead8 a423 0948 O]...u.......#.H
00000740: ee15 15c3 0944 6e09 75d3 8309 a475 1515 .....Dn.u....u..
00000750: eea4 dcf0 095c b348 155d b375 155d 1f09 .....\.H.].u.]..
00000760: 4f44 6ec3 446e e6a4 0944 6e26 eeea c383 ODn.Dn...Dn&amp;....
00000770: 09ee 1567 0967 d344 7583 0948 ee15 15c3 ...g.g.Du..H....
00000780: 0926 83ee ee09 b36e c309 2fee b375 83ee .&amp;.....n../..u..
00000790: 8375 0926 15ea 6e75 a409 b36e c309 83ee .u.&amp;..nu...n....
000007a0: 8381 b375 83c3 09ee 4481 835d 0983 6e85 ...u....D..]..n.
000007b0: 1fd8 83a4 f0da da9b f34d ac54 bc1b 88ae .........M.T....
000007c0: 9e67 1bd3 e967 1b75 151b 269e 6ef3 5d9e .g...g.u..&amp;.n.].
000007d0: ee1b 0748 9eee b251 dada ...H...Q..
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="guessing-part">Guessing part&lt;/h2>
&lt;p>The encryption output is very strange. On the one hand, we can identify that all characters in &lt;code>key.txt&lt;/code> are &lt;code>A&lt;/code>, &lt;code>C&lt;/code>, &lt;code>G&lt;/code>, &lt;code>T&lt;/code>, which are related to the DNA. So, maybe it is a type of encoding. On the other hand, in &lt;code>encrypted.bin&lt;/code> we only find raw bytes.&lt;/p></description></item><item><title>ElElGamal</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/elelgamal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/elelgamal/</guid><description>&lt;p>We have this challenge description:&lt;/p>
&lt;blockquote>
&lt;p>After some minor warnings from IDS, you decide to check the logs to see if anything suspicious is happening. Surprised by what you see, you realize that one of your honeypots has been compromised with a cryptominer. As you look at the processes, you discover a backdoor attached to one of them. The backdoor retrieves the private key from the &lt;code>/key&lt;/code> route of a C2. It establishes a session by sending an encrypted initialization sequence. After the session is established, it waits for commands. The commands are encrypted and executed by the source code you found. Unfortunately, the IDS could not detect the request to &lt;code>/key&lt;/code> and the machine was rebooted after the compromise, so the key cannot be found on the stack. Can you find out if any data was exfiltrated from the honeypot to mitigate future attacks?&lt;/p></description></item><item><title>Elliptic Labyrinth</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/elliptic-labyrinth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/elliptic-labyrinth/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">))&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"1. Get path parameters"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"2. Try to exit the labyrinth"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECC&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">gen_random_point&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"This is your lucky point:"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]), &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])}))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'b'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ec&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">))).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[:&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'enc'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Bye.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses Elliptic Curve Cryptography (ECC), but it only generates a curve and uses the curve parameters to generate an AES key to encrypt the flag (so ECC is not actually used for encryption).&lt;/p></description></item><item><title>Fast Carmichael</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/fast-carmichael/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/fast-carmichael/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_basis&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">0.5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">millerRabin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_basis&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">600&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1500&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">millerRabin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Give p: "&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Error!"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Conditions not satisfied!"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="interacting-with-the-server">Interacting with the server&lt;/h2>
&lt;p>The server asks to enter a number:&lt;/p></description></item><item><title>Fibopadcci</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/fibopadcci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/fibopadcci/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> flag, key&lt;/span>

&lt;span class="mtk1">fib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">13&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">21&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">34&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">55&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">89&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">144&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">233&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">121&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">98&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">219&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">61&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1">wlc_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">--------------------------------------------------&lt;/span>&lt;span class="mtk4">-----------------------&lt;/span>
&lt;span class="mtk4">| Welcome to my Super Secure Encryption &lt;/span>&lt;span class="mtk4">service! |&lt;/span>
&lt;span class="mtk4">| We use AES along with custom padding for &lt;/span>&lt;span class="mtk4">authentication |&lt;/span>
&lt;span class="mtk4">| for extra security, so only admins shoul&lt;/span>&lt;span class="mtk4">d be able to |&lt;/span>
&lt;span class="mtk4">| decrypt the flag with the key I have pr&lt;/span>&lt;span class="mtk4">ovided them! |&lt;/span>
&lt;span class="mtk4">| Admins: Feel free to send me messages that&lt;/span>&lt;span class="mtk4"> you have |&lt;/span>
&lt;span class="mtk4">| encrypted with my key, but make sure they &lt;/span>&lt;span class="mtk4">are padded |&lt;/span>
&lt;span class="mtk4">| correctly with my custom padding I showed &lt;/span>&lt;span class="mtk4">you (fibopadcci) |&lt;/span>
&lt;span class="mtk4">| Also, please use the a value I gave you&lt;/span>&lt;span class="mtk4"> last time, |&lt;/span>
&lt;span class="mtk4">| if you need it, ask a fellow admin, I don't wa&lt;/span>&lt;span class="mtk4">nt some random |&lt;/span>
&lt;span class="mtk4">| outsiders decrypting our secret fl&lt;/span>&lt;span class="mtk4">ag. |&lt;/span>
&lt;span class="mtk4">--------------------------------------------------&lt;/span>&lt;span class="mtk4">-----------------------&lt;/span>
&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:]&lt;/span>

&lt;span class="mtk1">menu_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk6">\n&lt;/span>
&lt;span class="mtk4">-------------------------&lt;/span>
&lt;span class="mtk4">| Menu |&lt;/span>
&lt;span class="mtk4">-------------------------&lt;/span>
&lt;span class="mtk4">|[0] Encrypt flag. |&lt;/span>
&lt;span class="mtk4">|[1] Send me a message! |&lt;/span>
&lt;span class="mtk4">-------------------------&lt;/span>
&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:]&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)])&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">): &lt;/span>&lt;span class="mtk3">#Custom padding, should be fine!&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pad&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">fib&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">255&lt;/span>&lt;span class="mtk1">))[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"0"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pad&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pad&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">checkpad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">start&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fib&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">newfib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fib&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk1">start&lt;/span>&lt;span class="mtk1">][::&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">newfib&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">newfib&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SuperSecureEncryption&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk3"># This should be unbreakable!&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">replace&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\x00&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\xff&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">) &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">replace&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\x00&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\xff&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dec&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dec&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dec&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_plain&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dec&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lb_cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">checkpad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encryptFlag&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SuperSecureEncryption&lt;/span>&lt;span class="mtk1">(key).&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(flag)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'encrypted_flag: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">a: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">b: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Error: Ciphertext length must be a multiple of th&lt;/span>&lt;span class="mtk4">e block length (16)!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Error: a and b must have lengths of 16 bytes!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">decrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SuperSecureEncryption&lt;/span>&lt;span class="mtk1">(key).&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">decrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Message successfully sent!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Error: Message padding incorrect, not sent."&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk1">wlc_msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk1">menu_msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Your option: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"0"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk8">encryptFlag&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"1"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Enter your ciphertext in hex: "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Enter the B used during encryption in hex: "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{th3_s3crt_A}'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># My secret A! Only admins know it, and plus, othe&lt;/span>&lt;span class="mtk3">r people won't be able to work out my key anyway!&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Provided input is not hex!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Invalid input, please try again."&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RequestHandler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">handle&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">endswith&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">).decode()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">close&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.close()&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Server&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingTCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle_error&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">request&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">client_address&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.request.close()&lt;/span>

&lt;span class="mtk1">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1337&lt;/span>
&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Server&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">'0.0.0.0'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">port&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">RequestHandler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="cipher-analysis">Cipher analysis&lt;/h2>
&lt;p>We are given two options:&lt;/p></description></item><item><title>Find Marher's Secret</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/find-marhers-secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/find-marhers-secret/</guid><description>&lt;p>We are given a some Python source code and a server to connect to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 161.35.172.25 32275
Connected to the cyborg's debugging interface 

Options:
1. Encrypt your text.
2. Claim the key.
&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="static-code-analysis">Static code analysis&lt;/h2>
&lt;p>This is the relevant part of the code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">KEY&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">27&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Connected to the cyborg&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s debugging interface&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Options:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">1. Encrypt your text.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">2. Claim the key.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'option'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'encrypt'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'pt'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'response'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'success'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'pt'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'pt'&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk4">'ct'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'option'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'claim'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">answer&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'key'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">answer&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">():&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'response'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'success'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'flag'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'response'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'fail'&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Better luck next time.'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'response'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Invalid option!'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'response'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'error'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'An error occured!'&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>First of all, we see that we need to interact with the server using JSON-formatted messages.&lt;/p></description></item><item><title>Flippin Bank</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/flippin-bank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/flippin-bank/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socket&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk8">unpad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">binascii&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhexlify&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk1">wlcm_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'#################################################&lt;/span>&lt;span class="mtk4">#######################&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'# Welcome to the Bank of the Wor&lt;/span>&lt;span class="mtk4">ld #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'# All connections are monitored and r&lt;/span>&lt;span class="mtk4">ecorded #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'# Disconnect IMMEDIATELY if you are not an a&lt;/span>&lt;span class="mtk4">uthorized user! #&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'#################################################&lt;/span>&lt;span class="mtk4">#######################&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_data&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">padded&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.encode(),&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">style&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'pkcs7'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">padded&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt_data&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">encryptedParams&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">paddedParams&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">( &lt;/span>&lt;span class="mtk8">unhexlify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">encryptedParams&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">paddedParams&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'admin&amp;amp;password=g0ld3n_b0y'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unpad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">paddedParams&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">style&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'pkcs7'&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'username: '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">"'s password: "&lt;/span>&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passwd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">wlcm_msg&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'logged_username='&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'&amp;amp;password='&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passwd&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'admin&amp;amp;password=g0ld3n_b0y'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AssertionError&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'You cannot login as an admin from an external IP.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Your activity has been logged. Goodbye!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">raise&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'logged_username='&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'&amp;amp;password='&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passwd&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Leaked ciphertext: "&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_data&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk4">"enter ciphertext: "&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">check&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt_data&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">check&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'Logged in successfully!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Your flag is: '&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_msg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'Please try again.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.close()&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TaskHandler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ThreadingTCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ThreadingTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">'0.0.0.0'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">TaskHandler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server allows us to enter a username and a password:&lt;/p></description></item><item><title>Gonna-Lift-Em-All</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/gonna-lift-em-all/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/gonna-lift-em-all/</guid><description>&lt;p>We got the Python source code used to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{?????????????????????????????????????????????&lt;/span>&lt;span class="mtk4">?????????????????????????}'&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_params&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">x&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pubkey&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pubkey&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">privkey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_params&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'data.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'p = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">g = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">h = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">(c1, c2) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Hash the Filesystem</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/hash-the-filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/hash-the-filesystem/</guid><description>&lt;p>We are given a Python source code that asks to sign in and offers some functionalities. This is the main function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fnames&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">initializeDatabase&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'admin'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fnames&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Super secret file server for malicious operations&lt;/span>&lt;span class="mtk4">.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Who are you:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'admin'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Administrator can access the server only via ssh.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Goodbye!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'timestamp'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">time&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">time&lt;/span>&lt;span class="mtk1">())})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Your token is: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'1. Upload a file.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">2. Available files.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">3. Download a file.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Submit your token, passphrase, and file.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'token'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">keys&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">]] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'data'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'passphrase'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">uploadFile&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">]].append(&lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'success'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Submit your token.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'token'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">keys&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'files'&lt;/span>&lt;span class="mtk1">: []})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">files&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'files'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">files&lt;/span>&lt;span class="mtk1">})&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Submit your token and passphrase.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'token'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">token_ct&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'passphrase'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getFname&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">passphrase&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">files&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file_record&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'username'&lt;/span>&lt;span class="mtk1">]]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">files&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">'filename'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'success'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">content&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">readFile&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'filename'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">fname&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'success'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'content'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">content&lt;/span>
&lt;span class="mtk1"> })&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Wrong option.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'An error has occured. Please try again.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>First of all, there&amp;rsquo;s a user called &lt;code>admin&lt;/code> that has some files:&lt;/p></description></item><item><title>Homomurphy's Law</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/homomurphys-law/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/homomurphys-law/</guid><description>&lt;p>We are given the source code of a ransomware project.&lt;/p>
&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>This is &lt;code>ransomware.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Random&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">encryption&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">MBEGIN&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"---BEGIN MORPHEUS KEY---"&lt;/span>
&lt;span class="mtk1">MEND&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"---END MORPHEUS KEY---"&lt;/span>

&lt;span class="mtk1">GBEGIN&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"----BEGIN GPUBLIC KEY---"&lt;/span>
&lt;span class="mtk1">GEND&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"---END GPUBLIC KEY---"&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"note.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"r"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">note&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AESP&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">gm&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">GM&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">obf&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">OBF&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">obf_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">obf&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">obfuscate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">gm&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">obf_key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_key&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pwn&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">directory&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">listdir&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">directory&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">directory&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"/"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"wb"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_data&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rename&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">r&lt;/span>&lt;span class="mtk4">'.IBKFZ'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk3"># Here will be the flag and other files&lt;/span>
&lt;span class="mtk8">pwn&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"sensitive_data"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">enc_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">enc_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_key&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"sensitive_data/custom_note.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">note&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">MBEGIN&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">MEND&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">GBEGIN&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">gm&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">gm&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">GEND&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This script defines some instances &lt;code>AESP&lt;/code>, &lt;code>GM&lt;/code> and &lt;code>OBF&lt;/code>. The function named &lt;code>pwn&lt;/code> takes every file in &lt;code>sensitive_data&lt;/code> and encrypts it with AES. Then, the AES key is obfuscated with &lt;code>obf.obfuscate&lt;/code> and encrypts it with &lt;code>gm.encrypt&lt;/code>. The result is saved as &amp;ldquo;MORPHEUS KEY&amp;rdquo; and &amp;ldquo;GPUBLIC KEY&amp;rdquo; in &lt;code>sensitive_data/custom_note.txt&lt;/code>:&lt;/p></description></item><item><title>How The Columns Have Turned</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/how-the-columns-have-turned/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/how-the-columns-have-turned/</guid><description>&lt;p>We are given a Python code to encrypt the flag (&lt;code>source.py&lt;/code>), and we are also given &lt;code>dialog.txt&lt;/code> and &lt;code>encrypted_messages.txt&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>


&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'super_secret_messages.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SUPER_SECRET_MESSAGES&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">readlines&lt;/span>&lt;span class="mtk1">()]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">deriveKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">derived_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">previous_letters&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">new_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">previous_char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">previous_letters&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">previous_char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">derived_key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">new_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">derived_key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">new_number&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">derived_key&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">array&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">map&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">array&lt;/span>&lt;span class="mtk1">))]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">flatten&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">array&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">array&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sub&lt;/span>&lt;span class="mtk1">])&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">twistedColumnarEncrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">derived_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">deriveKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">width&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">width&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">width&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">derived_key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)][::&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">width&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">flatten&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">2ea250216d705&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">seed&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rn&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">rn&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rng&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PRNG&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">""&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">SUPER_SECRET_MESSAGES&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rng&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">next&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">twistedColumnarEncrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'encrypted_messages.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cts&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Miyuki says:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Klaus it's your time to sign!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"All we have is the last key of this wierd encrypt&lt;/span>&lt;span class="mtk4">ion scheme.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Please do your magic, we need to gather more info&lt;/span>&lt;span class="mtk4">rmation if we want to defeat Draeger.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"The key is: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'dialog.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dialog&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Miyuki says:
Klaus it's your time to sign!
All we have is the last key of this wierd encryption scheme.
Please do your magic, we need to gather more information if we want to defeat Draeger. 
The key is: 148823505998502
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">ETYDEDTYAATOSTTUFTEETHIVHMVOSFNANDHEGIIIOCESTHTCHDHNRNYALSRPDAIRDCEEIFREEEEOETLRTRNLEEUNBEOIPYLTNOVEOAOTN 
EECNEMOTCYSSSEORIRCETFDUCEDAATAPATWTTSKTTRROCEANHHHAIHOGPTTGROIEETURAFYUIPUEEONOISECNJISAFALRIUAVSAAVPDES
GTNOERUTOIAOTIGRESHHBTSEHLORSRSSNTWINTEAUEENTAEEENOICCAFOSHDORLUFHRIALNGOYPNCEIGTAYAPETHCEOUATEFISTFBPSVK
SNUTCAGPEEPWLHITEDFNDMPNWSHFORSLEOAIPTAPEOOOAOTGOSESNADRITRAEREOSSNPECUHSNHENSAATETTPSIUIUOOHPNSKTNIRYHFT
WFAFDDSGIMMYTADNHRENINONSRSUMNITAHIANSUOEMAAEDAIFLOTFINEAYNEGYSNKROEOGFTCTNLYIIOODLOIRERVTAROTRROUNUTFAUP
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The idea here is to reverse the algorithm, let&amp;rsquo;s review what it does:&lt;/p></description></item><item><title>I know Mag1k</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/i-know-mag1k/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/i-know-mag1k/</guid><description>&lt;p>We are given the following website:&lt;/p>
&lt;p>&lt;img alt="I know Mag1k 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-I-know-Mag1k-1.webp">&lt;/p>
&lt;p>First of all, we must register a new account:&lt;/p>
&lt;p>&lt;img alt="I know Mag1k 2" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-I-know-Mag1k-2.webp">&lt;/p>
&lt;p>Now we can log in:&lt;/p>
&lt;p>&lt;img alt="I know Mag1k 3" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-I-know-Mag1k-3.webp">&lt;/p>
&lt;p>And we have access to our dashboard:&lt;/p>
&lt;p>&lt;img alt="I know Mag1k 4" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-I-know-Mag1k-4.webp">&lt;/p>
&lt;p>We can see that there are two cookies set by the server to handle authentication:&lt;/p>
&lt;p>&lt;img alt="I know Mag1k 5" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-I-know-Mag1k-5.webp">&lt;/p>
&lt;h2 id="cipher-analysis">Cipher analysis&lt;/h2>
&lt;p>The one that looks interesting is &lt;code>iknowmag1k&lt;/code>, which is Base64-encoded (and URL-encoded: &lt;code>%2B&lt;/code> is &lt;code>+&lt;/code>, &lt;code>%2F&lt;/code> is &lt;code>/&lt;/code> and &lt;code>%3D&lt;/code> is &lt;code>=&lt;/code>). If we decode it, we have 40 bytes that look random:&lt;/p></description></item><item><title>I'm gRoot</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/im-groot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/im-groot/</guid><description>&lt;p>We are given the Python source code of a server:&lt;/p>
&lt;ul>
&lt;li>&lt;code>server.py&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">pymerkle&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">InmemoryTree&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MerkleTree&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> utils &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Transaction&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">_from&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">_to&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_from&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_to&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_to&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">getSignature&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_from&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_to&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">signature&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_signature&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getSignature&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">_from&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">_to&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">_from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_to&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Block&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_transactions&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transactions&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_transactions&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">transaction&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_transactions&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">transaction&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">BlockChain&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_mined_blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">initialize&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Block&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Transaction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">mine&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">mined_blocks&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_mined_blocks&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">size&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_mined_blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">mine&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">block&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MerkleTree&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">security&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">block&lt;/span>&lt;span class="mtk1">.transactions():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mt&lt;/span>&lt;span class="mtk1">.append(&lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1">.signature())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">root_hash&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_state&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_mined_blocks&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"number"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">_mined_blocks&lt;/span>&lt;span class="mtk1">),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"transactions"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">block&lt;/span>&lt;span class="mtk1">.transactions(),&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"hash"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">root_hash&lt;/span>&lt;span class="mtk1">.hex()&lt;/span>
&lt;span class="mtk1"> })&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">valid&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_mt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MerkleTree&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">security&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_mt&lt;/span>&lt;span class="mtk1">.append(&lt;/span>&lt;span class="mtk1">_signature&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_state&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_mt&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_state&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blockchain&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">BlockChain&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blockchain&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">initialize&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mined_blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blockchain&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">mined_blocks&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>()
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"1"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_mined_blocks&lt;/span>(&lt;span class="mtk1">mined_blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"2"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># 1. Provide the forged signatures of the last blo&lt;/span>&lt;span class="mtk3">ck.&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Forged transaction signatures: "&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># 2. Test if the signatures are different from the&lt;/span>&lt;span class="mtk3"> provided ones.&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">extract_signatures&lt;/span>(&lt;span class="mtk1">mined_blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk4">"transactions"&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">evaluate_signatures&lt;/span>(&lt;span class="mtk1">_signatures&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">signatures&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># 3. Test if the signatures you gave generate the &lt;/span>&lt;span class="mtk3">same root hash.&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blockchain&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">valid&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">_signatures&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Try again"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Good Bye"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;ul>
&lt;li>&lt;code>utils.py&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[1] Explore mined blocks"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[2] Forge the last block"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">extract_signatures&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">transactions&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1">.signature() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transaction&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">transactions&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hexify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">elements&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">element&lt;/span>&lt;span class="mtk1">.hex() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">element&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">elements&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhexify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">elements&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">element&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">element&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">elements&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_mined_blocks&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">mined_blocks&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">mined_blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Block: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'number'&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Hash: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'hash'&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Transactions: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hexify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">extract_signatures&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'transactions'&lt;/span>&lt;span class="mtk1">]))&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">evaluate_signatures&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">signatures&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1">.split(&lt;/span>&lt;span class="mtk4">","&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">unhexify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">signatures&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Signatures are the same."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Something went wrong &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">_signatures&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The challenge creates some sort of transactions in a Blockchain with a &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Merkle_tree">Merkle Tree&lt;/a>. The aim of this challenge is to forge transaction signatures so that we get the same root:&lt;/p></description></item><item><title>Iced TEA</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/iced-tea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/iced-tea/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">l2b&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enum&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Enum&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">Enum&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ECB&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">01&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">CBC&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">02&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)]&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">DELTA&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">9e3779b9&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">iv&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CBC&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ECB&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ECB&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Mode&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CBC&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">IV&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">_xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">X&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">:])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEY&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">DELTA&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">K&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msk&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">m0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># m = m0 || m1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">l2b&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>



&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Key : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">KEY&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">Ciphertext : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Infinite Descent</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/infinite-descent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/infinite-descent/</guid><description>&lt;p>We are given a Python with a weird RSA implementation (&lt;code>fastprimes.py&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python&lt;/span>
&lt;span class="mtk3">#*************************************************&lt;/span>&lt;span class="mtk3">*********************&lt;/span>
&lt;span class="mtk3"># filename: fasterprimes.py&lt;/span>
&lt;span class="mtk3"># version: 0.06.2-alpha&lt;/span>
&lt;span class="mtk3"># release date: 20170806&lt;/span>
&lt;span class="mtk3"># dev: Cayce Pollard&lt;/span>
&lt;span class="mtk3"># qa: NOT PASSED, open defects.&lt;/span>
&lt;span class="mtk3"># finds a specified length prime, then a neighbour&lt;/span>&lt;span class="mtk3">ing prime for speed. &lt;/span>
&lt;span class="mtk3"># DEFECTS&lt;/span>
&lt;span class="mtk3"># ID[243], category A4, owner: CayceP, comment: ma&lt;/span>&lt;span class="mtk3">y have to be run several times to generate valid R&lt;/span>&lt;span class="mtk3">SA values&lt;/span> 
&lt;span class="mtk3"># ID[552], category A9, owner: AppSec, comment: Do&lt;/span>&lt;span class="mtk3"> neighbouring primes present a security risk?&lt;/span>
&lt;span class="mtk3">#*************************************************&lt;/span>&lt;span class="mtk3">*********************&lt;/span>


&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">construct&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">egcd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">egcd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPQ&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n_length&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">#generates a 1024 bit key.&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">firstprime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">n_length&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#let's get our first number&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lowerp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">firstprime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">upperp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">firstprime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">lowerp&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">upperp&lt;/span>&lt;span class="mtk1">): &lt;/span>&lt;span class="mtk3">#getPrime takes too long so we'll find a nearby pr&lt;/span>&lt;span class="mtk3">ime for q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">firstprime&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">: &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">isprime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">secondprime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">firstprime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">secondprime&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">65537&lt;/span>

&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPQ&lt;/span>&lt;span class="mtk1">() &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"still trying"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>


&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">#we make our modulus&lt;/span>
&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#this one is for making the private key&lt;/span>
&lt;span class="mtk1">gcd&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">egcd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">phi&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#now we have all our RSA values. &lt;/span>

&lt;span class="mtk1">key_params&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (long(&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">), long(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">), long(&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">construct&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key_params&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">exportKey&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">publickey&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk1">exportKey&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk3">#keep the pre-shared key below 100 bytes. &lt;/span>
&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">#put the message here.&lt;/span>
&lt;span class="mtk3">#message = [ord(c) for c in message] #comment out &lt;/span>&lt;span class="mtk3">if message is int.&lt;/span>
&lt;span class="mtk3">#message = int(''.join(map(str,message)))&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'message: '&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">RSAsecret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.encrypt(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">),&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#check the encryption works &lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'RSAsecret: '&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">RSAsecret&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#send this to the recipient&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'message: '&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3">#don't send this you idiot.&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'Secret check:'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.decrypt(&lt;/span>&lt;span class="mtk1">RSAsecret&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk3">#check the message matches the decrypted message/&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have another code that generates a 128-bit key (16 bytes) for AES (&lt;code>AESbootstrap.py&lt;/code>):&lt;/p></description></item><item><title>Infinite Knapsack</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/infinite-knapsack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/infinite-knapsack/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sample&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">getstate&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">SEED&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">INIT&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MH&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generateKeys&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">public_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generateKeys&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">INIT&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">modulo&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">total&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">multiplier&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">modulo&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">modulo&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">gcd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">multiplier&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">modulo&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">public_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">multiplier&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">private_key&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">modulo&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)]&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">public_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">private_key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:].&lt;/span>&lt;span class="mtk8">zfill&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">multiplier&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">public_key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">multiplier&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">random_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">shuffled_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sample&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plaintext&lt;/span>&lt;span class="mtk1">)))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">shuffled_flag&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ord&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">random_number&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">SEED&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">getstate&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mh&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MH&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_state_one&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mh&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">encrypted_state_one&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"out.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">encrypted_state&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">mh&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">public_key&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have the output in &lt;code>out.txt&lt;/code>:&lt;/p></description></item><item><title>Initialization</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/initialization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/initialization/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Counter&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AdvancedEncryption&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">block_size&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEYS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate_encryption_keys&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CTRs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">Counter&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">block_size&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MSG&lt;/span>&lt;span class="mtk1">))] &lt;/span>&lt;span class="mtk3"># nonce reuse : avoided!&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_encryption_keys&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [[&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\x00&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MSG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">KEYS&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">i&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ctr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">CTRs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">i&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CTR&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">counter&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">ctr&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">AE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AdvancedEncryption&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">128&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MSG&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">AE&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">MSG&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'messages.txt'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">MSG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">eval&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>First of all, the script takes some messages from &lt;code>messages.txt&lt;/code> and stores them in &lt;code>MSG&lt;/code>. Then it runs &lt;code>main&lt;/code>:&lt;/p></description></item><item><title>Inside The Matrix</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/inside-the-matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/inside-the-matrix/</guid><description>&lt;p>We are given the source code of the server in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">utils&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ascii_print&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">matrix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Matrix&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randprime&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">25&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Book&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Matrix&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randprime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">parse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">M&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Options:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[L]ook at page"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[T]urn page"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[C]heat&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Book&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"L"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ascii_print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"T"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">book&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">page_number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"C"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk8 mtku">list&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Invalid option!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"An error occurred: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>There is another file called &lt;code>matrix.py&lt;/code>:&lt;/p></description></item><item><title>Interception</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/interception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/interception/</guid><description>&lt;p>We are given the Python source code of the server. This is &lt;code>server.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">unpad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">pool&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">GREET&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ANS&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">RESTRICTED&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">GRAS&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">deadbeef&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_key&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">1337&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># this loop runs in milliseconds in our super comp&lt;/span>&lt;span class="mtk3">uter&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)[:&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">OumaraSystem&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">LIMIT&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">GRAS&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_plans&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">symmetric_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">prng&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate_key&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">symmetric_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_plans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">.encode(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">RESTRICTED&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_plans&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_encrypted_message&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">reveal_internal_plans&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">encrypted_plans&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">unpad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ep&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ep&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">encrypted_plans&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plans&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hash_verified&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">h&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_token&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">643&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'''&lt;/span>
&lt;span class="mtk4"> ___ ____ &lt;/span>&lt;span class="mtk4"> ____ _ &lt;/span>&lt;span class="mtk4"> _ &lt;/span>
&lt;span class="mtk4"> / _ \ _ _ _ __ ___ __ _ _ __ __ _ / ___| _&lt;/span>&lt;span class="mtk4">__ ___ _ _ _ __ ___ / ___| |__ __ _ _ __ _&lt;/span>&lt;span class="mtk4"> __ ___| |&lt;/span>
&lt;span class="mtk4"> | | | | | | | '_ ` _ \ / _` | '__/ _` | \___ \ / &lt;/span>&lt;span class="mtk4">_ \/ __| | | | '__/ _ \ | | | '_ \ / _` | '_ \| &lt;/span>&lt;span class="mtk4">'_ \ / _ \ |&lt;/span>
&lt;span class="mtk4"> | |_| | |_| | | | | | | (_| | | | (_| | ___) | &lt;/span>&lt;span class="mtk4">__/ (__| |_| | | | __/ | |___| | | | (_| | | | | &lt;/span>&lt;span class="mtk4">| | | __/ |&lt;/span>
&lt;span class="mtk4"> \___/ \__,_|_| |_| |_|\__,_|_| \__,_| |____/ \_&lt;/span>&lt;span class="mtk4">__|\___|\__,_|_| \___| \____|_| |_|\__,_|_| |_|_&lt;/span>&lt;span class="mtk4">| |_|\___|_|&lt;/span>
&lt;span class="mtk4">'''&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'======================================='&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'|| ||'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'|| [S]end your encrypted message ||'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'|| [R]eveal internal plans ||'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'|| [F]orgot decryption key ||'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'|| ||'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'======================================='&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">upper&lt;/span>&lt;span class="mtk1">()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_plans&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plans&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'==================== CLASSIFIED CONTENT! DO NOT S&lt;/span>&lt;span class="mtk4">HARE! ===================='&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">plans&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Plan &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4"> : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'=================================================&lt;/span>&lt;span class="mtk4">=========================='&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> PopperSystem(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_plans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.encrypt_plans()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'This channel aims at secure communication via asy&lt;/span>&lt;span class="mtk4">mmetric encryption.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'We say : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.encrypt(&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">GREET&lt;/span>&lt;span class="mtk1">)).hex()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ch&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ch&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'You say : '&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.send_encrypted_message(&lt;/span>&lt;span class="mtk1">enc_msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">verified&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Nice! We say : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.encrypt(&lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ANS&lt;/span>&lt;span class="mtk1">)).hex()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Nice! We say : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ch&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'R'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Our plans are encrypted via symmetric encryption &lt;/span>&lt;span class="mtk4">and protected with our unique super computer that &lt;/span>&lt;span class="mtk4">will take us to the Red Planet!'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter decryption key : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plans&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.reveal_internal_plans(&lt;/span>&lt;span class="mtk1">encrypted_plans&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_plans&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">plans&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ch&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'F'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Before giving you the token, you must prove me th&lt;/span>&lt;span class="mtk4">at you know the public key : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.hash_verified(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.generate_token()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Here is your token : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Make sure you do not forget it next time!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Get out!'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Hey, this is suspicious! Terminating the channel.&lt;/span>&lt;span class="mtk4">..'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">900&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And this is &lt;code>pool.py&lt;/code>:&lt;/p></description></item><item><title>Jenny From The Block</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/jenny-from-the-block/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/jenny-from-the-block/</guid><description>&lt;p>We are given this Python source code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">unpad&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">subprocess&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">allowed_commands&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'whoami'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'ls'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'cat secret.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'pwd'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">block&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">BLOCK_SIZE&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_block&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_block&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run_command&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">cmd&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">allowed_commands&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">resp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">subprocess&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">cmd&lt;/span>&lt;span class="mtk1">.decode().split(&lt;/span>&lt;span class="mtk4">' '&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">capture_output&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">resp&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">stdout&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Something went wrong!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Invalid command!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'This is Jenny! I am the heart and soul of this sp&lt;/span>&lt;span class="mtk4">aceship.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Welcome to the debug terminal. For security purpo&lt;/span>&lt;span class="mtk4">ses I will encrypt any responses.'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">command&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).strip()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run_command&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">command&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Command executed: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">command&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This code runs a server that allows us to execute system commands: &lt;code>whoami&lt;/code>, &lt;code>ls&lt;/code>, &lt;code>cat secret.txt&lt;/code> or &lt;code>pwd&lt;/code>. However, the output plus an information message is encrypted with these functions, in blocks of 32 bytes:&lt;/p></description></item><item><title>Living with Elegance</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/living-with-elegance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/living-with-elegance/</guid><description>&lt;p>We are given the following Python script that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">token_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b2l&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ElegantCryptosystem&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">S&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">token_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">noise_prod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_encryption&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">token_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">punc_prod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">S&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">noise_prod&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">punc_prod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">_x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAGBIN&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'rb'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()))[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ElegantCryptosystem&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Specify the index of the bit you want to get an e&lt;/span>&lt;span class="mtk4">ncryption for : '&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">isnumeric&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'The index must be an integer.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAGBIN&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'The index must lie in the interval [0, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAGBIN&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">]'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAGBIN&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_encryption&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Here is your ciphertext: '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'A = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">b2l&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">A&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'b = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server allows us to get the encryption result for each bit we indicate from the flag:&lt;/p></description></item><item><title>Lost Modulus</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/lost-modulus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/lost-modulus/</guid><description>&lt;p>We are given a short Python code to encrypt the flag, and we are given the ciphertext in hexadecimal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/python3&lt;/span>
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span> &lt;span class="mtk5">import&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk8">inverse&lt;/span> 
&lt;span class="mtk1">flag&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
 &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk6">3&lt;/span>
 &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span> &lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>
 &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">))&lt;/span>
 &lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">:&lt;/span> &lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk1">-&amp;gt;&lt;/span> &lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">pt&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span> &lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">ct&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">:&lt;/span> &lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk1">-&amp;gt;&lt;/span> &lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk1">ct&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(),&lt;/span> &lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk1">pt&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
 &lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span> &lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
 &lt;span class="mtk1">crypto&lt;/span> &lt;span class="mtk5">=&lt;/span> &lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">()&lt;/span>
 &lt;span class="mtk8">print&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Flag:'&lt;/span>&lt;span class="mtk1">,&lt;/span> &lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">__name__&lt;/span> &lt;span class="mtk5">==&lt;/span> &lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
 &lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Flag: 05c61636499a82088bf4388203a93e67bf046f8c49f62857681ec9aaaa40b4772933e0abc83e938c84ff8e67e5ad85bd6eca167585b0cc03eb1333b1b1462d9d7c25f44e53bcb568f0f05219c0147f7dc3cbad45dec2f34f03bcadcbba866dd0c566035c8122d68255ada7d18954ad604965 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The challenge script is using $e = 3$, which is the exponent used to encrypt the flag. This is how RSA cryptosystem works, where $m$ is the plain text, $c$ is the ciphertext and $n$ is the public modulus:&lt;/p></description></item><item><title>LunaCrypt</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/lunacrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/lunacrypt/</guid><description>&lt;p>The challenge provides an output file with encrypted data and the source code used to it. However, the code is a little difficult to read because there are a lot of functions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">time&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">time&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">process_time&lt;/span>

&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">chr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">strbyt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">ord&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>
&lt;span class="mtk1">bitrst&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>
&lt;span class="mtk1">bitext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">z&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">bitrst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">z&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>
&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>
&lt;span class="mtk1">btest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: (&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">y&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">mthrsd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">osltim&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">time&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1">oslclk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">lambda&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">process_time&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk1">FL_NEGATE&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_UNUSED3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_XORBY6B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_XORBY3E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_UNUSED2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_SWAPBYTES&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">6&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">FL_UNUSED1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">currtime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">osltim&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">osltim&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">currtime&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>

&lt;span class="mtk1">mthrsd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">osltim&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">oslclk&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1000&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">type&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">is&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strbyt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">GenerateFlag&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_SWAPBYTES&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_NEGATE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_XORBY6B&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_XORBY3E&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_UNUSED3&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_UNUSED2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mthrnd&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">finalflag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_UNUSED1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">finalflag&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">CheckFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">btest&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ESwapChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">THIS_MSB&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitext&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">THIS_LSB&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bitext&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitbor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">THIS_MSB&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">0D&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitlst&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">THIS_LSB&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">B0&lt;/span>&lt;span class="mtk1">)))&lt;/span> 

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">XorBy6B&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">6B&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">XorBy3E&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">3E&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">NegateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">255&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">FLAGS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1">CHARS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">AppendFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAGS&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bitxor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">4A&lt;/span>&lt;span class="mtk1">)))&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">EncryptCharacter&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ValidateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">GenerateFlag&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">CheckFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_SWAPBYTES&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ESwapChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">CheckFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_NEGATE&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">NegateChar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">CheckFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_XORBY6B&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">XorBy6B&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">CheckFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FL_XORBY3E&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">XorBy3E&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">flag&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_Encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">EncryptCharacter&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">strbyt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">type&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">is&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">strchr&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">CHARS&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">AppendFlag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_Encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">ord&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">ord&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAGS&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]))&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">CHARS&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">' '&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">output&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">file&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">close&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-deobfuscation">Source code deobfuscation&lt;/h2>
&lt;p>Basically, the &lt;code>_Encrypt&lt;/code> function takes the characters of the plaintext and encrypts each character in &lt;code>EncryptCharacter&lt;/code>. There are a lot of &lt;code>lambda&lt;/code> functions that perform simple operations on characters and numbers.&lt;/p></description></item><item><title>Mayday Mayday</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/mayday-mayday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/mayday-mayday/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">GCD&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alpha&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk6">9&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">delta&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk6">4&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">delta&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">alpha&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">φ&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2048&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'N = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'e = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'c = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'dp = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'dq = 0x&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dq&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">known&lt;/span>&lt;span class="mtk1">))&lt;/span>&lt;span class="mtk7 mtki">:x&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have the result in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>MSS</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/mss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/mss/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MSS&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">d&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">BITS&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">poly&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span> &lt;span class="mtk5">or&lt;/span> &lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'False'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'reason'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'This scheme is intended for less users.'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'False'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'reason'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'Enough shares for today.'&lt;/span>&lt;span class="mtk1">}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'approved'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">'True'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">poly&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">)}&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CBC&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'iv'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk4">'enc_flag'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()}&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4"># # ##### ##### # ### &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4">## ## # # # # ## # # &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # ##### ##### # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # #&lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # # # # # # # # ## # # &lt;/span>&lt;span class="mtk4"> &lt;/span>
&lt;span class="mtk4"># # ##### ##### ## ##### ## ###&lt;/span>

&lt;span class="mtk4">This is a secure secret sharing scheme with really&lt;/span>&lt;span class="mtk4"> small threshold. We are pretty sure the key is se&lt;/span>&lt;span class="mtk4">cure...&lt;/span> 
&lt;span class="mtk4"> """&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">Send in JSON format any of the following commands.&lt;/span>

&lt;span class="mtk4"> - Get your share&lt;/span>
&lt;span class="mtk4"> - Encrypt flag&lt;/span>
&lt;span class="mtk4"> - Exit&lt;/span>

&lt;span class="mtk4">query = """&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">MSS&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">19&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_banner&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">()))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'command'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'command'&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'get_share'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Please send your user ID.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'encrypt_flag'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[+] Here is your encrypted flag : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cmd&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'exit'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[+] Thank you for using our service. Bye! :)'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Unknown command:('&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">TypeError&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">error&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">error&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">[-] Make sure your JSON query is properly formatte&lt;/span>&lt;span class="mtk4">d.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The challenge creates a polynomial with random coefficients, where the &lt;code>key&lt;/code> is the independent term:&lt;/p></description></item><item><title>Multipage Recyclings</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/multipage-recyclings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/multipage-recyclings/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{??????????????????????}'&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">CAES&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">)]&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">_b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">iv&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">blocks&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">xor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">block&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_block&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">leak&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">blocks&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">leak&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">CAES&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext_blocks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">blockify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">aes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">leak&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext_blocks&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">r = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">phrases = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">leak&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script in &lt;code>output.txt&lt;/code>:&lt;/p></description></item><item><title>Not that random</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/not-that-random/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/not-that-random/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">success&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\033&lt;/span>&lt;span class="mtk4">[92m[+] &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">\033&lt;/span>&lt;span class="mtk4">[0m'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fail&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\033&lt;/span>&lt;span class="mtk4">[91m&lt;/span>&lt;span class="mtk6">\033&lt;/span>&lt;span class="mtk4">[1m[-] &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">\033&lt;/span>&lt;span class="mtk4">[0m'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">MENU&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'''&lt;/span>
&lt;span class="mtk4">Make a choice:&lt;/span>

&lt;span class="mtk4">1. Buy flag (-500 coins)&lt;/span>
&lt;span class="mtk4">2. Buy hint (-10 coins)&lt;/span>
&lt;span class="mtk4">3. Play (+5/-10 coins)&lt;/span>
&lt;span class="mtk4">4. Print balance (free)&lt;/span>
&lt;span class="mtk4">5. Exit'''&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keyed_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">custom_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keyed_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">keyed_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"Improving on the security of SHA is easy"&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keyed_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">impostor_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">inp&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Casino&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">100&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">buy_flag&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">500&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">500&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">success&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Winner winner chicken dinner! Thank you for playi&lt;/span>&lt;span class="mtk4">ng, here's your flag :: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fail&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You broke"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">buy_hint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">hash_input&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Enter your input in hex :: "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Your output is :: "&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">custom_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">hash_input&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Your output is :: "&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">impostor_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">hash_input&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">play&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_hash_input&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">get_random_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"I used input "&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_hash_input&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_hash_output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">custom_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">my_hash_input&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_hash_output&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">impostor_hmac&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">my_hash_input&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"I got output "&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_hash_output&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">answer&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Was the output from my hash or random? (Enter 0 o&lt;/span>&lt;span class="mtk4">r 1 respectively) :: "&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">answer&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">my_bit&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">success&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Lucky you!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fail&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Wrong!"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_balance&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"You have &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> coins."&lt;/span>&lt;span class="mtk1">)&lt;/span>



&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Welcome to my online casino! Let's play a game!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Casino&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">player_money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MENU&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Option: '&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">buy_flag&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">buy_hint&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">play&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">casino&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">print_balance&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bye."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"The house always wins, sorry ):"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server implements a casino where we can bet for money. If we get enough, we can use option 1 to get the flag (500 coins):&lt;/p></description></item><item><title>Nuclear Sale</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/nuclear-sale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/nuclear-sale/</guid><description>&lt;p>We are given a PCAP file (&lt;code>challenge.pcap&lt;/code>). If we analyze it using Wireshark, we will see some SMTP emails:&lt;/p>
&lt;p>&lt;img alt="Nuclear Sale 1" src="https://7rocky.github.io/images/HTB-Challenges/HTB-Crypto-Nuclear-Sale-1.webp">&lt;/p>
&lt;p>The challenge is based on a series of emails sent within a company. There is some information encrypted there. These are the emails:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Hello everyone,

A potential Buyer approached us asking for a HUGE amount of plutonium. Are we even allowed to 
sell this much?

Best Regards,
Sales Dept
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">We are very XORry but the management does not approve such a sale. It may damage our business. 
Who is the buyer?

Best Regards,
Management
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">He is a high profile individual. His information is encrypted below:

6b65813f4fe991efe2042f79988a3b2f2559d358e55f2fa373e53b1965b5bb2b175cf039 

You know what you have to do.

Best Regards,
Sales Dept
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Here is the ciphertext encrypted with our key.

fd034c32294bfa6ab44a28892e75c4f24d8e71b41cfb9a81a634b90e6238443a813a3d34 

Best Regards,
Management
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Encrypting again with our key...

de328f76159108f7653a5883decb8dec06b0fd9bc8d0dd7dade1f04836b8a07da20bfe70 

Best Regards,
Sales Dept
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Oh my... This changes everything. We cannot refuse selling to this guy. He can literally destroy us. 
Move the process.

Best Regards,
Management
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Alright, we will process the order. Thanks! 

Best Regards,
Sales Dept
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>There is a hint in the second email telling that XOR cipher will be used (&amp;ldquo;We are very XORry&amp;rdquo;). Then, we have three hexadecimal strings that might be the result of XOR ciphers.&lt;/p></description></item><item><title>One Step Closer</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/one-step-closer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/one-step-closer/</guid><description>&lt;p>We are given a Python code to encrypt the flag, and a Flask application that calls the encryption function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">inverse&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{--REDACTED--}'&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">257&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">getrandbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">'ct'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'n'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'e'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk4">'b'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'x'&lt;/span>&lt;span class="mtk1">)}&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">flask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">chall&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>

&lt;span class="mtk8 mtku">app&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Flask&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">app&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">methods&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'GET'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">render_template&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'index.html'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">app&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/api/get_flag'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">methods&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'GET'&lt;/span>&lt;span class="mtk1">])&lt;/span> 
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_flag&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt_flag&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">host&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'0.0.0.0'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">port&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can express the above RSA computations in mathematical terms (let $F$ be the flag in decimal format):&lt;/p></description></item><item><title>Optimus Prime</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/optimus-prime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/optimus-prime/</guid><description>&lt;p>We are given a remote instance to connect to. There are some options:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.99.202.193 31899
Your people must learn to be masters of their own fate.
1. View status of the Transformer.
2. View Serial ID's of the Transformer.
3. Register new Transformer.
4. Enter to the access panel.
Enter the option: 1
 Battery: 60%
 Mechanical damages: 14%
 Heat: 64.76 ºC


Ncat: Broken pipe.

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.99.202.193 31899
Your volume, like any capability, is also a responsibility.
1. View status of the Transformer.
2. View Serial ID's of the Transformer.
3. Register new Transformer.
4. Enter to the access panel.
Enter the option: 2
 Processor ID: 5iG6i-u7gb5
 Engine ID: XVZYI_278
 Rotor ID: 788hdIVu
 Controller ID: 435b7
 UV RAY Laser: N-yg797
 Lens ID: eye-455
 Armor ID: 6fJKC-43efw
 E.L.F ID: Yon6.oiL
 Sensors ID: DGTX-486f


Ncat: Broken pipe.

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.99.202.193 31899
Neither impossible, nor impassable!
1. View status of the Transformer.
2. View Serial ID's of the Transformer.
3. Register new Transformer.
4. Enter to the access panel.
Enter the option: 3
You can't register a new Transformer until you log in


Ncat: Broken pipe.

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 167.99.202.193 31899
Neither impossible, nor impassable!
1. View status of the Transformer.
2. View Serial ID's of the Transformer.
3. Register new Transformer.
4. Enter to the access panel.
Enter the option: 4

ENCRYPTED PASSWORD: 478433640659999909494191352317871798130455824918379548803426918434917846639343016566162840910865561178722256715981978209460254339146239711331342400226506789950101981589316626554270102018898421811117722378733550248600097683887697688604134869368517906548458208251021435357024461369811788365509479210707348656092869889564338136336543331671149450042893739237285802897073477565614570522656667036132585939975696784680815717851583346707640317324432358245031147929286213666773861704595122964859916902660079486583256859654560907207756060808745941468321485063015298630156644267999050346301234569247203357193989245850972352536744184424711523579547352961208825878553154832349587187344121773681413828873274598590409300089865600358498669459273494865441858894195460943962230569092193081568834701100790852366960295527607344882593597464702313029563578260916592447601774708819078699287065353277224184336953141401114989828012740785816597467134398795454332960168213069367520422690188330360363547402836335519018053996252884588054197617439636359408910390135159839471927018087222389985022566622381108776793949150510196977124060472434418599667191540426334403433398301838300639236441554597495553171237299370972025039094868074461193337336268675948069907974382 
The private key has been sent to your email. Please use it to proceed:


Ncat: Broken pipe.
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It seems that the only interesting option is the fourth one. It uses a public key cryptosystem (probably RSA).&lt;/p></description></item><item><title>Oracle Leaks</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/oracle-leaks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/oracle-leaks/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">cryptography&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">hazmat&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">primitives&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">asymmetric&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">rsa&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_length&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ceil&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">10001&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">rsa&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate_private_key&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">public_exponent&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key_size&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk9 mtki">size&lt;/span>
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">public_key&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">public_numbers&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">private_numbers&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk1">d&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n_size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">ceil&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">B&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n_size&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">) &lt;/span>


&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">02&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n_size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">random_pad&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n_size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_length&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">random_pad&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">val&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">random_pad&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_length&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">padded_pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">padded_pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ct&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{dummyflag}'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1024&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tmp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">size&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tmp&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Please choose:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1. Get public key.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2. Get encrypted flag.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3. Get length.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">opt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">opt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'1'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pub_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tmp&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">tmp&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'(n,e): '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pub_key&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">opt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'2'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Encrypted text: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">opt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'3'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Provide a ciphertext:&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">tmp&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">length&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_length&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Length: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">length&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Wrong option!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid Input. Exit!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>The server uses RSA to encrypt the flag (with a random padding):&lt;/p></description></item><item><title>Partial Tenacity</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/partial-tenacity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/partial-tenacity/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PKCS1_OAEP&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSACipher&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSA&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PKCS1_OAEP&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RSACipher&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'n = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'p = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)[::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'q = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Perfect Synchronization</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/perfect-synchronization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/perfect-synchronization/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>

&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">all&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">.isupper() &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">{_}&lt;/span>&lt;span class="mtk4"> '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>&lt;span class="mtk1">])&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">salt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">15&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">.encode() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">salt&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">]&lt;/span> 


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">MESSAGE&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w+'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script (since it is a very large output, it os not completely shown here):&lt;/p></description></item><item><title>Protein Cookies 2</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/protein-cookies-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/protein-cookies-2/</guid><description>&lt;p>This challenge uses the same code base as &lt;a target="_blank" href="../protein-cookies">Protein Cookies&lt;/a>, so we will assume a lot of infrastructure things.&lt;/p>
&lt;h2 id="target">Target&lt;/h2>
&lt;p>The aim of the challenge is to forge a session cookie to be authenticated in order to download the secret PDF file containing the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk1">web&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/program'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8">verify_login&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">program&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">send_file&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.pdf'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The cookie (named &lt;code>login_info&lt;/code>) is created and verified in &lt;code>util.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">create_cookie&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">is_logged_in&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'user_id=&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">&amp;amp;isLoggedIn=&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">is_logged_in&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> lj12_hash(&lt;/span>&lt;span class="mtk1">SECRET&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify_cookie&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">cookie_data&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">cookie_data&lt;/span>&lt;span class="mtk1">.split(&lt;/span>&lt;span class="mtk4">"."&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> lj12_hash(&lt;/span>&lt;span class="mtk1">SECRET&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.encode()) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">parse_qs&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">items&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> }.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'isLoggedIn'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'True'&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="cookie-crafting">Cookie crafting&lt;/h2>
&lt;p>This cookie is crafted with the the following code (&lt;code>cryptoutil.py&lt;/code>):&lt;/p></description></item><item><title>Quadratic Points</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/quadratic-points/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/quadratic-points/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> utils &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> EllipticCurve, find_valid_quadratic_coefficients&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sys&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_input_with_timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">prompt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">timeout&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">alarm_handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">signum&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">frame&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Time limit exceeded. Exiting..."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sys&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">signal&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">SIGALRM&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">alarm_handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">timeout&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">input_data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">prompt&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">input_data&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">finally&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># Disable the alarm&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>


&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> find_valid_quadratic_coefficients()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Hello Cryptographer, please enter the coefficient&lt;/span>&lt;span class="mtk4">s of the quadratic equation to proceed, hint: a*x^&lt;/span>&lt;span class="mtk4">2 + b*x + c == 0, x = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ai&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_input_with_timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"a: "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bi&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_input_with_timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"b: "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ci&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_input_with_timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"c: "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ai&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bi&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ci&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">13&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># did you think I would be that careless?&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">any&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">abs&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">60&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">ai&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bi&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ci&lt;/span>&lt;span class="mtk1">]):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Nope!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You passed the first test, now onto the second&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">40&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> EllipticCurve(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, [&lt;/span>&lt;span class="mtk1">bi&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">ci&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">.random_point()&lt;/span>
&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">Gn&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">.mul(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"G = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">G&lt;/span>&lt;span class="mtk1">.xy()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Gn = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">Gn&lt;/span>&lt;span class="mtk1">.xy()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"p = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">E&lt;/span>&lt;span class="mtk1">.p&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>First of all, the server asks us to find the coefficients for a quadratic polynomial with a given root (7 times):&lt;/p></description></item><item><title>RLotto</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rlotto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rlotto/</guid><description>&lt;p>We are given the source code of a server that gives five numbers and the objective is to guess the next five numbers to win the lottery:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 46.101.63.21 31102
__/\____/\____/\____/\____/\____/\____/\____/\__ 
\ /\ /\ /\ /\ /\ /\ /\ /
/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\
 \/ \/ \/ \/ \/ \/ \/ \/
 __ _ _ ____ ___ ____ ___
 / / ___ | |_| |_ ___|___ \ / _ \___ \ / _ \
 / / / _ \| __| __/ _ \ __) | | | |__) | | | |
/ /__| (_) | |_| || (_) / __/| |_| / __/| |_| |
\____/\___/ \__|\__\___/_____|\___/_____|\___/

__/\____/\____/\____/\____/\____/\____/\____/\__
\ /\ /\ /\ /\ /\ /\ /\ /
/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\/_ _\
 \/ \/ \/ \/ \/ \/ \/ \/
------------------------------------------------
1 2 3 4 5 6 7 8 9 10
&lt;span class="code-green">11&lt;/span> 12 13 14 15 16 17 18 19 20
21 22 23 24 25 26 27 28 29 30
31 &lt;span class="code-green">32&lt;/span> 33 34 &lt;span class="code-green">35&lt;/span> 36 37 38 39 40
41 42 43 44 45 46 47 48 49 50
51 52 53 54 55 56 57 58 59 60
61 62 63 64 65 66 67 68 69 70
71 72 73 74 75 76 77 78 79 80
81 82 83 84 85 86 &lt;span class="code-green">87&lt;/span> 88 &lt;span class="code-green">89&lt;/span> 90
------------------------------------------------
&lt;span class="code-dark-red">[+]&lt;/span> EXTRACTION: 11 32 87 35 89
&lt;span class="code-dark-yellow">[?]&lt;/span> Guess the next extraction!!!
&lt;span class="code-dark-yellow">[?]&lt;/span> Put here the next 5 numbers: 1 2 3 4 5
Nope! Try again.
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="source-code-analysis">Source code analysis&lt;/h2>
&lt;p>This is the source code:&lt;/p></description></item><item><title>Rookie Mistake</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rookie-mistake/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rookie-mistake/</guid><description>&lt;p>We are given the Python source code that encrypts the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> flag&lt;/span>

&lt;span class="mtk1">flag1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(flag[:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(flag)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">69&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1">flag2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(flag[&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(flag)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">200&lt;/span>&lt;span class="mtk1">))&lt;/span> 

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">genprime&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1020&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isprime&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8">genprime&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"-"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"RSA PART"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"-"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">69420&lt;/span>
&lt;span class="mtk1">ct1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag1&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'p: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'e: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct1&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"-"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"DH PART"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"-"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">69420&lt;/span>
&lt;span class="mtk1">ct2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">flag2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'n: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'g: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct2&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Roulette</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/roulette/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/roulette/</guid><description>&lt;p>We are provided with the server source code in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">twister&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Twister&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">500&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Welcome to the Casino"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"We are playing roulette today"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">50&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Twister&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"The wheel stops on a number between 0 and 31."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"You have &lt;/span>&lt;span class="mtk6">{}&lt;/span>&lt;span class="mtk4"> coins"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"What would you like to bet on:"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"1) Even"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"2) Odd"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"3) Number"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Option: "&lt;/span>&lt;span class="mtk1">).strip())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Invalid Option."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">guess&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Pick a number: "&lt;/span>&lt;span class="mtk1">).strip())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.query(&lt;/span>&lt;span class="mtk4">"Bet: "&lt;/span>&lt;span class="mtk1">).strip())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Invalid Bet."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rand&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"The wheel stops at &lt;/span>&lt;span class="mtk6">{}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">guess&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bet&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">money&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10000000000000&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Congrats, you beat the house."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"Here's your reward: &lt;/span>&lt;span class="mtk6">{}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">format&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()))&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.close()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.write(&lt;/span>&lt;span class="mtk4">"You ran out of money. Better luck next time."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.close()&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">RequestHandler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">handle&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">endswith&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">out&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">until&lt;/span>&lt;span class="mtk1">)]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk9 mtki">string&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">newline&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">close&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.close()&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Server&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingTCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle_error&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">request&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">client_address&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.request.close()&lt;/span>

&lt;span class="mtk1">port&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">31337&lt;/span>
&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Server&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">'0.0.0.0'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">port&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">RequestHandler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The server uses a class called &lt;code>Twister&lt;/code> as a pseudo-random number generator (PRNG):&lt;/p></description></item><item><title>RsaCtfTool</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rsactftool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/rsactftool/</guid><description>&lt;p>We are given an RSA public key in PEM format (&lt;code>pubkey.pem&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">-----BEGIN PUBLIC KEY-----
MIHeMA0GCSqGSIb3DQEBAQUAA4HMADCByAKBwHfR4yv+QfsHYSvLlS6LGW2cMDlB 
3RlH1PteD7gN6nU4KhyMlRznOUQI7cgB082btMWs1usPYfUSrqkDs+1EDrzzw42M
G683YvLlJRfcO2syc+YNJTDqtVHW5V3SNJ2J+WKCw0A5+ab2qA+sfhRFhvPJ7gsL
vUj+blt5qweyGVheMOQvy+WXI+Vi/jwtlW3it25kBLZUoESDBg+HZKnxz3MgcJ6X
roMdjPPwTH2f8sOrCTI1jJzNUYxJ9JQ0QPTrxwIDAQAB
-----END PUBLIC KEY-----
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can open it in Python and see what values we have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">python3&lt;/span> -q
&amp;gt;&amp;gt;&amp;gt; from Crypto.PublicKey import RSA
&amp;gt;&amp;gt;&amp;gt; with open('pubkey.pem') as f:
... key = RSA.import_key(f.read())
...
&amp;gt;&amp;gt;&amp;gt; key.e
65537
&amp;gt;&amp;gt;&amp;gt; key.n
1128137999850045612492145429133282716267233566834715456536184965477269592934207986950131365518741418540788596074115883774105736493742449131477464976858161587355643311888741515506653603321337485523828144179637379528510277430032789458804637543905426347328041281785616616421292879871785633181756858096548411753919440011378411476275900648915887370219369154688926914542233244450724820670256654513052812215949495598592852131398736567134556141744727764716053145639513031 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We can try to factor the modulus $n$ so that we get the private prime numbers $p$ and $q$ of a common RSA cryptosystem. In SageMath:&lt;/p></description></item><item><title>signup</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/signup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/signup/</guid><description>&lt;p>We are given the Python source code to encrypt the flag (&lt;code>app.py&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span> 
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha512&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">SystemRandom&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> flag&lt;/span>

&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2048&lt;/span>
&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">repeating_xor_key&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">repeation&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">repeation&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">)])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">domain_params_generation&lt;/span>&lt;span class="mtk1">():&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"[+] q condition is satisfied : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> bit"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">factor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">factor&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"[+] p condition is satisfied : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">L&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> bit"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">factor&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"[+] g condition is satisfied "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_generation&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">g&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># print(f"[+] private key : {x}")&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"[+] public key : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">private_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">parameters&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">parameters&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Hm&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">.encode(&lt;/span>&lt;span class="mtk4">'utf-8'&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">Hm&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">private_key&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">signature&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">public_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">parameters&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">parameters&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">signature&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Hm&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">.encode(&lt;/span>&lt;span class="mtk4">'utf-8'&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">u1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">Hm&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">u2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ( (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">u1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">public_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">u2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> ) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"[+] Valid signature"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[!] Invalid signature"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>


&lt;span class="mtk1">parameters&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">domain_params_generation&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">parameters&lt;/span>

&lt;span class="mtk1">keys&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_generation&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">keys&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"=================================================&lt;/span>&lt;span class="mtk4">============================================"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"===================================== Let's signu&lt;/span>&lt;span class="mtk4">p =========================================="&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"=================================================&lt;/span>&lt;span class="mtk4">============================================"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'./messages'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">o&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">messages&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">o&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">readlines&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">messages&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rstrip&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"*************************************************&lt;/span>&lt;span class="mtk4">*******************************"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"message : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">parameters&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">signature&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"signature: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">signature&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># verify(message, signature, y, parameters)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">o&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">close&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">ctf&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">repeating_xor_key&lt;/span>&lt;span class="mtk1">(flag, &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"[+] Cipher Text Flag (CTF) : "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ctf&lt;/span>&lt;span class="mtk1">))[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:])&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Moreover, we have the output of the script (&lt;code>output.txt&lt;/code>):&lt;/p></description></item><item><title>Space Pirates</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/space-pirates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/space-pirates/</guid><description>&lt;p>We are given this Python source code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">sympy&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">md5&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">randbytes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{dummyflag}'&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Shamir&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">prime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">prime&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x_vals&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y_vals&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">next_coeff&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">val&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">md5&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">val&lt;/span>&lt;span class="mtk1">.to_bytes(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">byteorder&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">calc_coeffs&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">next_coeff&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">calc_y&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">coeff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">coeff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">create_pol&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">calc_coeffs&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x_vals&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y_vals&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">calc_y&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">x_vals&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">y_vals&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Shamir&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">92434467187580489687&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">18&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">create_pol&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_share&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randbytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'msg.enc'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'share: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">share&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'coefficient: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sss&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">coeffs&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'secret message: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc_FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">close&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And this is the output:&lt;/p></description></item><item><title>SPG</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/spg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/spg/</guid><description>&lt;p>We are given the Python source code used to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">MASTER_KEY&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">base64&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">b64encode&lt;/span>

&lt;span class="mtk1">ALPHABET&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">string&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">ascii_letters&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">string&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">digits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'~!@#$%^&amp;amp;*'&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_password&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">master_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">MASTER_KEY&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'little'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">''&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">master_key&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">master_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ALPHABET&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ALPHABET&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ALPHABET&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ALPHABET&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">master_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_password&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encryption_key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">MASTER_KEY&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encryption_key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Your Password : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">password&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">Encrypted Flag : &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">b64encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">decode&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script:&lt;/p></description></item><item><title>Spooky RSA</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/spooky-rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/spooky-rsa/</guid><description>&lt;p>We got the Python source code used to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{????????????????????????????????????????????}&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_gen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_gen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'out.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'N = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">(e1, c1) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">(e2, c2) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We also have the output of the script:&lt;/p></description></item><item><title>Symbols</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/symbols/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/symbols/</guid><description>&lt;p>We are given the Python source code used to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">307163712384204009961137975465657319439&lt;/span> 
&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1337&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bits&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">from_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'big'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'output.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">encrypted_flag&lt;/span>&lt;span class="mtk1">))&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we also have the output of the script:&lt;/p></description></item><item><title>The Three-Eyed Oracle</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/the-three-eyed-oracle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/the-three-eyed-oracle/</guid><description>&lt;p>We are given this Python source code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Padding&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">subprocess&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{--REDACTED--}'&lt;/span>
&lt;span class="mtk1">prefix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randbytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">12&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randbytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_ECB&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">padded&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pad&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">prefix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">padded&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Welcome to Klaus&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s crypto lab.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'It seems like there is a prefix appended to the r&lt;/span>&lt;span class="mtk4">eal firmware&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Can you somehow extract the firmware and fix the &lt;/span>&lt;span class="mtk4">chip?&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'An error occurred! Please try again!'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1500&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Basically, we have the opportunity to send a message that will be encrypted using AES ECB in a particular way:&lt;/p></description></item><item><title>Tsayaki</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/tsayaki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/tsayaki/</guid><description>&lt;p>We are given the source code of the server in Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">tea&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TEA&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>

&lt;span class="mtk1">ROUNDS&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">==================================================&lt;/span>&lt;span class="mtk4">==========================================&lt;/span>
&lt;span class="mtk4">|| I made this decryption oracle in which I let us&lt;/span>&lt;span class="mtk4">ers choose their own decryption keys. ||&lt;/span>
&lt;span class="mtk4">|| I think that it's secure as the tea cipher does&lt;/span>&lt;span class="mtk4">n't produce collisions (?) ... Right? ||&lt;/span>
&lt;span class="mtk4">|| If you manage to prove me wrong 10 times, you g&lt;/span>&lt;span class="mtk4">et a special gift. ||&lt;/span>
&lt;span class="mtk4">==================================================&lt;/span>&lt;span class="mtk4">==========================================&lt;/span>
&lt;span class="mtk4">"""&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">show_menu&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">20&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Here is my special message: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ROUNDS&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Round &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">/10'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Enter your target ciphertext (in hex) : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'[&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">/&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">1}&lt;/span>&lt;span class="mtk4">] Enter your encryption key (in hex) : '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used_keys&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">TEA&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">IV&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">server_message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Hmm ... close enough, but &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> does not look like &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> at all! Bye...'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Nope.'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertexts&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">ct&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Wait, really? &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">run&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>This challenge is kind of the second part of &lt;a target="_blank" href="../iced-tea">Iced TEA&lt;/a>, because the server also uses &lt;a target="_blank" href="https://en.wikipedia.org/wiki/Tiny_Encryption_Algorithm">Tiny Encryption Algorithm&lt;/a> (TEA).&lt;/p></description></item><item><title>TurboCipher</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/turbocipher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/turbocipher/</guid><description>&lt;p>This challenge was made by me for Hack The Box. We are given the Python source code of a server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/bin/env python3&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">fast_turbonacci&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">fast_turbocrypt&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">typing&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Callable&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span> 


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">lcg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbocrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">Callable&lt;/span>&lt;span class="mtk1">[[&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">]) -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sum&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">))&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">() -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Choose one option'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'1. Encrypt flag'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'2. Encrypt ciphertext'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'3. Exit'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'&amp;gt; '&lt;/span>&lt;span class="mtk1">))&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fast_turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">turbocrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fast_turbocrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Welcome to TurboCipher. Please login first'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'MathFA enabled. Parameters:&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n{&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">nonce&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getRandomRange&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'Please, use &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">nonce&lt;/span>&lt;span class="mtk1"> = &lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> to generate for your TurbOTP'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">otp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'OTP: '&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">otp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fast_turbonacci&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">nonce&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Login incorrect'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Login successful'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">f&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">) -&amp;gt; &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">lcg&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> := &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">()) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">fast_turbocrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">f&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'pt = '&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'ct = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">fast_turbocrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pt&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">f&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Thank you for using TurboCipher. See you soon!'&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>It uses a &lt;code>secret&lt;/code> module to import &lt;code>FLAG&lt;/code>, and two functions &lt;code>fast_turbonacci&lt;/code> and &lt;code>fast_turbocipher&lt;/code>, which are unknown.&lt;/p></description></item><item><title>TwoForOne</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/twoforone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/twoforone/</guid><description>&lt;p>We are given two public keys in PEM format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxqy430huZnHUpVZIA+HD 
IUqOJ03grABD7CjIWJ83fH6NMIvD4wKFA4Q0S6eYiIViCkGOatlVV4KE/ATyifEm
s4oBgWJRzvmhT9TCSdlraQh/qRsuGtvcgMuW/wzLYSnY9nN9qFDEUfLtP2y2HDaJ
Hckk0Kso8mrfDtNXzoSNAv/gCRJxTM9jcsH0EIDoZ0egMD61zfbOkS8RRP1PVXQ8
eWh1oU/f+Pi2YhUMVr5YsJI5dx3ETZaQecStj9mTvGMLeFXS4C6L4Wgk3NWrOBMj
HBcxEQqL0CjXod+riS51KUVXuvxxrq9eSNsCZ6bbY9NQ+ZUGjuHK1tMt8RpJvSS6
lwIDAQAB
-----END PUBLIC KEY-----
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxqy430huZnHUpVZIA+HD 
IUqOJ03grABD7CjIWJ83fH6NMIvD4wKFA4Q0S6eYiIViCkGOatlVV4KE/ATyifEm
s4oBgWJRzvmhT9TCSdlraQh/qRsuGtvcgMuW/wzLYSnY9nN9qFDEUfLtP2y2HDaJ
Hckk0Kso8mrfDtNXzoSNAv/gCRJxTM9jcsH0EIDoZ0egMD61zfbOkS8RRP1PVXQ8
eWh1oU/f+Pi2YhUMVr5YsJI5dx3ETZaQecStj9mTvGMLeFXS4C6L4Wgk3NWrOBMj
HBcxEQqL0CjXod+riS51KUVXuvxxrq9eSNsCZ6bbY9NQ+ZUGjuHK1tMt8RpJvSS6
lwIDBTy3
-----END PUBLIC KEY-----
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have also two ciphertexts that match respectively with the above public keys. It is important to say that the message is the same:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">RBVdQw7Pllwb42GDYyRa6ByVOfzRrZHmxBkUPD393zxOcrNRZgfub1mqcrAgX4PAsvAOWptJSHbrHctFm6rJLzhBi/rAsKGboWqPAWYIu49Rt7Sc/5+LE2dvy5zriAKclchv9d+uUJ4/kU/vcpg2qlfTnyor6naBsZQvRze0VCMkPvqWPuE6iL6YEAjZmLWmb+bqO+unTLF4YtM1MkKTtiOEy+Bbd4LxlXIO1KSFVOoGjyLW2pVIgKzotB1/9BwJMKJV14/+MUEiP40ehH0U2zr8BeueeXp6NIZwS/9svmvmVi06Np74EbL+aeB4meaXH22fJU0eyL2FppeyvbVaYQ== 
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">TSHSOfFBkK/sSE4vWxy00EAnZXrIsBI/Y6mGv466baOsST+qyYXHdPsI33Kr6ovucDjgDw/VvQtsAuGhthLbLVdldt9OWDhK5lbM6e0CuhKSoJntnvCz7GtZvjgPM7JDHQkAU7Pcyall9UEqL+W6ZCkiSQnK+j6QB7ynwCsW1wAmnCM68fY2HaBvd8RP2+rPgWv9grcEBkXf7ewA+sxSw7hahMaW0LYhsMYUggrcKqhofGgl+4UR5pdSiFg4YKUSgdSw1Ic/tug9vfHuLSiiuhrtP38yVzazqOZPXGxG4tQ6btc1helH0cLfw1SCdua1ejyan9l1GLXsAyGOKSFdKw== 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The public keys look very similar. Let&amp;rsquo;s import them with Python and check $n$ and $e$:&lt;/p></description></item><item><title>Vitrium Stash</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/vitrium-stash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/vitrium-stash/</guid><description>&lt;p>We are given the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>

&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">from Crypto.PublicKey import DSA&lt;/span>
&lt;span class="mtk4">k = DSA.generate(2048)&lt;/span>
&lt;span class="mtk4">print(f"{k.p = }")&lt;/span>
&lt;span class="mtk4">print(f"{k.q = }")&lt;/span>
&lt;span class="mtk4">print(f"{k.g = }")&lt;/span>
&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6"> 30514860220781649196505378618677588344627509796136052197766721133333403517227804826248671926331671978511695325934422209350872533631963158343821543243314354301612941382823755283391175569282500778759917825290265500008435125458284371701669393617263164707568562478942069967845682300866897274415749964510071038555145487346022921591488265881313448995313340365972250251431925090356830155846705412769705029295847471355919584592321591959772488755986181054597974081870037624260173234561447688627353479361867003340196122160639547860024025674714107946196423198018724048310862485718766310003158603549746994074302705926658218700843&lt;/span> 
&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6"> 26189572440233739420990528170531051459310363621928135990243626537967&lt;/span>
&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6"> 6111748161621056558453263711027460170929636824002846224800107291166700007147256826554286465237732729099376511591848799483754962591483370638607627034808201246023891469880792589537431156477847873086973414247654773443349132863425799271140168302068820170758172107172379842519843597077356839020025609506792115532019927453283319270046204956352057936972814681479252626295814756888943630138110534869191473166355939365725603055249365076889191708484425425599800051451167006426087674425090967640170968963795028092131692666710522291627118158125917935888441403300632869010691598781782043810771106247022549721544793735832383283054&lt;/span>
&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">inverse&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">u1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">u2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">w&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">v&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">u1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">u2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">v&lt;/span>

&lt;span class="mtk1">menu&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""Vitalium Storage Panel Menu:&lt;/span>
&lt;span class="mtk4">[0] Get public key of server&lt;/span>
&lt;span class="mtk4">[1] Make an account&lt;/span>
&lt;span class="mtk4">[2] View coordinates of vitalium stashes&lt;/span>
&lt;span class="mtk4">[3] Exit&lt;/span>
&lt;span class="mtk4">"""&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">panel&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">menu&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Enter option &amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'q'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'g'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'y'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">y&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">username&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Enter username &amp;gt; "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"username"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">username&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"admin"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'s'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">message&lt;/span>
&lt;span class="mtk1"> }))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"r &amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"s &amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"message &amp;gt; "&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"admin"&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Hello admin! Here are the coordinates to your vit&lt;/span>&lt;span class="mtk4">alium stash: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"You must be admin to see the coordinates."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Signature Invalid. Breach attempt detected, exiti&lt;/span>&lt;span class="mtk4">ng..."&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Exiting"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"An error occurred, exiting"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk8">panel&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>The code just implements a signing server using JSON, we can generate a username and get the signature for the corresponding JSON text:&lt;/p></description></item><item><title>Waiting List</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/waiting-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/waiting-list/</guid><description>&lt;p>We are provided with the server source code in Python (&lt;code>challenge.py&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">subprocess&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha1&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>


&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'HTB&lt;/span>&lt;span class="mtk6">{dummyflag}&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECDSA&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">11579208921035624876269744694940757352999695522413&lt;/span>&lt;span class="mtk6">5760342422259061068512044369&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">...&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">#choose your own key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha1&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:])], &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">lsb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk4">"h"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk4">"r"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk4">"s"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:], &lt;/span>&lt;span class="mtk4">"lsb"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">lsb&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:] }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig_r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig_s&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha1&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">[:&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">bin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">:])], &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig_r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">sig_r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig_s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">sig_s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">sig_s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk9 mtki">sig_r&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig_r&lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> ):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'william;yarmouth;22-11-2021;09:00'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Your appointment has been confirmed, congratulati&lt;/span>&lt;span class="mtk4">ons!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Here is your flag: '&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Your appointment has been confirmed!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Signature is not valid&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ECDSA&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Welcome to the SteamShake transplant clinic where&lt;/span>&lt;span class="mtk4"> our mission is to deliver the most vintage and hi&lt;/span>&lt;span class="mtk4">gh tech arms worldwide.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">\&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Please use your signature to verify and confirm y&lt;/span>&lt;span class="mtk4">our appointment.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Estimated waiting for next appointment: 14 months&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">&amp;gt; '&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).strip())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'pt'&lt;/span>&lt;span class="mtk1">].encode(), &lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">dt&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'s'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.sendall(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'Invalid payload.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">challenge&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">req&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2310&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">incoming&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>We are also given two CSV files called &lt;code>appointments.txt&lt;/code> and &lt;code>signatures.txt&lt;/code>:&lt;/p></description></item><item><title>Weak RSA</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/weak-rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/weak-rsa/</guid><description>&lt;p>We are given a public key in PEM format for an RSA implementation (&lt;code>key.pub&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">-----BEGIN PUBLIC KEY-----
MIIBHzANBgkqhkiG9w0BAQEFAAOCAQwAMIIBBwKBgQMwO3kPsUnaNAbUlaubn7ip 
4pNEXjvUOxjvLwUhtybr6Ng4undLtSQPCPf7ygoUKh1KYeqXMpTmhKjRos3xioTy
23CZuOl3WIsLiRKSVYyqBc9d8rxjNMXuUIOiNO38ealcR4p44zfHI66INPuKmTG3
RQP/6p5hv1PYcWmErEeDewKBgGEXxgRIsTlFGrW2C2JXoSvakMCWD60eAH0W2PpD
qlqqOFD8JA5UFK0roQkOjhLWSVu8c6DLpWJQQlXHPqP702qIg/gx2o0bm4EzrCEJ
4gYo6Ax+U7q6TOWhQpiBHnC0ojE8kUoqMhfALpUaruTJ6zmj8IA1e1M6bMqVF8sr
lb/N
-----END PUBLIC KEY-----
&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">python3&lt;/span> -q
&amp;gt;&amp;gt;&amp;gt; from Crypto.PublicKey import RSA
&amp;gt;&amp;gt;&amp;gt; key = RSA.import_key(open('key.pub').read())
&amp;gt;&amp;gt;&amp;gt; key.n
573177824579630911668469272712547865443556654086190104722795509756891670023259031275433509121481030331598569379383505928315495462888788593695945321417676298471525243254143375622365552296949413920679290535717172319562064308937342567483690486592868352763021360051776130919666984258847567032959931761686072492923 
&amp;gt;&amp;gt;&amp;gt; key.e
68180928631284147212820507192605734632035524131139938618069575375591806315288775310503696874509130847529572462608728019290710149661300246138036579342079580434777344111245495187927881132138357958744974243365962204835089753987667395511682829391276714359582055290140617797814443530797154040685978229936907206605
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>RSA works as follows: We take two large primes $p$ and $q$ and set the modulus $n = pq$. Then we choose an exponent $e$ (typically $e = 65537$) and encrypt a message $m$ in decimal format:&lt;/p></description></item><item><title>Whole Lotta Candy</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/whole-lotta-candy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/whole-lotta-candy/</guid><description>&lt;p>We got the Python source code of the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">encrypt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Encryptor&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>

&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk4">'ECB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CBC'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CFB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'OFB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CTR'&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Encryptor&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Please interact with the server using json data!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Selected mode is &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Options:&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">1.Encrypt flag&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">2.Encrypt plaintext&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">3.Change mode&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">4.Exit&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt; "&lt;/span> 
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"1"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"encrypted"&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"ciphertext"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"2"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Enter plaintext: &lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'plaintext'&lt;/span>&lt;span class="mtk1">].encode()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"encrypted"&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"ciphertext"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"3"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"modes"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"These are the supported modes&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Expecting modes: &lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'modes'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"4"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Bye bye&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"error"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"message"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Basically, we have these options:&lt;/p></description></item><item><title>Zombie Rolled</title><link>https://7rocky.github.io/en/ctf/htb-challenges/crypto/zombie-rolled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/crypto/zombie-rolled/</guid><description>&lt;p>We are given the Python source code to encrypt the flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">fractions&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">math&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">prod&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>

&lt;span class="mtk3"># I hope no one cares about Kerckhoff's principle &lt;/span>&lt;span class="mtk3">:)&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> secret &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> derive_public_key, &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">.numerator &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">.denominator, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">:&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">7&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">8&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">numerator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">.to_bytes(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"big"&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">staticmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">ar&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">ar&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Fraction&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">)&lt;/span> 


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">super&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">raise&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid key pair"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">numerator&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">prod&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">priv&lt;/span>&lt;span class="mtk1">]))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">c&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">d&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">.to_bytes(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"big"&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">nb&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fraction_mod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">magic&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)), &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">c&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">staticmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">nbits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">tuple&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">nbits&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> derive_public_key(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">prod&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ValueError&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivateKey&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"pub = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pub&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># make sure it really works&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">decrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3"># mixing them :)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"mix = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">mix&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"output.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"w"&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>And we have the result in &lt;code>output.txt&lt;/code>:&lt;/p></description></item></channel></rss>