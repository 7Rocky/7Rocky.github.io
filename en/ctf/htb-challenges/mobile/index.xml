<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mobile on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/htb-challenges/mobile/</link><description>Recent content in Mobile on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/htb-challenges/mobile/index.xml" rel="self" type="application/rss+xml"/><item><title>APKrypt</title><link>https://7rocky.github.io/en/ctf/htb-challenges/mobile/apkrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/mobile/apkrypt/</guid><description>We are given an APK file (APKrypt.apk). We need to find a VIP code inside the APK file. Hence, we will use d2j-dex2jar to get a JAR file:
$ d2j-dex2jar APKrypt.apk dex2jar APKrypt.apk -> ./APKrypt-dex2jar.jar Source code analysis Now we upload the JAR file into www.javadecompilers.com and select Jadx as decompiler.
The main file is at sources/com/example/apkrypt/MainActivity.java:
package com.example.apkrypt; import android.app.Activity; import android.os.Bundle; import android.util.Base64; import android.view.View; import android.widget.Button; import android.</description></item><item><title>Manager</title><link>https://7rocky.github.io/en/ctf/htb-challenges/mobile/manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/mobile/manager/</guid><description>We are given an APK file (Manager.apk) and a README.txt file:
1. Install this application in an API Level 29 or earlier (i.e. Android 10.0 (Google APIs)). 2. In order to connect to the server when first running the application, insert the IP and PORT that you are provided in the description. As can be seen, the Android application will connect to a remote server, so probably we will be analyzing that communication.</description></item><item><title>Pinned</title><link>https://7rocky.github.io/en/ctf/htb-challenges/mobile/pinned/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/mobile/pinned/</guid><description>We are given an APK file (pinned.apk) and a README.txt file:
1. Install this application in an API Level 29 or earlier (i.e. Android 10.0 (Google APIs)). Dynamic analysis Let&amp;rsquo;s start MobSF and Genymotion to do a dynamic analysis:
It simply shows a login form with the credentials already written. I was not able to read the password from there. If we click the button, we will see a successful message:</description></item></channel></rss>