<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blockchain on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/ctf/htb-challenges/blockchain/</link><description>Recent content in Blockchain on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://7rocky.github.io/en/ctf/htb-challenges/blockchain/index.xml" rel="self" type="application/rss+xml"/><item><title>Funds Secured</title><link>https://7rocky.github.io/en/ctf/htb-challenges/blockchain/funds-secured/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/en/ctf/htb-challenges/blockchain/funds-secured/</guid><description>We are given a Solidity file called Campaign.sol:
// SPDX-License-Identifier: UNLICENSED pragma solidity 0.8.18; import {ECDSA} from "./lib/ECDSA.sol"; /// @notice MultiSignature wallet used to end the Crowdfunding and transfer the funds to a desired address contract CouncilWallet { using ECDSA for bytes32; address[] public councilMembers; /// @notice Register the 11 council members in the wallet constructor(address[] memory members) { require(members.length == 11); councilMembers = members; } /// @notice Function to close crowdfunding campaign.</description></item></channel></rss>