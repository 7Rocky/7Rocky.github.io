<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>type-juggling on 7Rocky</title><link>https://7rocky.github.io/en/tags/type-juggling/</link><description>Recent content in type-juggling on 7Rocky</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 30 Mar 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/type-juggling/index.xml" rel="self" type="application/rss+xml"/><item><title>Altered</title><link>https://7rocky.github.io/en/htb/altered/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/altered/</guid><description>Hack The Box. Linux. Hard machine. This machine has a PHP website vulnerable to user enumeration. Then we can use brute force on a PIN to reset a password after bypassing rate limits and exploit SQLi and Type Juggling. After that, we see that the Linux kernel is vulnerable to DirtyPipe. Advanced web exploitation techniques are needed in order to compromise this machine. This write-up uses a custom Ruby script to find the valid PIN</description></item><item><title>Ransom</title><link>https://7rocky.github.io/en/htb/ransom/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/ransom/</guid><description>Hack The Box. Linux. Medium machine. This machine has a Laravel website with a login form that is vulnerable to Type Juggling. After that we find a encrypted ZIP file and we can perform a known plaintext attack to extract the files. The password expected for the login form is reused for the root user. Basic knowledge about web pentesting on PHP and knowledge about ZIP files is required in order to comprimise this machine</description></item></channel></rss>