<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary-exploitation on 7Rocky</title><link>https://7rocky.github.io/en/tags/binary-exploitation/</link><description>Recent content in binary-exploitation on 7Rocky</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 22 Oct 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/binary-exploitation/index.xml" rel="self" type="application/rss+xml"/><item><title>Faculty</title><link>https://7rocky.github.io/en/htb/faculty/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/faculty/</guid><description>Hack The Box. Linux. Medium machine. This machine has a website that is vulnerable to SQLi and autentication bypass which leads to a website where we can export HTML content to PDF. There is a vulnerability where we can attach local files to the PDF file and read a password reused for SSH. Using sudo we can execute a Node.js script as another user and exploit a command injection vulnerability. This second user is allowed to run GDB and moreover GDB has cap_sys_ptrace capability set, so we can debug a process running as root and run arbitrary code</description></item><item><title>Scanned</title><link>https://7rocky.github.io/en/htb/scanned/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/scanned/</guid><description>Hack The Box. Linux. Insane machine. This machine has a website that is able to analyze malware binaries. Analyzing the sandbox C code, we notice that we can use a log file to exfiltrate information through the web server report, and also abuse a misconfiguration to escape from chroot. Then, we can read a SQLite database file and extract a hashed password, which is reused for SSH. Once inside the machine, we are able to run a SUID binary from inside the sandbox and copy a malicious shared library so that the SUID binary runs Bash as root. Deep knowledge about Linux, programming in C and Bash, code audit experience and escaping techniques is needed in order to compromise this machine. This write-up uses a custom Bash script with an embedded C program to list directories and read files from the server and also a Go program to crack a hashed password</description></item><item><title>Retired</title><link>https://7rocky.github.io/en/htb/retired/</link><pubDate>Sat, 13 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/retired/</guid><description>Hack The Box. Linux. Medium machine. This machine has a PHP website that is vulnerable to Directory Path Traversal. There we find a PHP file that expects a file to be uploaded in order to be passed to a local socket server. We are able to enumerate open processes and download the binary that runs the server and see that it is vulnerable to Buffer Overflow. Once exploited, we can pivot to another user using symbolic links. And then, we are allowed to add custom executable formats, which can be exploited to become root. Solid binary exploitation techniques and Linux concepts are required in order to compromise this machine. This write-up contains some custom Python exploits for the foothold part</description></item><item><title>OverGraph</title><link>https://7rocky.github.io/en/htb/overgraph/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/overgraph/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that is vulnerable to Open Redirect, a web application built with AngularJS which is vulnerable to Client-Side Template Injection and XSS, and a GraphQL endpoint. We are able to register a new account bypassing an OTP code using a NoSQLi payload. Then, we can perform a CSRF attack abusing the Open Redirect to inject an XSS payload on the victim&amp;rsquo;s profile in order to get an adminToken stored in localStorage. After that, we are able to upload video files that are processed with ffmpeg, so we can exploit a Server-Side Request Forgery vulnerability to read files from the server. Eventually, we will access as a user to the machine and find a binary that is running as root. Having analyzed the binary, we can obtain a valid token to use the program and exploit a vulnerability to write arbitrary data at an arbitrary address, leading to RCE or write permissions as root</description></item><item><title>Overflow</title><link>https://7rocky.github.io/en/htb/overflow/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/overflow/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that is vulnerable to Padding Oracle Attack and Bit Flipper Attack to login as admin and also vulnerable to SQLi by a CMS. There is another subdomain that runs a version of exiftool that has an RCE vulnerability. Once in the machine, lateral movements are relatively easy and privilege escalation consists of reversing and exploiting a Buffer Overflow vulnerability on a SUID binary. Deep knowledge on web exploitation, cryptography and binary exploitation are needed in order to compromise this machine. This write-up uses a custom Python script to perform a Bit Flipper Attack and a Ruby script to exploit SQLi</description></item><item><title>Secret</title><link>https://7rocky.github.io/en/htb/secret/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/secret/</guid><description>Hack The Box. Linux. Easy Machine. This machine contains an API that uses JWT tokens for authentication. We can download the proyect and discover that it is a Git repository, so that we can see the secret key in previous commits and exploit a command injection vulnerability. There is a SUID binary that reads files as root although it only shows some statistics of the file, but we are able to kill the process and read the coredump. Web exploitation techniques, Git enumeration and knowledge about Linux processes are needed in order to compromise this machine</description></item><item><title>Hancliffe</title><link>https://7rocky.github.io/en/htb/hancliffe/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/hancliffe/</guid><description>Hack The Box. Windows. Hard machine. This machine contains a webpage that hides a Nuxeo Java application vulnerable to SSTI by breaking nginx parser logic. Then we find access the machine and find an application that has a public exploit to access as another user. After that, we extract Firefox credentials and use a password generator to login as another user and find a custom Windows PE. Having reversed the binary to obtain the expected credentials, we find a Buffer Overflow vulnerability that must be exploited via Socket Reuse to access as Administrator</description></item><item><title>Static</title><link>https://7rocky.github.io/en/htb/static/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/static/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that exposes a corrupted Gzip file that must be patched to get a TOTP key and download a VPN file. Then there are some PHP vulnerable services that can be compromised and get to an internal server that contains a binary executable file having a Format String vulnerability. Deep knowledge about pivoting and port forwarding techniques, network enumeration and PHP exploitation, as well as Format String exploitation are needed to compromise this machine. This write-up uses a custom Ruby script to automate the process of downloading the VPN file, a Python script gain RCE over a PHP web server and another Python script to exploit a binary using Format String</description></item><item><title>Rope</title><link>https://7rocky.github.io/en/htb/rope/</link><pubDate>Sat, 23 May 2020 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/rope/</guid><description>Hack The Box. Linux. Insane machine. This machine exposes a custom web server that is vulnerable to Directory Path Traversal so we can read files and discover that it is a binary file. After ananlyzing the binary, we discover that it has a Format String vulnerability that can be exploited to get RCE as john. This user is able to run another binary as user r4j. This binary uses an external library that we can modify because of its permissions and gain access as r4j. Finally, there&amp;rsquo;s another binary that runs a local socket server, we can access the binary and analyze it to find out a Buffer Overflow vulnerability. The binary has all protections set, but it is still exploitable to get RCE as root</description></item><item><title>Frolic</title><link>https://7rocky.github.io/en/htb/frolic/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/frolic/</guid><description>Hack The Box. Linux. Easy machine. This machine has a website that stores some files with different encodings and esoteric languages. In the end, we reach to a PlaySMS instance that is vulnerable to RCE using PHP. The machine has a SUID binary that is vulnerable to Buffer Overflow and leads to privilege escalation</description></item></channel></rss>