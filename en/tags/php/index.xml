<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on 7Rocky</title><link>https://7rocky.github.io/en/tags/php/</link><description>Recent content in php on 7Rocky</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Tue, 15 Mar 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Ransom</title><link>https://7rocky.github.io/en/htb/ransom/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/ransom/</guid><description>Hack The Box. Linux. Medium machine. This machine has a Laravel website with a login form that is vulnerable to Type Juggling. After that we find a encrypted ZIP file and we can perform a known plaintext attack to extract the files. The password expected for the login form is reused for the root user. Basic knowledge about web pentesting on PHP and knowledge about ZIP files is required in order to comprimise this machine</description></item><item><title>Previse</title><link>https://7rocky.github.io/en/htb/previse/</link><pubDate>Sat, 08 Jan 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/previse/</guid><description>Hack The Box. Linux. Easy machine. This machine has a webpage vulnerable to command injection after bypassing redirects and managing to register a new account. After that, a hash must be cracked to login as a low privileged user and perform a PATH hijacking using sudo. Common web pentesting and Burp Suite skills, as well as common privilege escalation techniques are needed to compromise the machine. This write-up uses a custom Go program to automate the foothold process</description></item><item><title>Static</title><link>https://7rocky.github.io/en/htb/static/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/static/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that exposes a corrupted Gzip file that must be patched to get a TOTP key and download a VPN file. Then there are some PHP vulnerable services that can be compromised and get to an internal server that contains a binary executable file having a Format String vulnerability. Deep knowledge about pivoting and port forwarding techniques, network enumeration and PHP exploitation, as well as Format String exploitation are needed to compromise this machine. This write-up uses a custom Ruby script to automate the process of downloading the VPN file, a Python script gain RCE over a PHP web server and another Python script to exploit a binary using Format String</description></item><item><title>Knife</title><link>https://7rocky.github.io/en/htb/knife/</link><pubDate>Sat, 28 Aug 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/knife/</guid><description>Hack The Box. Linux. Easy machine. This machine contains a webpage built on PHP with a version that has a backdoor and sudo permissions configured. Knowledge of the PHP version and basic privilege escalation skills are needed to compromise this machine</description></item></channel></rss>