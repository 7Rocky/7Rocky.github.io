<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ssrf on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/tags/ssrf/</link><description>Recent content in Ssrf on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 05 Mar 2024 02:25:58 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/ssrf/index.xml" rel="self" type="application/rss+xml"/><item><title>Sau</title><link>https://7rocky.github.io/en/htb/sau/</link><pubDate>Sat, 06 Jan 2024 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/sau/</guid><description>Hack The Box. Linux. Easy machine. This machine has a web application that is vulnerable to SSRF, which can be used to read the contents of an internal server, which is vulnerable to command injection. The two vulnerabilities can be chained to get RCE on the machine. The low-privileged user is able to run &lt;code>systemctl&lt;/code> as &lt;code>root&lt;/code> using &lt;code>sudo&lt;/code>, which leads to the privilege escalation via the default pager &lt;code>less&lt;/code></description></item><item><title>Awkward</title><link>https://7rocky.github.io/en/htb/awkward/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/awkward/</guid><description>Hack The Box. Linux. Medium machine. This machine has a website built in Vue.js that exposes a login form which can be easily bypassed. Then we find an API endpoint that tests connectivity of other websites, which can be exploited using Server-Side Request Forgery to find an internal API documentation. There we have some Node.js code to analyze and see how we can bypass some checks to obtain all the users information and crack a password hash. After that, we can log in, get a valid JWT token and crack it to find the secret. Therefore, we can forge any JWT token, which means we can inject any payload as token information. Using this power, we can read arbitrary files from the server exploiting &lt;code>awk&lt;/code> and find plaintext credentials inside a compressed archive. Next, we can access via SSH and find out another website built with PHP with two vulnerabilities. There is also a Cron task that takes information from a CSV file to send an email. The key here is to inject a malicious parameter in the CSV file so that the &lt;code>mail&lt;/code> command executes a malicious script, which leads to the privilege escalation</description></item><item><title>Health</title><link>https://7rocky.github.io/en/htb/health/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/health/</guid><description>Hack The Box. Linux. Medium machine. This machine has a webhook functionality that seems vulnerable to Server-Side Request Forgery. After trying some bypasses, we see that the SSRF attack can be performed using a redirection. Internally, there is an outdated Gogs version that is vulnerable to SQLi. Once found a payload to extract password hashes from the database, we can obtain and crack the hashes from the remote Gogs instance with SQLi through SSRF. Then, we can connect with SSH and find out that we can enter local paths in the database to read files from the server as root. This write-up uses a custom Python script to perform the SSRF attack and another Go program to crack Gogs hashes</description></item><item><title>OverGraph</title><link>https://7rocky.github.io/en/htb/overgraph/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/overgraph/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that is vulnerable to Open Redirect, a web application built with AngularJS which is vulnerable to Client-Side Template Injection and XSS, and a GraphQL endpoint. We are able to register a new account bypassing an OTP code using a NoSQLi payload. Then, we can perform a CSRF attack abusing the Open Redirect to inject an XSS payload on the victim&amp;rsquo;s profile in order to get an adminToken stored in localStorage. After that, we are able to upload video files that are processed with ffmpeg, so we can exploit a Server-Side Request Forgery vulnerability to read files from the server. Eventually, we will access as a user to the machine and find a binary that is running as root. Having analyzed the binary, we can obtain a valid token to use the program and exploit a vulnerability to write arbitrary data at an arbitrary address, leading to RCE or write permissions as root</description></item><item><title>Forge</title><link>https://7rocky.github.io/en/htb/forge/</link><pubDate>Sat, 22 Jan 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/forge/</guid><description>Hack The Box. Linux. Medium machine. This machine has a Server-Side Request Forgery (SSRF) vulnerability from a subdomain to an FTP server. After that, there are sudo permissions to run a Python script with a debugger. Basic web pentesting bypassing techniques are needed to compromise this machine. This write-up uses a custom Python script to exploit the SSRF</description></item></channel></rss>