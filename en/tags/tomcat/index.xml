<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tomcat on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/tags/tomcat/</link><description>Recent content in Tomcat on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 27 Jun 2024 00:41:59 +0200</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/tomcat/index.xml" rel="self" type="application/rss+xml"/><item><title>RegistryTwo</title><link>https://7rocky.github.io/en/htb/registrytwo/</link><pubDate>Sat, 03 Feb 2024 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/registrytwo/</guid><description>Hack The Box. Linux. Insane machine. This machine exposes a web application that allows to create custom domains with HTML code. Moreover, there is a Docker registry exposed where we can download Docker image blobs after getting a suitable JWT token. The web application is running a WAR file with Tomcat, we can decompile it and see that it queries a RMI server. Since Tomcat is behind an nginx reverse proxy, we can access some sensitive Tomcat &lt;em>servlets&lt;/em> to modify our session and set manager permissions on the web application. We need this to modify the RMI configuration using a mass assignment vulnerability and point the RMI server to us. After that, we can exploit an insecure deserialization vulnerability in Java to get RCE in a container. Then, we can interact with the legitimate RMI server using port forwarding. This server allows us to read arbitrary files with a directory traversal attack. We can find a plaintext password for user &lt;code>developer&lt;/code>, which is reused in SSH. Then, &lt;code>root&lt;/code> is executing a JAR file to analyze files of the hosting website by sending them to a ClamAV server. The problem here is that the JAR calls functions from the RMI register, which is restarted periodically. Therefore, we can craft a malicious RMI registry and exploit win a race condition to take the port, so that &lt;code>root&lt;/code> queries our malicious registry and talks to our fake ClamAV server. The result is that all files at &lt;code>/root&lt;/code> will be quarantined inside a readable directory, which leads to the privilege escalation</description></item><item><title>LogForge</title><link>https://7rocky.github.io/en/htb/logforge/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/logforge/</guid><description>Hack The Box. Linux. Medium machine. This machine uses Log4j in a Tomcat server that is vulnerable to JNDI lookup. Then there is an FTP server made in Java that also uses Log4j, but this time it is only vulnerable to information disclosure. Knowlegde about Log4j exploitation, Tomcat, FTP and Wireshark are needed in order to compromise this machine</description></item><item><title>Seal</title><link>https://7rocky.github.io/en/htb/seal/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/seal/</guid><description>Hack The Box. Linux. Medium machine. This machine contains a Tomcat website on top of nginx, which has a configuration vulnerability that leads to Remote Code Execution (RCE), then it has some misconfigurations related to file permissions and sudo commands. Knowledge about Tomcat exploitation and Linux file system is needed to compromise this machine</description></item><item><title>Monitors</title><link>https://7rocky.github.io/en/htb/monitors/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/monitors/</guid><description>Hack The Box. Linux. Hard machine. This machine has a WordPress web site with a plugin vulnerable to Directory Path Traversal, another website vulnerable to SQL injection, and yet another webpage vulnerable to Insecure Deserialization running inside a Docker container with system capabilities enabled. Deep knowledge about web enumeration, vulnerabilities and exploitation techniques, as well as port forwarding and Docker escaping methods are needed to compromise this machine. This write-up uses a custom Bash script to exploit Insecure Deserialization</description></item><item><title>Jerry</title><link>https://7rocky.github.io/en/htb/jerry/</link><pubDate>Sat, 17 Nov 2018 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/jerry/</guid><description>Hack The Box. Windows. Easy machine. This machine exposes a default page with Tomcat. We can access to the manager using default credentials and get Remote Code Execution on the machine as Administrator</description></item></channel></rss>