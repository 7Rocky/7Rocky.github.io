<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/tags/mysql/</link><description>Recent content in mysql on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 07 Jan 2023 00:00:00 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>Health</title><link>https://7rocky.github.io/en/htb/health/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/health/</guid><description>Hack The Box. Linux. Medium machine. This machine has webhook functionality that seems vulnerable to Server-Side Request Forgery. After trying some bypasses, we see that the SSRF attack can be performed using a redirection. Internally, there is an outdated Gogs version that is vulnerable to SQLi. Once found a payload to extract password hashes from the database, we can obtain and crack the hashes from the remote Gogs instance with SQLi through SSRF. Then, we can connect with SSH and find out that we can enter local paths in the database to read files from the server as root. This write-up uses a custom Python script to perform the SSRF attack and another Go program to crack Gogs hashes</description></item></channel></rss>