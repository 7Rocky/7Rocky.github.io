<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Capabilities on 7Rocky's Blog. Cybersecurity and Maths</title><link>https://7rocky.github.io/en/tags/capabilities/</link><description>Recent content in Capabilities on 7Rocky's Blog. Cybersecurity and Maths</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 30 Nov 2023 01:08:26 +0100</lastBuildDate><atom:link href="https://7rocky.github.io/en/tags/capabilities/index.xml" rel="self" type="application/rss+xml"/><item><title>Intentions</title><link>https://7rocky.github.io/en/htb/intentions/</link><pubDate>Sat, 14 Oct 2023 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/intentions/</guid><description>Hack The Box. Linux. Hard machine. This machine has a website with an API that is vulnerable to second-order SQLi. Then, there is an authentication mechanism that just requires the password hash, so we can take a hash from the dumped database and log in as an administrator. Then, there is a vulnerability involving PHP and ImageMagick that leads to RCE. Once in the machine, we can pivot to user &lt;code>greg&lt;/code> by analyzing a Git repository and finding plaintext credentials. After that, we are allowed to run a custom binary that hashes a given length of a file and compares the result with a set of pre-computed MD5 hashes. This binary has a capability that allows to read files as &lt;code>root&lt;/code>, which can be used to extract all the contents of any file after automating the process, which allows to read an SSH private key for &lt;code>root&lt;/code></description></item><item><title>Faculty</title><link>https://7rocky.github.io/en/htb/faculty/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/faculty/</guid><description>Hack The Box. Linux. Medium machine. This machine has a website that is vulnerable to SQLi and autentication bypass which leads to a website where we can export HTML content to PDF. There is a vulnerability where we can attach local files to the PDF file and read a password reused for SSH. Using sudo we can execute a Node.js script as another user and exploit a command injection vulnerability. This second user is allowed to run GDB and moreover GDB has cap_sys_ptrace capability set, so we can debug a process running as root and run arbitrary code</description></item><item><title>Scanned</title><link>https://7rocky.github.io/en/htb/scanned/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/scanned/</guid><description>Hack The Box. Linux. Insane machine. This machine has a website that is able to analyze malware binaries. Analyzing the sandbox C code, we notice that we can use a log file to exfiltrate information through the web server report, and also abuse a misconfiguration to escape from chroot. Then, we can read a SQLite database file and extract a hashed password, which is reused for SSH. Once inside the machine, we are able to run a SUID binary from inside the sandbox and copy a malicious shared library so that the SUID binary runs Bash as root. Deep knowledge about Linux, programming in C and Bash, code audit experience and escaping techniques is needed in order to compromise this machine. This write-up uses a custom Bash script with an embedded C program to list directories and read files from the server and also a Go program to crack a hashed password</description></item><item><title>Talkative</title><link>https://7rocky.github.io/en/htb/talkative/</link><pubDate>Sat, 27 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/talkative/</guid><description>Hack The Box. Linux. Hard machine. This machine has a website that exposes a Jamovi application where we can get a reverse shell on a Docker container. Here we find some credentials for a Bolt CMS application, so we get administration access. From here we can modify a template by writing PHP code and get access to another container. This one has connectivity with port 22 of the machine, so we can get access to the machine via SSH reusing credentials. Then, we find that there&amp;rsquo;s another Docker container running MongoDB, which contains the database for a Rocket.Chat server. At this point, we can create a new account on Rocket.Chat and assign us administration role modifying the database entry. After that, we can set a new integration to gain RCE on the container that manages Rocket.Chat. Finally, this container has capability &lt;code>CAP_DAC_READ_SEARCH&lt;/code> enabled, which allows us to read files as &lt;code>root&lt;/code> from the host machine using an exploit. Moreover, the container is also vulnerable to another exploit to write arbitrary files as &lt;code>root&lt;/code> on the host machine</description></item><item><title>Retired</title><link>https://7rocky.github.io/en/htb/retired/</link><pubDate>Sat, 13 Aug 2022 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/retired/</guid><description>Hack The Box. Linux. Medium machine. This machine has a PHP website that is vulnerable to Directory Path Traversal. There we find a PHP file that expects a file to be uploaded in order to be passed to a local socket server. We are able to enumerate open processes and download the binary that runs the server and see that it is vulnerable to Buffer Overflow. Once exploited, we can pivot to another user using symbolic links. And then, we are allowed to add custom executable formats, which can be exploited to become root. Solid binary exploitation techniques and Linux concepts are required in order to compromise this machine. This write-up contains some custom Python exploits for the foothold part</description></item><item><title>Static</title><link>https://7rocky.github.io/en/htb/static/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/static/</guid><description>Hack The Box. Linux. Hard machine. This machine contains a website that exposes a corrupted Gzip file that must be patched to get a TOTP key and download a VPN file. Then there are some PHP vulnerable services that can be compromised and get to an internal server that contains a binary executable file having a Format String vulnerability. Deep knowledge about pivoting and port forwarding techniques, network enumeration and PHP exploitation, as well as Format String exploitation are needed to compromise this machine. This write-up uses a custom Ruby script to automate the process of downloading the VPN file, a Python script gain RCE over a PHP web server and another Python script to exploit a binary using Format String</description></item><item><title>Nunchucks</title><link>https://7rocky.github.io/en/htb/nunchucks/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/nunchucks/</guid><description>Hack The Box. Linux. Easy machine. This machine has a webpage vulnerable to Server-Side Template Injection (SSTI) and system capabilities set, but with some protections. Knowledge about Node.js templates and Perl are needed to compromise this machine</description></item><item><title>Monitors</title><link>https://7rocky.github.io/en/htb/monitors/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/monitors/</guid><description>Hack The Box. Linux. Hard machine. This machine has a WordPress web site with a plugin vulnerable to Directory Path Traversal, another website vulnerable to SQL injection, and yet another webpage vulnerable to Insecure Deserialization running inside a Docker container with system capabilities enabled. Deep knowledge about web enumeration, vulnerabilities and exploitation techniques, as well as port forwarding and Docker escaping methods are needed to compromise this machine. This write-up uses a custom Bash script to exploit Insecure Deserialization</description></item><item><title>Cap</title><link>https://7rocky.github.io/en/htb/cap/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0100</pubDate><guid>https://7rocky.github.io/en/htb/cap/</guid><description>Hack The Box. Linux. Easy machine. This machine contains Insecure Direct Object Reference (IDOR) and system capabilities. Reading capture files in Wireshark and capabilities enumeration skills are needed to compromise this machine</description></item></channel></rss>