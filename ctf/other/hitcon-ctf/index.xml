<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HITCON CTF on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/other/hitcon-ctf/</link><description>Recent content in HITCON CTF on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/other/hitcon-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Careless Padding</title><link>https://7rocky.github.io/ctf/other/hitcon-ctf/careless-padding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hitcon-ctf/careless-padding/</guid><description>Se nos proporciona el código fuente del servidor en Python:
#!/usr/local/bin/python import random import os from secret import flag from Crypto.Cipher import AES from Crypto.Random import get_random_bytes import json N = 16 # 0 -&amp;gt; 0, 1~N -&amp;gt; 1, (N+1)~(2N) -&amp;gt; 2 ... def count_blocks(length): block_count = (length-1) // N + 1 return block_count def find_repeat_tail(message): Y = message[-1] message_len = len(message) for i in range(len(message)-1, -1, -1): if message[i] !</description></item><item><title>Share</title><link>https://7rocky.github.io/ctf/other/hitcon-ctf/share/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hitcon-ctf/share/</guid><description>Se nos proporciona el código fuente en Python del servidor:
#!/usr/bin/env python3 from Crypto.Util.number import isPrime, getRandomRange, bytes_to_long from typing import List import os, signal class SecretSharing: def __init__(self, p: int, n: int, secret: int): self.p = p self.n = n self.poly = [secret] + [getRandomRange(0, self.p - 1) for _ in range(n - 1)] def evaluate(self, x: int) -&amp;gt; int: return ( sum([self.poly[i] * pow(x, i, self.p) for i in range(len(self.</description></item></channel></rss>