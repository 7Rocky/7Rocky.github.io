<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DiceCTF on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/other/dicectf/</link><description>Recent content in DiceCTF on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/other/dicectf/index.xml" rel="self" type="application/rss+xml"/><item><title>baby-talk</title><link>https://7rocky.github.io/ctf/other/dicectf/baby-talk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/dicectf/baby-talk/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>chall&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>El programa nos ofrece cuatro opciones:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./chall&lt;/span> 
1. str
2. tok
3. del
4. exit

&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingeniería-inversa">Ingeniería inversa&lt;/h2>
&lt;p>Si abrimos el binario en Ghidra, veremos el siguiente código en C descompilado. La función &lt;code>main&lt;/code> gestiona las opciones y llama a la función correspondiente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> ulong option;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setbuf&lt;/span>&lt;span class="mtk1">(stdout, &lt;/span>&lt;span class="mtk6">NULL&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">do&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_menu&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> option &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_num&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">do_tok&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> option) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">do_str&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1">LAB_00100c7b:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"??"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">goto&lt;/span>&lt;span class="mtk1"> LAB_00100c7b;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">do_del&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 id="función-de-asignación">Función de asignación&lt;/h3>
&lt;p>En &lt;code>do_str&lt;/code>, tenemos la capacidad de asignar &lt;em>strings&lt;/em> de tamaños hasta &lt;code>0x1000&lt;/code> y escribir en ellas:&lt;/p></description></item><item><title>funnylogin</title><link>https://7rocky.github.io/ctf/other/dicectf/funnylogin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/dicectf/funnylogin/</guid><description>&lt;p>Se nos proporciona un proyecto de Node.js con un solo archivo &lt;code>app.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'express'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">crypto&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'crypto'&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'better-sqlite3'&lt;/span>&lt;span class="mtk1">)(&lt;/span>&lt;span class="mtk4">'db.sqlite3'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">exec&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`DROP TABLE IF EXISTS users;`&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">exec&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`CREATE TABLE users(&lt;/span>
&lt;span class="mtk4"> id INTEGER PRIMARY KEY,&lt;/span>
&lt;span class="mtk4"> username TEXT,&lt;/span>
&lt;span class="mtk4"> password TEXT&lt;/span>
&lt;span class="mtk4">);`&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.FLAG &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"dice{test_flag}"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">PORT&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">process&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">env&lt;/span>&lt;span class="mtk1">.PORT &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3000&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">users&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk5">...&lt;/span>&lt;span class="mtk7 mtki">Array&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">100_000&lt;/span>&lt;span class="mtk1">)].&lt;/span>&lt;span class="mtk8">map&lt;/span>&lt;span class="mtk1">(() &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> ({ &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">`user-&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk8 mtku">crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randomUUID&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">`&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pass&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randomBytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">toString&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"hex"&lt;/span>&lt;span class="mtk1">) }));&lt;/span> 
&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">exec&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`INSERT INTO users (id, username, password) VALUES&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">users&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">map&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk9 mtki">u&lt;/span>&lt;span class="mtk1">,&lt;/span>&lt;span class="mtk9 mtki">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">`(&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk9 mtki">i&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">, '&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk9 mtki">u&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">', '&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk9 mtki">u&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">pass&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">')`&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">", "&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">`&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">isAdmin&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {};&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">newAdmin&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">users&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">Math&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">floor&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Math&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">random&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">users&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">length&lt;/span>&lt;span class="mtk1">)];&lt;/span>
&lt;span class="mtk1">isAdmin&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">newAdmin&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urlencoded&lt;/span>&lt;span class="mtk1">({ &lt;/span>&lt;span class="mtk1">extended&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">false&lt;/span>&lt;span class="mtk1"> }));&lt;/span>
&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">use&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">static&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"public"&lt;/span>&lt;span class="mtk1">));&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">post&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/api/login"&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">pass&lt;/span>&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">body&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">`SELECT id FROM users WHERE username = '&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">' AND password = '&lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">pass&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">';`&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">prepare&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">query&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">()?.id;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">!&lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/?message=Incorrect username or password"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">users&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">id&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">isAdmin&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">]) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/?flag="&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">encodeURIComponent&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/?message=This system is currently only available&lt;/span>&lt;span class="mtk4"> to admins..."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">catch&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">redirect&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/?message=Nice try..."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">app&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">listen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">PORT&lt;/span>&lt;span class="mtk1">, () &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">console&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">log&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">`web/funnylogin listening on port &lt;/span>&lt;span class="mtk5">${&lt;/span>&lt;span class="mtk1">PORT&lt;/span>&lt;span class="mtk5">}&lt;/span>&lt;span class="mtk4">`&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>En este reto, el servidor crea 100000 usuarios y contraseñas aleatorios y los almacena en una lista &lt;code>users&lt;/code> y en una base de datos SQLite:&lt;/p></description></item><item><title>rps-casino</title><link>https://7rocky.github.io/ctf/other/dicectf/rps-casino/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/dicectf/rps-casino/</guid><description>&lt;p>Se nos proporciona el código fuente en Python del servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/local/bin/python&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">LFSR&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">yield&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">f&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">state&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">bit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">63&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk1">rng&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">LFSR&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">56&lt;/span>

&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Let's play rock-paper-scissors! We'll give you &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> free games"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"but after that you'll have to beat me 50 times in&lt;/span>&lt;span class="mtk4"> a row to win. Good luck!"&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk4">"rock"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"paper"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"scissors"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rock"&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1">nums&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rng&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Choose rock, paper, or scissors: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid choice"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Tie!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You win!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You lose!"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">50&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">next&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rng&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Choose rock, paper, or scissors: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid choice"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rps&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">inp&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Better luck next time!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You win!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"flag.txt"&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>El servidor implementa un juego de Piedra-Papel-Tijera utilizando un &lt;em>Linear Feedback Shift Register&lt;/em> (LFSR) como un generador de números pseudo-aleatorios (PRNG). Nos dan 56 rondas gratuitas y luego necesitamos ganar 50 veces seguidas para obtener la &lt;em>flag&lt;/em>.&lt;/p></description></item><item><title>winter</title><link>https://7rocky.github.io/ctf/other/dicectf/winter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/dicectf/winter/</guid><description>&lt;p>Se nos proporciona el código fuente en Python de un servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk3">#!/usr/local/bin/python&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Wots&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sk&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">vk&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">sk&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">vk&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">classmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">cls&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">urandom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">cls&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">cls&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">vk&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8 mtku">classmethod&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">cls&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">x&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">join&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)])&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">chunks&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">:&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">sig&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">zip&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">chunks&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">)]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">vk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">vk&lt;/span>

&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'flag.txt'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">read&lt;/span>&lt;span class="mtk1">().&lt;/span>&lt;span class="mtk8">strip&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wots&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Wots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">keygen&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'give me a message (hex): '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">sign&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'here is the signature (hex):'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig1&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">())&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'give me a new message (hex): '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msg2&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'cheater!'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sig2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'give me the signature (hex): '&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">wots&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msg2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">sig2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'nope'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>El servidor implementa &lt;a target="_blank" href="https://www.geeksforgeeks.org/winternitz-one-time-signature-scheme/">Winternitz &lt;em>One-Time Signature&lt;/em> (WOTS)&lt;/a>, que es un algoritmo de firma asimétrico basado en funciones &lt;em>hash&lt;/em>. El propósito de este reto es decirle al servidor que firme un mensaje y luego falsificar una firma para un mensaje diferente:&lt;/p></description></item><item><title>yaonet</title><link>https://7rocky.github.io/ctf/other/dicectf/yaonet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/dicectf/yaonet/</guid><description>&lt;p>Se nos proporcionan dos archivos &lt;code>id_ecdsa&lt;/code>, &lt;code>id_ecdsa.pub&lt;/code> y una instancia remota para conectarnos usando SSH:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null yaonet@mc.ax -p 31000 -i id_ecdsa 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>La clave privada &lt;code>id_ecdsa&lt;/code> está corrupta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">-----BEGIN OPENSSH PRIVATE KEY-----
??????????1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAA???????????????????????? 
??????????c3RwMjU2AAAACG5pc3RwMjU2AAAAQQR72Bqp????????????????????????
??????????1hSxoXrVpRtsx1F2GIgXAqI/6MxuS7Bq86XF????????????????????????
??????????ZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAy????????????????????????
??????????lSEQfdEcgOhx7zvWFLGhetWlG2zHUXYYiBcC????????????????????????
??????????37PMrof3dNCpeuwsSUupbaUh3/+7+eDnRH+3????????????????????????
-----END OPENSSH PRIVATE KEY-----
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Y la clave pública &lt;code>id_ecdsa.pub&lt;/code> es correcta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHvYGqk903tU4dOcBPTbZ9xl5rlSEQfdEcgOhx7zvWFLGhetWlG2zHUXYYiBcCoj/ozG5LsGrzpcXE3HuEzPEQg= yaonet 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Tendremos que arreglar la clave privada para conectarnos a la instancia remota y obtener la &lt;em>flag&lt;/em>.&lt;/p></description></item></channel></rss>