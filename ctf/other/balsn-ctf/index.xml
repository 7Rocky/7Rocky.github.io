<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Balsn CTF on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/other/balsn-ctf/</link><description>Recent content in Balsn CTF on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/other/balsn-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Web3</title><link>https://7rocky.github.io/ctf/other/balsn-ctf/web3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/balsn-ctf/web3/</guid><description>Se nos proporciona una aplicaci√≥n en Node.js que usa Web3:
const express = require("express"); const ethers = require("ethers"); const path = require("path"); const app = express(); app.use(express.urlencoded()); app.use(express.json()); app.get("/", function(_req, res) { res.sendFile(path.join(__dirname + "/server.js")); }); function isValidData(data) { if (/^0x[0-9a-fA-F]+$/.test(data)) { return true; } return false; } app.post("/exploit", async function(req, res) { try { const message = req.body.message; const signature = req.body.signature; if (!isValidData(signature) || isValidData(message)) { res.send("wrong data"); return; } const signerAddr = ethers.</description></item></channel></rss>