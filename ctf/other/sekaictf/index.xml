<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SekaiCTF on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/other/sekaictf/</link><description>Recent content in SekaiCTF on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/other/sekaictf/index.xml" rel="self" type="application/rss+xml"/><item><title>cryptoGRAPHy (1, 2, 3)</title><link>https://7rocky.github.io/ctf/other/sekaictf/cryptography-1-2-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/cryptography-1-2-3/</guid><description>&lt;p>Esta serie de retos está contextualizada en la teoría de grafos combinada con la criptografía. El autor implementó una librería de Python usando &lt;a target="_blank" href="https://networkx.org/">&lt;code>networkx&lt;/code>&lt;/a> para manejar grafos y funciones criptográficas como el cifrado AES, HMAC o el &lt;em>hash&lt;/em> SHA256.&lt;/p>
&lt;p>Estos retos fueron algo polémicos debido a que los jugadores necesitaban leer, analizar y comprender la librería implementada para el esquema de cifrado de grafos (&lt;em>Graph Encryption Scheme&lt;/em>) y luego buscar una solución para el reto correspondiente. Afortunadamente, la librería no cambiaba entre niveles. Sin embargo, algunos equipos se quejaron porque la solución no implicaba mucha criptografía, sino mucha teoría de grafos y habilidades de programación.&lt;/p></description></item><item><title>Noisy CRC</title><link>https://7rocky.github.io/ctf/other/sekaictf/noisy-crc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/noisy-crc/</guid><description>&lt;p>Se nos proporciona el código fuente en Python del servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha256&lt;/span>

&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> flag &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">FLAG&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getCRC16&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">gen_poly&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">gen_poly&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">17&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># check if deg = 16&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">msglen&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.bit_length()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">msglen&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">^=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">gen_poly&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">oracle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">gen_poly&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)] &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randbelow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getCRC16&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">gen_poly&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secrets&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">randbits&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">512&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">new&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">sha256&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">long_to_bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">digest&lt;/span>&lt;span class="mtk1">()[:&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk8 mtku">AES&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">MODE_CTR&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">nonce&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"12345678"&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cipher&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Encrypted flag: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">enc_flag&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">set&lt;/span>&lt;span class="mtk1">({})&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">gen_poly&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Give me your generator polynomial: "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">gen_poly&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">17&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk3"># check if deg = 16&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">gen_poly&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"No cheating"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">used&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">gen_poly&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">oracle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">gen_poly&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>Básicamente, crea una clave aleatoria de 512 bits que se utiliza para cifrar la &lt;em>flag&lt;/em> con AES y se nos da la &lt;em>flag&lt;/em> cifrada. La clave de AES se genera a partir del &lt;em>hash&lt;/em> SHA256 de la clave, por lo que necesitamos encontrar la clave de 512 bits para descifrar la &lt;em>flag&lt;/em>:&lt;/p></description></item><item><title>Play to Earn</title><link>https://7rocky.github.io/ctf/other/sekaictf/play-to-earn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/play-to-earn/</guid><description>&lt;p>Se nos proporciona un Smart Contract llamado &lt;code>ArcadeMachine.sol&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">pragma&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">solidity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0.8.25&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> { Coin } from &lt;/span>&lt;span class="mtk4">"./Coin.sol"&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">contract&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ArcadeMachine&lt;/span>&lt;span class="mtk1"> {&lt;/span>

&lt;span class="mtk1"> Coin coin;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constructor&lt;/span>&lt;span class="mtk1">(Coin _coin) {&lt;/span>
&lt;span class="mtk1"> coin &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> _coin;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">play&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">uint256&lt;/span>&lt;span class="mtk1"> times) &lt;/span>&lt;span class="mtk7 mtki">external&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// burn the coins&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(coin.&lt;/span>&lt;span class="mtk8">transferFrom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">ether&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> times));&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk3">// Have fun XD&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Y otro Smart Contract llamado &lt;code>Coin.sol&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">pragma&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">solidity&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0.8.25&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"@openzeppelin/contracts/access/Ownable.sol"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"@openzeppelin/contracts/utils/cryptography/EIP712&lt;/span>&lt;span class="mtk4">.sol"&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">contract&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Coin&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">is&lt;/span>&lt;span class="mtk1"> Ownable, &lt;/span>&lt;span class="mtk6">EIP712&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">string&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constant&lt;/span>&lt;span class="mtk1"> name &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"COIN"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">string&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constant&lt;/span>&lt;span class="mtk1"> symbol &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"COIN"&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint8&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constant&lt;/span>&lt;span class="mtk1"> decimals &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">18&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bytes32&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constant&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">PERMIT_TYPEHASH&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">keccak256&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Permit(address owner,address spender,uint256 valu&lt;/span>&lt;span class="mtk4">e,uint256 nonce,uint256 deadline)"&lt;/span> 
&lt;span class="mtk1"> );&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">event&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Approval&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> src, &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> guy, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">event&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Transfer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> src, &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> dst, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">event&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Deposit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> dst, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">event&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Withdrawal&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> src, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">event&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">PrivilegedWithdrawal&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">indexed&lt;/span>&lt;span class="mtk1"> src, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">mapping&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> nonces;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">mapping&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> balanceOf;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">mapping&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">mapping&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> allowance;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">constructor&lt;/span>&lt;span class="mtk1">() Ownable(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk6">EIP712&lt;/span>&lt;span class="mtk1">(name, &lt;/span>&lt;span class="mtk4">"1"&lt;/span>&lt;span class="mtk1">) {}&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">fallback()&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">external&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">deposit&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">deposit&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> balanceOf[&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">msg.value&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Deposit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9">msg.value&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">withdraw&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad) &lt;/span>&lt;span class="mtk7 mtki">external&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(balanceOf[&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> balanceOf[&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> wad;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">transfer&lt;/span>&lt;span class="mtk1">(wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Withdrawal&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, wad);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">privilegedWithdraw&lt;/span>&lt;span class="mtk1">() onlyOwner &lt;/span>&lt;span class="mtk7 mtki">external&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> balanceOf[&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)];&lt;/span>
&lt;span class="mtk1"> balanceOf[&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">payable&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">transfer&lt;/span>&lt;span class="mtk1">(wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">PrivilegedWithdrawal&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, wad);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">totalSupply&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">view&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">this&lt;/span>&lt;span class="mtk1">).balance;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">approve&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> guy, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">bool&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> allowance[&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">][guy] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> wad;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Approval&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, guy, wad);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">permit&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> owner,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> spender,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint256&lt;/span>&lt;span class="mtk1"> value,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint256&lt;/span>&lt;span class="mtk1"> deadline,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">uint8&lt;/span>&lt;span class="mtk1"> v,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bytes32&lt;/span>&lt;span class="mtk1"> r,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bytes32&lt;/span>&lt;span class="mtk1"> s&lt;/span>
&lt;span class="mtk1"> ) &lt;/span>&lt;span class="mtk7 mtki">external&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">block&lt;/span>&lt;span class="mtk1">.timestamp &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> deadline, &lt;/span>&lt;span class="mtk4">"signature expired"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bytes32&lt;/span>&lt;span class="mtk1"> structHash &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">keccak256&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">abi&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">PERMIT_TYPEHASH&lt;/span>&lt;span class="mtk1">, owner, spender, value, nonces[owner]&lt;/span>&lt;span class="mtk5">++&lt;/span>&lt;span class="mtk1">, deadline)&lt;/span>
&lt;span class="mtk1"> );&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">bytes32&lt;/span>&lt;span class="mtk1"> h &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_hashTypedDataV4&lt;/span>&lt;span class="mtk1">(structHash);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> signer &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">ecrecover&lt;/span>&lt;span class="mtk1">(h, v, r, s);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(signer &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> owner, &lt;/span>&lt;span class="mtk4">"invalid signer"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> allowance[owner][spender] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> value;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Approval&lt;/span>&lt;span class="mtk1">(owner, spender, value);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transfer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> dst, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad) &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">bool&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transferFrom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">, dst, wad);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transferFrom&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> src, &lt;/span>&lt;span class="mtk7 mtki">address&lt;/span>&lt;span class="mtk1"> dst, &lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1"> wad)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">public&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">returns&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">bool&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(balanceOf[src] &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (src !&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> allowance[src][&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] !&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">type&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">uint256&lt;/span>&lt;span class="mtk1">).max) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">require&lt;/span>&lt;span class="mtk1">(allowance[src][&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">&amp;gt;=&lt;/span>&lt;span class="mtk1"> wad);&lt;/span>
&lt;span class="mtk1"> allowance[src][&lt;/span>&lt;span class="mtk9">msg.sender&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> wad;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> balanceOf[src] &lt;/span>&lt;span class="mtk5">-=&lt;/span>&lt;span class="mtk1"> wad;&lt;/span>
&lt;span class="mtk1"> balanceOf[dst] &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> wad;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">emit&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">Transfer&lt;/span>&lt;span class="mtk1">(src, dst, wad);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Y este es &lt;code>Setup.sol&lt;/code>:&lt;/p></description></item><item><title>speedpwn</title><link>https://7rocky.github.io/ctf/other/sekaictf/speedpwn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/speedpwn/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>chall&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
SHSTK: &lt;span class="code-dark-green">Enabled&lt;/span>
IBT: &lt;span class="code-dark-green">Enabled&lt;/span>
Stripped: &lt;span class="code-dark-red">No&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>Esta vez, tenemos el código fuente completo en C:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">#include&lt;/span> &lt;span class="mtk4">&amp;lt;stdio.h&amp;gt;&lt;/span>
&lt;span class="mtk5">#include&lt;/span> &lt;span class="mtk4">&amp;lt;stdlib.h&amp;gt;&lt;/span>

&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">game_history&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk8 mtku">FILE&lt;/span>&lt;span class="mtk1">&lt;/span>&lt;span class="mtk5">*&lt;/span> &lt;span class="mtk1">seed_generator&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">cmp&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">__builtin_popcountll&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__builtin_popcountll&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__builtin_popcountll&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__builtin_popcountll&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">?&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">:&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">size_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">; &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">; &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">++&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">a&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_menu&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"f) Fight bot"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"s) Simulate game"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"p) Print game history"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"r) Reseed bot"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_random_ull&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">) ((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk8">rand&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk8">rand&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fight_bot&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_random_ull&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bot plays &lt;/span>&lt;span class="mtk6">%llu&lt;/span>&lt;span class="mtk4">!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Player plays: "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%llu%*c&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">cmp&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You win!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">game_history&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">|=&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> }&lt;/span> &lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bot wins!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">game_history&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">~&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)));&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk5">++&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">simulate&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bot number: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%llu%*c&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Player number: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%llu%*c&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Simulation result: "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">cmp&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">bot_num&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">player_num&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">?&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bot win!"&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">:&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You win!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_game_history&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">size_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">; &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1">; &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk5">++&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Game &lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4">: &lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk1">i&lt;/span> &lt;span class="mtk5">+&lt;/span> &lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">game_history&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">number_of_games&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">))) &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">?&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Won"&lt;/span> &lt;span class="mtk5">:&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"Lost"&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">reseed&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Bot reseeded!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fread&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">)&lt;/span> &lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">seed_generator&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">srand&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">seed&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">init&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setvbuf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">stdout&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">NULL&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">_IONBF&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">seed_generator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fopen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/dev/urandom"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"r"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">argc&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk5">*&lt;/span> &lt;span class="mtk9 mtki">argv&lt;/span>&lt;span class="mtk5">[]&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">init&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">reseed&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_menu&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span> &lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getc&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">stdin&lt;/span>&lt;span class="mtk1">)), &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span> &lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'f'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fight_bot&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'s'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">simulate&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'p'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print_game_history&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'r'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">reseed&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">default&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Invalid choice"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Este programa nos permite pelear con un &lt;em>bot&lt;/em>. El juego consiste en dos jugadores que envían un entero de 64 bits. El ganador es el que tiene más bits puestos a &lt;code>1&lt;/code>. En caso de que ambos números tengan el mismo recuento de bits, gana el que tiene más bits en &lt;code>1&lt;/code> como bits menos significativos.&lt;/p></description></item><item><title>はやぶさ</title><link>https://7rocky.github.io/ctf/other/sekaictf/%E3%81%AF%E3%82%84%E3%81%B6%E3%81%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/%E3%81%AF%E3%82%84%E3%81%B6%E3%81%95/</guid><description>&lt;p>Se nos proporciona un &lt;em>script&lt;/em> en Python llamado &lt;code>chall.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">falcon&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">falcon&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">flag&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">flag&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">timeout_decorator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">timeout&lt;/span>

&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8">timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">falcon&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">SecretKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">falcon&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">PublicKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">sk&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">your_sig&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"what is your sig? &amp;gt;"&lt;/span>&lt;span class="mtk1">))&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pk&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">verify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"Can you break me"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">your_sig&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"well done!!"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">flag&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Broken your wing T_T"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Y también tenemos un &lt;em>script&lt;/em> de &lt;em>shell&lt;/em> llamado &lt;code>up.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk8">git&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">clone&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4 detected-link">https://github.com/tprest/falcon.py.git&lt;/span> 

&lt;span class="mtk8">mv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">falcon.py&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">falcon&lt;/span>

&lt;span class="mtk7">echo&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"import os&lt;/span>
&lt;span class="mtk4">import sys&lt;/span>

&lt;span class="mtk4">sys.path.append(os.path.dirname(__file__))&lt;/span>
&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">./falcon/__init__.py&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="análisis-del-código-fuente">Análisis del código fuente&lt;/h2>
&lt;p>El &lt;em>script&lt;/em> de Python parece muy corto, pero la cosa es que &lt;code>up.sh&lt;/code> está clonando un repositorio de GitHub que será utilizado por el &lt;em>script&lt;/em> de Python.&lt;/p></description></item><item><title>マスタースパーク</title><link>https://7rocky.github.io/ctf/other/sekaictf/%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC%E3%82%B9%E3%83%91%E3%83%BC%E3%82%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/sekaictf/%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC%E3%82%B9%E3%83%91%E3%83%BC%E3%82%AF/</guid><description>&lt;p>Se nos proporciona un &lt;em>script&lt;/em> en SageMath llamado &lt;code>challenge.sage&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">timeout_decorator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">timeout&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">TimeoutError&lt;/span>

&lt;span class="mtk1">load(&lt;/span>&lt;span class="mtk4">"GA.sage"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">os&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">getenv&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"FLAG"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">set&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk8">timeout&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">60&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">T_T&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Fp&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> GF(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> Fp2.&lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1">j&lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> GF(p &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">modulus&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">x &lt;/span>&lt;span class="mtk5">^&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ls&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(factor(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> ceil((sqrt(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ls&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">/&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">alice_priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [randrange(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">))]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bob_priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [randrange(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">))]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">EC&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> montgomery(Fp2, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">EC&lt;/span>&lt;span class="mtk1">.gens()[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">alice_pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> group_action(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Fp&lt;/span>&lt;span class="mtk1">, Fp2, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">alice_priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">k&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">share_bob&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> group_action(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Fp&lt;/span>&lt;span class="mtk1">, Fp2, &lt;/span>&lt;span class="mtk1">alice_pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bob_priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">bob_pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> group_action(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Fp&lt;/span>&lt;span class="mtk1">, Fp2, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">bob_priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">share_alice&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> group_action(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">primes&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Fp&lt;/span>&lt;span class="mtk1">, Fp2, &lt;/span>&lt;span class="mtk1">bob_pub&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">alice_priv&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">check&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">96&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> []&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cnt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> factor((&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cnt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">32&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">append&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">all&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">assert&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cnt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">input&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"input your prime number or secret &amp;gt; "&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">bit_length&lt;/span>&lt;span class="mtk1">() &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">256&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"not flag T_T"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">check&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">T_T&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">prime_list&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">secret&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">P&lt;/span>&lt;span class="mtk1">.xy())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">Q&lt;/span>&lt;span class="mtk1">.xy())&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">print&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"T_T"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Además, tenemos &lt;code>GA.sage&lt;/code> con algunas funciones utilizadas por el &lt;em>script&lt;/em> principal:&lt;/p></description></item></channel></rss>