<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HackTheBoo CTF on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/</link><description>Recent content in HackTheBoo CTF on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/other/hackthebooctf/index.xml" rel="self" type="application/rss+xml"/><item><title>AHS512</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/ahs512/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/ahs512/</guid><description>&lt;p>Se nos proporciona el cÃ³digo fuente en Python del servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">hashlib&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha512&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"""&lt;/span>
&lt;span class="mtk4">**************** Welcome to the Hash Game. *******&lt;/span>&lt;span class="mtk4">*********&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* Hash functions are really spooky. &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">* In this game you will have to face your fears&lt;/span>&lt;span class="mtk4">. *&lt;/span>
&lt;span class="mtk4">* Can you find a colision in the updated sha512&lt;/span>&lt;span class="mtk4">? *&lt;/span>
&lt;span class="mtk4">* &lt;/span>&lt;span class="mtk4"> *&lt;/span>
&lt;span class="mtk4">**************************************************&lt;/span>&lt;span class="mtk4">*********&lt;/span>
&lt;span class="mtk4">"""&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">():&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__init__&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">generateKey&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generateKey&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">len&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">col&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">columns&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">col&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">key&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">char&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [((&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;gt;&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">|&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">0x&lt;/span>&lt;span class="mtk6">ff&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">message&lt;/span>&lt;span class="mtk1">]&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">transpose&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rotated&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">rotate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">transposed&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sha512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">rotated&lt;/span>&lt;span class="mtk1">)).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">WELCOME&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">"pumpkin_spice_latte!"&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Find a message that generate the same hash as this&lt;/span>&lt;span class="mtk4"> one: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span> 
&lt;span class="mtk1"> )&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Enter your message: "&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">bytes&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">fromhex&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ahs512&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hexdigest&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk1">original_digest&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">digest&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">original_message&lt;/span>&lt;span class="mtk1">)):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n{&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Conditions not satisfied!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">KeyboardInterrupt&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">Exiting"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">An error occurred while processing data: &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>BÃ¡sicamente, el servidor utiliza una funciÃ³n de &lt;em>hash&lt;/em> personalizada (&lt;code>ahs512&lt;/code>) y nos piden encontrar una colisiÃ³n con el &lt;em>hash&lt;/em> que nos dan:&lt;/p></description></item><item><title>Cult Meeting</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/cult-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/cult-meeting/</guid><description>&lt;p>Se nos proporciona un archivo binario llamado &lt;code>meeting&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">meeting&lt;/span>
meeting: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=72d8b06e4ca750d5c24395d3349c3121b9b95283, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Usando Ghidra, podemos leer el cÃ³digo descompilado en C. Esta es la funciÃ³n &lt;code>main&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> ret;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">pointer;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> input_data[&lt;/span>&lt;span class="mtk6">64&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setvbuf&lt;/span>&lt;span class="mtk1">(stdout, &lt;/span>&lt;span class="mtk6">NULL&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\x1b&lt;/span>&lt;span class="mtk4">[3mYou knock on the door and a panel slides back&lt;/span>&lt;span class="mtk6">\x1b&lt;/span>&lt;span class="mtk4">[0m"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00102040);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fwrite&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\"&lt;/span>&lt;span class="mtk4">What is the password for this week&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s meeting?&lt;/span>&lt;span class="mtk6">\"&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">, stdout);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(input_data, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">40&lt;/span>&lt;span class="mtk1">, stdin);&lt;/span>
&lt;span class="mtk1"> pointer &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strchr&lt;/span>&lt;span class="mtk1">(input_data, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">a&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">pointer &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\0&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> ret &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strcmp&lt;/span>&lt;span class="mtk1">(input_data, &lt;/span>&lt;span class="mtk4">"sup3r_s3cr3t_p455w0rd_f0r_u!"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (ret &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\x1b&lt;/span>&lt;span class="mtk4">[3mThe panel slides closed and the lock clicks&lt;/span>&lt;span class="mtk6">\x1b&lt;/span>&lt;span class="mtk4">[0m"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"| | &lt;/span>&lt;span class="mtk6">\"&lt;/span>&lt;span class="mtk4">Welcome inside...&lt;/span>&lt;span class="mtk6">\"&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">system&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"/bin/sh"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" &lt;/span>&lt;span class="mtk6">\\&lt;/span>&lt;span class="mtk4">/"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00102130);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>BÃ¡sicamente, el programa solicita una contraseÃ±a, y la contraseÃ±a esperada estÃ¡ &lt;em>hard-coded&lt;/em>: &lt;code>sup3r_s3cr3t_p455w0rd_f0r_u!&lt;/code>.&lt;/p></description></item><item><title>Cursed Secret Party</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/cursed-secret-party/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/cursed-secret-party/</guid><description>&lt;p>Se nos proporciona esta pÃ¡gina web:&lt;/p>
&lt;p>&lt;img alt="Cursed Secret Party 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Cursed-Secret-Party-1.webp">&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>TambiÃ©n tenemos el cÃ³digo fuente en JavaScript de la aplicaciÃ³n web, hecha en Node.js con Express JS. Este archivo es &lt;code>routes/index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'express'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">express&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">Router&lt;/span>&lt;span class="mtk1">({ &lt;/span>&lt;span class="mtk1">caseSensitive&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> AuthMiddleware &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'../middleware/AuthMiddleware'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> bot &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">require&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'../bot'&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk7 mtki">let&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> ({ &lt;/span>&lt;span class="mtk1">message&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> });&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'index.html'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">post&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/api/submit'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">const&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk1">halloween_name&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">email&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">costume_type&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">trick_or_treat&lt;/span>&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">body&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">halloween_name&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">email&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">costume_type&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">trick_or_treat&lt;/span>&lt;span class="mtk1">) {&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">party_request_add&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">halloween_name&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">email&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">costume_type&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">trick_or_treat&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">then&lt;/span>&lt;span class="mtk1">(() &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Your request will be reviewed by our team!'&lt;/span>&lt;span class="mtk1">));&lt;/span>

&lt;span class="mtk1"> bot.&lt;/span>&lt;span class="mtk8">visit&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">catch&lt;/span>&lt;span class="mtk1">(() &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Something Went Wrong!'&lt;/span>&lt;span class="mtk1">)));&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">401&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Please fill out all the required fields!'&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/admin'&lt;/span>&lt;span class="mtk1">, AuthMiddleware, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.user.user_role &lt;/span>&lt;span class="mtk5">!==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'admin'&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">401&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Unautorized!'&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_party_requests&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">then&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">render&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'admin.html'&lt;/span>&lt;span class="mtk1">, { &lt;/span>&lt;span class="mtk1">requests&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk9 mtki">data&lt;/span>&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1"> });&lt;/span>
&lt;span class="mtk1">});&lt;/span>

&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/admin/delete_all'&lt;/span>&lt;span class="mtk1">, AuthMiddleware, (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">req&lt;/span>&lt;span class="mtk1">.user.user_role &lt;/span>&lt;span class="mtk5">!==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'admin'&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">status&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">401&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Unautorized!'&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">remove_requests&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> .&lt;/span>&lt;span class="mtk8">then&lt;/span>&lt;span class="mtk1">(() &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">send&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'All records are deleted!'&lt;/span>&lt;span class="mtk1">)));&lt;/span>
&lt;span class="mtk1">})&lt;/span>

&lt;span class="mtk7 mtki">module&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk7 mtki">exports&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">database&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">=&amp;gt;&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">db&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">database&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">router&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Vemos que al enviar el formulario anterior, habrÃ¡ un &lt;em>bot&lt;/em> que analizarÃ¡ la informaciÃ³n. Este archivo es &lt;code>bot.js&lt;/code>:&lt;/p></description></item><item><title>Downgrade</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/downgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/downgrade/</guid><description>&lt;p>Se nos proporcionan un montÃ³n de &lt;em>logs&lt;/em> de Eventos de Windows (archivos &lt;code>.evtx&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">tree&lt;/span> &lt;span class="mtku">Logs&lt;/span>
Logs
âââ Application.evtx
âââ HardwareEvents.evtx
âââ Internet Explorer.evtx
âââ Key Management Service.evtx
âââ Microsoft-Windows-AppModel-Runtime%4Admin.evtx
âââ Microsoft-Windows-AppReadiness%4Admin.evtx
âââ Microsoft-Windows-AppReadiness%4Operational.evtx
âââ Microsoft-Windows-AppXDeployment%4Operational.evtx
âââ Microsoft-Windows-AppXDeploymentServer%4Operational.evtx
âââ Microsoft-Windows-AppXDeploymentServer%4Restricted.evtx
âââ Microsoft-Windows-ApplicationResourceManagementSystem%4Operational.evtx
âââ Microsoft-Windows-Bits-Client%4Operational.evtx
âââ Microsoft-Windows-CodeIntegrity%4Operational.evtx
âââ Microsoft-Windows-Compat-Appraiser%4Operational.evtx
âââ Microsoft-Windows-CoreApplication%4Operational.evtx
âââ Microsoft-Windows-Crypto-DPAPI%4BackUpKeySvc.evtx
âââ Microsoft-Windows-Crypto-DPAPI%4Operational.evtx
âââ Microsoft-Windows-DSC%4Admin.evtx
âââ Microsoft-Windows-DSC%4Operational.evtx
âââ Microsoft-Windows-DataIntegrityScan%4Admin.evtx
âââ Microsoft-Windows-DataIntegrityScan%4CrashRecovery.evtx
âââ Microsoft-Windows-DeviceSetupManager%4Admin.evtx
âââ Microsoft-Windows-DeviceSetupManager%4Operational.evtx
âââ Microsoft-Windows-Dhcp-Client%4Admin.evtx
âââ Microsoft-Windows-Dhcpv6-Client%4Admin.evtx
âââ Microsoft-Windows-Diagnosis-DPS%4Operational.evtx
âââ Microsoft-Windows-Forwarding%4Operational.evtx
âââ Microsoft-Windows-GroupPolicy%4Operational.evtx
âââ Microsoft-Windows-HomeGroup Control Panel%4Operational.evtx
âââ Microsoft-Windows-International%4Operational.evtx
âââ Microsoft-Windows-Iphlpsvc%4Operational.evtx
âââ Microsoft-Windows-Kernel-ApphelpCache%4Operational.evtx
âââ Microsoft-Windows-Kernel-Boot%4Operational.evtx
âââ Microsoft-Windows-Kernel-EventTracing%4Admin.evtx
âââ Microsoft-Windows-Kernel-PnP%4Configuration.evtx
âââ Microsoft-Windows-Kernel-PnPConfig%4Configuration.evtx
âââ Microsoft-Windows-Kernel-Power%4Thermal-Operational.evtx
âââ Microsoft-Windows-Kernel-ShimEngine%4Operational.evtx
âââ Microsoft-Windows-Kernel-StoreMgr%4Operational.evtx
âââ Microsoft-Windows-Kernel-WDI%4Operational.evtx
âââ Microsoft-Windows-Kernel-WHEA%4Errors.evtx
âââ Microsoft-Windows-Kernel-WHEA%4Operational.evtx
âââ Microsoft-Windows-Known Folders API Service.evtx
âââ Microsoft-Windows-LanguagePackSetup%4Operational.evtx
âââ Microsoft-Windows-MUI%4Admin.evtx
âââ Microsoft-Windows-MUI%4Operational.evtx
âââ Microsoft-Windows-MiStreamProvider%4Operational.evtx
âââ Microsoft-Windows-NCSI%4Operational.evtx
âââ Microsoft-Windows-NetworkAccessProtection%4WHC.evtx
âââ Microsoft-Windows-NetworkProfile%4Operational.evtx
âââ Microsoft-Windows-NetworkProvider%4Operational.evtx
âââ Microsoft-Windows-Ntfs%4Operational.evtx
âââ Microsoft-Windows-Ntfs%4WHC.evtx
âââ Microsoft-Windows-PowerShell%4Admin.evtx
âââ Microsoft-Windows-PowerShell%4Operational.evtx
âââ Microsoft-Windows-PowerShell-DesiredStateConfiguration-FileDownloadManager%4Operational.evtx 
âââ Microsoft-Windows-Powershell-DesiredStateConfiguration-PullServer%4Operational.evtx
âââ Microsoft-Windows-PrintService%4Admin.evtx
âââ Microsoft-Windows-RemoteDesktopServices-RdpCoreTS%4Admin.evtx
âââ Microsoft-Windows-RemoteDesktopServices-RdpCoreTS%4Operational.evtx
âââ Microsoft-Windows-Resource-Exhaustion-Detector%4Operational.evtx
âââ Microsoft-Windows-RestartManager%4Operational.evtx
âââ Microsoft-Windows-SMBClient%4Operational.evtx
âââ Microsoft-Windows-SMBServer%4Audit.evtx
âââ Microsoft-Windows-SMBServer%4Connectivity.evtx
âââ Microsoft-Windows-SMBServer%4Operational.evtx
âââ Microsoft-Windows-SMBServer%4Security.evtx
âââ Microsoft-Windows-Security-SPP-UX-Notifications%4ActionCenter.evtx
âââ Microsoft-Windows-ServerManager-DeploymentProvider%4Operational.evtx
âââ Microsoft-Windows-ServerManager-MgmtProvider%4Operational.evtx
âââ Microsoft-Windows-ServerManager-MultiMachine%4Admin.evtx
âââ Microsoft-Windows-ServerManager-MultiMachine%4Operational.evtx
âââ Microsoft-Windows-Shell-ConnectedAccountState%4ActionCenter.evtx
âââ Microsoft-Windows-Shell-Core%4ActionCenter.evtx
âââ Microsoft-Windows-Shell-Core%4Operational.evtx
âââ Microsoft-Windows-SmartCard-DeviceEnum%4Operational.evtx
âââ Microsoft-Windows-SmbClient%4Connectivity.evtx
âââ Microsoft-Windows-SmbClient%4Security.evtx
âââ Microsoft-Windows-Storage-Tiering%4Admin.evtx
âââ Microsoft-Windows-StorageSpaces-Driver%4Diagnostic.evtx
âââ Microsoft-Windows-StorageSpaces-Driver%4Operational.evtx
âââ Microsoft-Windows-StorageSpaces-ManagementAgent%4WHC.evtx
âââ Microsoft-Windows-TWinUI%4Operational.evtx
âââ Microsoft-Windows-TZSync%4Operational.evtx
âââ Microsoft-Windows-TaskScheduler%4Maintenance.evtx
âââ Microsoft-Windows-TaskScheduler%4Operational.evtx
âââ Microsoft-Windows-TerminalServices-LocalSessionManager%4Admin.evtx
âââ Microsoft-Windows-TerminalServices-LocalSessionManager%4Operational.evtx
âââ Microsoft-Windows-TerminalServices-Printers%4Admin.evtx
âââ Microsoft-Windows-TerminalServices-Printers%4Operational.evtx
âââ Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Admin.evtx
âââ Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational.evtx
âââ Microsoft-Windows-UAC%4Operational.evtx
âââ Microsoft-Windows-User Profile Service%4Operational.evtx
âââ Microsoft-Windows-User-Loader%4Operational.evtx
âââ Microsoft-Windows-UserPnp%4ActionCenter.evtx
âââ Microsoft-Windows-UserPnp%4DeviceInstall.evtx
âââ Microsoft-Windows-WER-Diag%4Operational.evtx
âââ Microsoft-Windows-WMI-Activity%4Operational.evtx
âââ Microsoft-Windows-Wcmsvc%4Operational.evtx
âââ Microsoft-Windows-WinINet-Config%4ProxyConfigChanged.evtx
âââ Microsoft-Windows-WinRM%4Operational.evtx
âââ Microsoft-Windows-Windows Firewall With Advanced Security%4ConnectionSecurity.evtx
âââ Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx
âââ Microsoft-Windows-WindowsUpdateClient%4Operational.evtx
âââ Microsoft-Windows-Winlogon%4Operational.evtx
âââ OpenSSH%4Admin.evtx
âââ OpenSSH%4Operational.evtx
âââ Security.evtx
âââ Setup.evtx
âââ System.evtx
âââ Windows PowerShell.evtx
âââ WitnessClientAdmin.evtx

0 directories, 113 files
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>TambiÃ©n tenemos una instancia remota a la que conectarnos para contestar algunas preguntas.&lt;/p></description></item><item><title>EncodedPayload</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/encodedpayload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/encodedpayload/</guid><description>&lt;p>Se nos proporciona un archivo binario llamado &lt;code>encodedpayload&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">encodedpayload&lt;/span>
encodedpayload: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, no section header 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Si lo ejecutamos, no aparece nada. Por otro lado, el binario es muy corto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./encodedpayload&lt;/span>

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">xxd&lt;/span> &lt;span class="mtku">encodedpayload&lt;/span>
00000000: 7f45 4c46 0101 0100 0000 0000 0000 0000 .ELF............
00000010: 0200 0300 0100 0000 5480 0408 3400 0000 ........T...4...
00000020: 0000 0000 0000 0000 3400 2000 0100 0000 ........4. .....
00000030: 0000 0000 0100 0000 0000 0000 0080 0408 ................
00000040: 0080 0408 9301 0000 d202 0000 0700 0000 ................
00000050: 0010 0000 d9e8 d974 24f4 5b53 5949 4949 .......t$.[SYIII
00000060: 4949 4949 4949 4343 4343 4343 4337 515a IIIIIICCCCCCC7QZ
00000070: 6a41 5850 3041 3041 6b41 4151 3241 4232 jAXP0A0AkAAQ2AB2
00000080: 4242 3042 4241 4258 5038 4142 754a 4930 BB0BBABXP8ABuJI0
00000090: 3169 4b7a 5748 6353 6357 3346 3350 6a36 1iKzWHcScW3F3Pj6
000000a0: 624f 7948 6178 3063 565a 6d4b 304d 4370 bOyHax0cVZmK0MCp
000000b0: 5968 3057 4f38 4d6b 3050 4962 5959 6962 Yh0WO8Mk0PIbYYib
000000c0: 4873 4f53 3077 7037 7171 7855 5265 5035 HsOS0wp7qqxUReP5
000000d0: 5566 596d 5968 614c 7043 5656 3050 5146 UfYmYhaLpCVV0PQF
000000e0: 334c 7366 634f 7949 715a 6d4d 5046 3261 3LsfcOyIqZmMPF2a
000000f0: 7830 6e64 6f31 6345 3865 3866 4f76 4f52 x0ndo1cE8e8fOvOR
00000100: 4243 594d 5948 6346 3250 534f 7948 614e BCYMYHcF2PSOyHaN
00000110: 5046 6b4a 6d6f 7052 4a34 4b43 686d 4933 PFkJmopRJ4KChmI3
00000120: 6255 3665 3854 6d65 336e 6938 6743 5846 bU6e8Tme3ni8gCXF
00000130: 4f32 5331 7843 3055 3856 4f73 5235 3952 O2S1xC0U8VOsR59R
00000140: 4e4b 394b 5361 4279 7834 5a53 3045 5055 NK9KSaByx4ZS0EPU
00000150: 5061 7550 6370 6872 4f71 3062 6830 5467 PauPcphrOq0bh0Tg
00000160: 3263 4b32 7030 4c53 4a73 6f31 6374 3433 2cK2p0LSJso1ct43
00000170: 4235 3165 3331 7553 6f72 6d46 5347 4354 B51e31uSormFSGCT
00000180: 7353 4d67 7056 3772 734c 4939 714a 6d6d sSMgpV7rsLI9qJmm
00000190: 5041 41 PAA

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">strings&lt;/span> &lt;span class="mtku">encodedpayload&lt;/span>
[SYIIIIIIIIICCCCCCC7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJI01iKzWHcScW3F3Pj6bOyHax0cVZmK0MCpYh0WO8Mk0PIbYYibHsOS0wp7qqxUReP5UfYmYhaLpCVV0PQF3LsfcOyIqZmMPF2ax0ndo1cE8e8fOvORBCYMYHcF2PSOyHaNPFkJmopRJ4KChmI3bU6e8Tme3ni8gCXFO2S1xC0U8VOsR59RNK9KSaByx4ZS0EPUPauPcphrOq0bh0Tg2cK2p0LSJso1ct43B51e31uSormFSGCTsSMgpV7rsLI9qJmmPAA 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Antes de usar un depurador, podemos usar &lt;code>ltrace&lt;/code> y &lt;code>strace&lt;/code> para analizar las llamadas a funciones de librerÃ­as externas e instrucciones &lt;code>syscall&lt;/code> ejecutadas por el binario.&lt;/p></description></item><item><title>Entity</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/entity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/entity/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>chall&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-yellow">Partial RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Si nos conectamos a la instancia remota, vemos lo siguiente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 134.122.106.203 30576

Something strange is coming out of the TV.. 

(T)ry to turn it off
(R)un
(C)ry

&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Nada explicativo&amp;hellip;&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>Esta vez, se nos proporciona tambiÃ©n el cÃ³digo fuente original (&lt;code>chall.c&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;stdio.h&amp;gt;&lt;/span>
&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;stdlib.h&amp;gt;&lt;/span>
&lt;span class="mtk5">#include&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">&amp;lt;string.h&amp;gt;&lt;/span>

&lt;span class="mtk5">static&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">union&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">unsigned&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">integer&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">string&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">8&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1">} &lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">typedef&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">enum&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_GET&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_SET&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk1">} &lt;/span>&lt;span class="mtk8 mtku">action_t&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">typedef&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">enum&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">INTEGER&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STRING&lt;/span>
&lt;span class="mtk1">} &lt;/span>&lt;span class="mtk8 mtku">field_t&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk5">typedef&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">struct&lt;/span>&lt;span class="mtk1"> { &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">action_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">act&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">field_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">field&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">} &lt;/span>&lt;span class="mtk8 mtku">menu_t&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk8 mtku">menu_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">menu_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> };&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> { &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> };&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">(T)ry to turn it off&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">(R)un&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">(C)ry&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">stdin&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8">strcspn&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'T'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">act&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_SET&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'R'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">act&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_GET&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'C'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">act&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">default&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">What's this nonsense?!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">This does not seem to work.. (L)ie down or (S)crea&lt;/span>&lt;span class="mtk4">m&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">stdin&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk8">strcspn&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'L'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">field&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">INTEGER&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'S'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">field&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STRING&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">default&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">You are doomed!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">res&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">set_field&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">field_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">};&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Maybe try a ritual?&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">stdin&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">INTEGER&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sscanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%llu&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">integer&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">integer&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">13371337&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">What's this nonsense?!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STRING&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">memcpy&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">string&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">buf&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">string&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_field&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">field_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Anything else to try?&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">INTEGER&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%llu\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">integer&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STRING&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%.8s\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">string&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_flag&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">integer&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">13371337&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">system&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"cat flag.txt"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Sorry, this will not work!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>

&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setvbuf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8">stdout&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">NULL&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">_IONBF&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bzero&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">sizeof&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">DataStore&lt;/span>&lt;span class="mtk1">));&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Something strange is coming out of the TV..&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">menu_t&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">act&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_SET&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">set_field&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">field&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">STORE_GET&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_field&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">field&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_flag&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>BÃ¡sicamente, existe un menÃº en el que podemos elegir si poner un valor, obtener un valor o solicitar la &lt;em>flag&lt;/em>.&lt;/p></description></item><item><title>Evaluation Deck</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/evaluation-deck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/evaluation-deck/</guid><description>&lt;p>Se nos proporciona la siguiente pÃ¡gina web:&lt;/p>
&lt;p>&lt;img alt="Evaluation Deck" src="https://7rocky.github.io/images/other/HackTheBooCTF/Evaluation-Deck-1.webp">&lt;/p>
&lt;p>No obstante, la interfaz no es interesante&amp;hellip;&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>TambiÃ©n disponemos del cÃ³digo fuente. La aplicaciÃ³n web estÃ¡ construida en Flask (Python). El siguiente archivo es &lt;code>application/blueprints/routes.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">flask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Blueprint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">render_template&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">request&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>

&lt;span class="mtk1">web&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Blueprint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'web'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1">api&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Blueprint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'api'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk1">web&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">render_template&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'index.html'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk1">api&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/get_health'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">methods&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'POST'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">count&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">is_json&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Invalid JSON!'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">400&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get_json&lt;/span>&lt;span class="mtk1">()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">current_health&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.get(&lt;/span>&lt;span class="mtk4">'current_health'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">attack_power&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.get(&lt;/span>&lt;span class="mtk4">'attack_power'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">operator&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">data&lt;/span>&lt;span class="mtk1">.get(&lt;/span>&lt;span class="mtk4">'operator'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">current_health&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">attack_power&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">operator&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'All fields are required!'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">400&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> {}&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">code&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">compile&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'result = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">current_health&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">operator&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4"> &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">attack_power&lt;/span>&lt;span class="mtk1">)&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'&amp;lt;string&amp;gt;'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'exec'&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exec&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">code&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">result&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'result'&lt;/span>&lt;span class="mtk1">))&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">response&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'Something Went Wrong!'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">500&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>La vulnerabilidad estÃ¡ en que, como atacantes, podemos ejecutar cÃ³digo Python arbitrario usando la funciÃ³n &lt;code>exec&lt;/code> en la ruta &lt;code>/api/get_health&lt;/code>. Solamente necesitamos encontrar un &lt;em>payload&lt;/em> que haga que la &lt;em>string&lt;/em> con el cÃ³digo sea sintaxis de Python vÃ¡lida. Por ejemplo:&lt;/p></description></item><item><title>Fast Carmichael</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/fast-carmichael/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/fast-carmichael/</guid><description>&lt;p>Se nos proporciona el cÃ³digo fuente en Python del servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_basis&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk5">**&lt;/span>&lt;span class="mtk6">0.5&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">::&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">//&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk1">i&lt;/span>&lt;span class="mtk1">]]&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">millerRabin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_basis&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">3&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">//=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">basis&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">b&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">or&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">continue&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">_&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">range&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">r&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">n&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">break&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">&amp;lt;=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">600&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">.bit_length() &lt;/span>&lt;span class="mtk5">&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1500&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">millerRabin&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Give p: "&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">int&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Error!"&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">_isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">and&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">not&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">isPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Conditions not satisfied!"&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'__main__'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="interactuando-con-el-servidor">Interactuando con el servidor&lt;/h2>
&lt;p>El servidor nos pide un nÃºmero:&lt;/p></description></item><item><title>Finale</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/finale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/finale/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>finale&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="configuraciÃ³n-del-entorno">ConfiguraciÃ³n del entorno&lt;/h2>
&lt;p>Puede ocurrir que no tengamos la versiÃ³n de Glibc que acepta el programa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./finale&lt;/span>
./finale: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by ./finale) 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Por suerte, en &lt;a target="_blank" href="../spooky-time">Spooky Time&lt;/a> nos dan una librerÃ­a y un &lt;em>loader&lt;/em>, versiÃ³n 2.35:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">../pwn_spooky_time/glibc/ld-linux-x86-64.so.2&lt;/span> &lt;span class="mtku">../pwn_spooky_time/glibc/libc.so.6&lt;/span> 
GNU C Library (Ubuntu GLIBC 2.35-0ubuntu3.1) stable release version 2.35.
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 11.2.0.
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
&amp;lt;https://bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Entonces, podemos copiar ese directorio en nuestro entorno y usar &lt;a target="_blank" href="https://github.com/io12/pwninit">&lt;code>pwninit&lt;/code>&lt;/a> para parchear el binario y que use esta nueva versiÃ³n de Glibc:&lt;/p></description></item><item><title>Ghost Wrangler</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/ghost-wrangler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/ghost-wrangler/</guid><description>&lt;p>Se nos proporciona un binario llamado &lt;code>ghost&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">ghost&lt;/span>
ghost: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=810d0f9271ec04d80a2eee6ff2afd9367da3c3dd, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Si lo abrimos en Ghidra, veremos el cÃ³digo en C descompilado de la funciÃ³n &lt;code>main&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> undefined8 flag;&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">get_flag&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\r&lt;/span>&lt;span class="mtk4">|&lt;/span>&lt;span class="mtk6">\x1b&lt;/span>&lt;span class="mtk4">[4m&lt;/span>&lt;span class="mtk6">%*.c\x1b&lt;/span>&lt;span class="mtk4">[24m| I&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">ve managed to trap the flag ghost in this box, but&lt;/span>&lt;span class="mtk4"> it&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s turn ed invisible!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Can you figure out how to reveal them?&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, flag, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">28&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">5f&lt;/span>&lt;span class="mtk1">);&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Esta llama a una funciÃ³n llamada &lt;code>get_flag&lt;/code> y muestra una cadena de texto que contiene la variable &lt;code>flag&lt;/code>. Ests es la funciÃ³n &lt;code>get_flag&lt;/code>:&lt;/p></description></item><item><title>Gonna-Lift-Them-All</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/gonna-lift-them-all/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/gonna-lift-them-all/</guid><description>&lt;p>Se nos proporciona el siguiente cÃ³digo en Python para cifrar la &lt;em>flag&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{?????????????????????????????????????????????&lt;/span>&lt;span class="mtk4">?????????????????????????}'&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_params&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">x&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">x&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">pubkey&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">pubkey&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">h&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">g&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">y&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">s&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">privkey&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">gen_params&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'data.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'p = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">g = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">h = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">pubkey&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">]&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">(c1, c2) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>TambiÃ©n tenemos la salida del &lt;em>script&lt;/em>:&lt;/p></description></item><item><title>Halloween Invitation</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/halloween-invitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/halloween-invitation/</guid><description>&lt;p>Se nos proporciona un archivo ZIP que contiene un fichero llamado &lt;code>invitation.docm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">unzip&lt;/span> -l &lt;span class="mtku">forensics_halloween_invitation.zip&lt;/span> 
Archive: forensics_halloween_invitation.zip
 Length Date Time Name
--------- ---------- ----- ----
 5252634 10-12-2022 08:04 invitation.docm
--------- -------
 5252634 1 file

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">unzip&lt;/span> &lt;span class="mtku">forensics_halloween_invitation.zip&lt;/span>
Archive: forensics_halloween_invitation.zip
 inflating: invitation.docm

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">invitation.docm&lt;/span>
invitation.docm: Microsoft Word 2007+
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="extracciÃ³n-de-macros-vba">ExtracciÃ³n de macros VBA&lt;/h2>
&lt;p>Esto significa que tenemos un documento de Microsoft Word con macros VBA. En lugar de abrir Microsoft Word, podemos usar &lt;code>olevba&lt;/code> de &lt;a target="_blank" href="https://pypi.org/project/oletools/">&lt;code>oletools&lt;/code>&lt;/a> para extraer el cÃ³digo VBA:&lt;/p></description></item><item><title>Horror Feeds</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/horror-feeds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/horror-feeds/</guid><description>&lt;p>Se nos proporciona esta pÃ¡gina web:&lt;/p>
&lt;p>&lt;img alt="Horror Feeds 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Horror-Feeds-1.webp">&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>TambiÃ©n se nos proporciona el cÃ³digo fuente en Python de la aplicaciÃ³n web, hecha en Flask. Como estamos tratando con un formulario de inicio de sesiÃ³n, vamos a echar un vistazo a cÃ³mo se interactÃºa con la base de datos (&lt;code>application/database.py&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">colorama&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">Cursor&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_password_hash&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">verify_hash&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">generate_token&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> flask_mysqldb &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> MySQL&lt;/span>

&lt;span class="mtk1">mysql&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> MySQL()&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query_db&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">query&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">args&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">(), &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">False&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/tmp/log'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">query&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mysql&lt;/span>&lt;span class="mtk1">.connection.cursor()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.execute(&lt;/span>&lt;span class="mtk9 mtki">query&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">args&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk8 mtku">dict&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.description[&lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">][&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">], &lt;/span>&lt;span class="mtk1">value&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">idx&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">value&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">enumerate&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1">)) &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">row&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">in&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">cursor&lt;/span>&lt;span class="mtk1">.fetchall()]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">None&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">rv&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">login&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query_db&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'SELECT password FROM users WHERE username = &lt;/span>&lt;span class="mtk6">%s&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">,), &lt;/span>&lt;span class="mtk9 mtki">one&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">)&lt;/span> 

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password_check&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">verify_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">user&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'password'&lt;/span>&lt;span class="mtk1">))&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">password_check&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_token&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">token&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>

&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">register&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">exists&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query_db&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'SELECT * FROM users WHERE username = &lt;/span>&lt;span class="mtk6">%s&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk1">,))&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">exists&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">False&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">hashed&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">generate_password_hash&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">password&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">query_db&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'INSERT INTO users (username, password) VALUES ("&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk9 mtki">username&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">", "&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">hashed&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">")'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mysql&lt;/span>&lt;span class="mtk1">.connection.commit()&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>De hecho, hay algo explotable aquÃ­.&lt;/p></description></item><item><title>Juggling Facts</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/juggling-facts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/juggling-facts/</guid><description>&lt;p>Se nos proporciona la siguiente pÃ¡gina web:&lt;/p>
&lt;p>&lt;img alt="Juggling Facts 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Juggling-Facts-1.webp">&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>TambiÃ©n nos dan el cÃ³digo PHP de la aplicaciÃ³n web. La parte importante estÃ¡ en &lt;code>controllers/IndexController.php&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">&amp;lt;?php&lt;/span>

&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">IndexController&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">extends&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtki mtku">Controller&lt;/span>
&lt;span class="mtk1">{&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">__construct&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">parent&lt;/span>&lt;span class="mtk5">::&lt;/span>&lt;span class="mtk8">__construct&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">($router)&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">view&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'index'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">public&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">function&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getfacts&lt;/span>&lt;span class="mtk1">($router)&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> $jsondata &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7">json_decode&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7">file_get_contents&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'php://input'&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ( &lt;/span>&lt;span class="mtk7">empty&lt;/span>&lt;span class="mtk1">($jsondata) &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">!&lt;/span>&lt;span class="mtk7">array_key_exists&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'type'&lt;/span>&lt;span class="mtk1">, $jsondata))&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Insufficient parameters!'&lt;/span>&lt;span class="mtk1">]);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ($jsondata[&lt;/span>&lt;span class="mtk4">'type'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">===&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'secrets'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;amp;&amp;amp;&lt;/span>&lt;span class="mtk1"> $_SERVER[&lt;/span>&lt;span class="mtk4">'REMOTE_ADDR'&lt;/span>&lt;span class="mtk1">] &lt;/span>&lt;span class="mtk5">!==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'127.0.0.1'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Currently this type can be only accessed through &lt;/span>&lt;span class="mtk4">localhost!'&lt;/span>&lt;span class="mtk1">]);&lt;/span> 
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">switch&lt;/span>&lt;span class="mtk1"> ($jsondata[&lt;/span>&lt;span class="mtk4">'type'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'secrets'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'facts'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">$this&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk1">facts&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">get_facts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'secrets'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'spooky'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'facts'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">$this&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk1">facts&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">get_facts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'spooky'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">case&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'not_spooky'&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'facts'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9">$this&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk1">facts&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">get_facts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'not_spooky'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> ]);&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">default&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> $router&lt;/span>&lt;span class="mtk5">-&amp;gt;&lt;/span>&lt;span class="mtk8">jsonify&lt;/span>&lt;span class="mtk1">([&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'message'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&amp;gt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'Invalid type!'&lt;/span>
&lt;span class="mtk1"> ]);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Nos interesa ejecutar &lt;code>$this-&amp;gt;facts-&amp;gt;get_facts('secrets')&lt;/code>, porque la flag se encuentra ahÃ­ (como se ve en &lt;code>entrypoint.sh&lt;/code>). AdemÃ¡s, para interactuar con &lt;code>IndexController&lt;/code>, tenemos que usar la ruta &lt;code>/api/getfacts&lt;/code>:&lt;/p></description></item><item><title>Ouija</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/ouija/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/ouija/</guid><description>&lt;p>Se nos proporciona un binario llamado &lt;code>ouija&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">ouija&lt;/span>
ouija: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=2cace162c306a34dcfc4837d648d047e2ea339fe, for GNU/Linux 3.2.0, not stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Si lo abrimos en Ghidra, veremos el cÃ³digo en C descompilado de la funciÃ³n &lt;code>main&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> key_copy;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> r;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> m;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> o;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> n;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> q;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> p;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> l;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> k;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> j;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1"> i;&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setvbuf&lt;/span>&lt;span class="mtk1">(stdout, &lt;/span>&lt;span class="mtk6">NULL&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">strdup&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"ZLT{Svvafy_kdwwhk_lg_qgmj_ugvw_escwk_al_wskq_lg_ghlaearw_dslwj!}"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Retrieving key."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">1e&lt;/span>&lt;span class="mtk1">; i &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> i &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (i &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> key_copy &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> key;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Hmm, I don&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">t like that one. Let&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s pick a new one."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (j &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; j &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">1e&lt;/span>&lt;span class="mtk1">; j &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> j &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (j &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> key_copy &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> key_copy &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Yes, 18 will do nicely."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (k &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; k &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">14&lt;/span>&lt;span class="mtk1">; k &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> k &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (k &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Let&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s get ready to start. This might take a while!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (l &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; l &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">; l &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> l &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (l &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (; &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\0&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">; enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> enc_flag &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'a'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'z'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> ((&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'A'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">||&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk4">'Z'&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag)) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"We can leave this one alone."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (m &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; m &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">; m &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> m &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (m &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"This one&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s an uppercase letter!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (n &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; n &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">14&lt;/span>&lt;span class="mtk1">; n &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> n &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (n &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> key_copy &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">41&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Wrapping it round..."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (o &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; o &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">; o &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> o &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (o &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\x1a&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1">) key_copy;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> } &lt;/span>&lt;span class="mtk5">else&lt;/span>&lt;span class="mtk1"> {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"This one&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s a lowercase letter"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (p &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; p &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">14&lt;/span>&lt;span class="mtk1">; p &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> p &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (p &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> key_copy &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">61&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Wrapping it round..."&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (q &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; q &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">32&lt;/span>&lt;span class="mtk1">; q &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> q &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (q &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk6">\x1a&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1">) key_copy;&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Okay, let&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s write down this letter! This is a pretty complex&lt;/span>&lt;span class="mtk4"> operation, you might want to check back later."&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">10&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">for&lt;/span>&lt;span class="mtk1"> (r &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">; r &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">300&lt;/span>&lt;span class="mtk1">; r &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> r &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (r &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">5&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\r&lt;/span>&lt;span class="mtk4"> "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">putchar&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'.'&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sleep&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">" done!"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%c\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">enc_flag);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"You&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">re still here?"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>El programa cogerÃ¡ esta cadena de texto:&lt;/p></description></item><item><title>POOF</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/poof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/poof/</guid><description>&lt;p>Se nos proporcionan algunos archivos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">unzip&lt;/span> -l &lt;span class="mtku">forensics_poof.zip&lt;/span>
Archive: forensics_poof.zip
 Length Date Time Name
---------- ---------- ----- ----
 2567089 10-20-2022 11:12 candy_dungeon.pdf.boo
1096901984 10-20-2022 18:11 mem.dmp
 7839830 10-20-2022 11:25 poof_capture.pcap
 1126698 10-20-2022 12:04 Ubuntu_4.15.0-184-generic_profile.zip 
---------- -------
1108435601 4 files
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Y tenemos una instancia remota a la que conectarnos para responder a algunas preguntas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">nc&lt;/span> 159.65.48.79 31240

+-------+-----------------------------------------------------+
| Title | Description |
+-------+-----------------------------------------------------+
| POOF | In my company, we are developing a |
| | new python game for Halloween. I'm the |
| | leader of this project; thus, I want |
| | it to be unique. So I researched |
| | the most cutting-edge python libraries for game |
| | development until I stumbled upon a private |
| | discord server. One member suggested I try |
| | a new python library that provides enhanced |
| | game development capabilities. I was excited about |
| | it until I tried it. Quite simply, |
| | all my files are encrypted now. Thankfully |
| | I manage to capture the memory and |
| | the network traffic of my Linux server |
| | during the incident. Can you analyze it |
| | and help me recover my files? |
| | |
+-------+-----------------------------------------------------+

&lt;span class="code-dark-magenta">Which is the malicious URL that the ransomware was downloaded from? (for example: http://maliciousdomain/example/file.extension)&lt;/span> 
&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="anÃ¡lisis-de-trÃ¡fico">AnÃ¡lisis de trÃ¡fico&lt;/h2>
&lt;p>Vamos a abrir &lt;code>poof_capture.pcap&lt;/code> en Wireshark:&lt;/p></description></item><item><title>Pumpkin Stand</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/pumpkin-stand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/pumpkin-stand/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>pumpkin_stand&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Si abrimos el binario en Ghidra, veremos el cÃ³digo descompilado en C de la funciÃ³n &lt;code>main&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> in_FS_OFFSET;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">short&lt;/span>&lt;span class="mtk1"> option;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">short&lt;/span>&lt;span class="mtk1"> amount;&lt;/span>
&lt;span class="mtk1"> FILE &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">fp;&lt;/span>
&lt;span class="mtk1"> undefined8 local_48;&lt;/span>
&lt;span class="mtk1"> undefined8 local_40;&lt;/span>
&lt;span class="mtk1"> undefined8 local_38;&lt;/span>
&lt;span class="mtk1"> undefined8 local_30;&lt;/span>
&lt;span class="mtk1"> undefined8 local_28;&lt;/span>
&lt;span class="mtk1"> undefined8 local_20;&lt;/span>
&lt;span class="mtk1"> undefined8 canary;&lt;/span>
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> canary &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(undefined8 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) (in_FS_OFFSET &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">28&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> option &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> amount &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">true&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">menu&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__isoc99_scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">option);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">How many do you want?&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt;&amp;gt; "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__isoc99_scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%d&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">amount);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> amount) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">[-] You cannot buy less than 1!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_0010134a);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> pumpcoins &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> pumpcoins &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> amount &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">short&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(undefined4 &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) ((&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">values &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) option &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">4&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> pumpcoins) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Current pumpcoins: [&lt;/span>&lt;span class="mtk6">%s%d%s&lt;/span>&lt;span class="mtk4">]&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00100e80, (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">) pumpcoins);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">[-] Not enough pumpcoins for this!&lt;/span>&lt;span class="mtk6">\n\n%s&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_0010134a, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00100e78);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (option &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Current pumpcoins: [&lt;/span>&lt;span class="mtk6">%s%d%s&lt;/span>&lt;span class="mtk4">]&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00100e80, (ulong) (&lt;/span>&lt;span class="mtk7 mtki">uint&lt;/span>&lt;span class="mtk1">) (&lt;/span>&lt;span class="mtk7 mtki">int&lt;/span>&lt;span class="mtk1">)pumpcoins);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Good luck crafting this huge pumpkin with a shovel&lt;/span>&lt;span class="mtk4">!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk6">9998&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">&amp;lt;&lt;/span>&lt;span class="mtk1"> pumpcoins) &lt;/span>&lt;span class="mtk5">break&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">[-] Not enough pumpcoins for this!&lt;/span>&lt;span class="mtk6">\n\n%s&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_0010134a, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00100e78);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> local_48 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_40 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_38 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_30 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_28 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>
&lt;span class="mtk1"> local_20 &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">;&lt;/span>

&lt;span class="mtk1"> fp &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fopen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"./flag.txt"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"rb"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (fp &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">NULL&lt;/span>&lt;span class="mtk1">) {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">fgets&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">local_48, &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">30&lt;/span>&lt;span class="mtk1">, fp);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%s\n&lt;/span>&lt;span class="mtk4">Congratulations, here is the code to get your lase&lt;/span>&lt;span class="mtk4">r:&lt;/span>&lt;span class="mtk6">\n\n%s\n\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">DAT_00100ee3, &lt;/span>&lt;span class="mtk5">&amp;amp;&lt;/span>&lt;span class="mtk1">local_48);&lt;/span>
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">16&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> }&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Error opening flag.txt, please contact an Adminis&lt;/span>&lt;span class="mtk4">trator!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>BÃ¡sicamente, el programa muestra este menÃº:&lt;/p></description></item><item><title>Pumpking</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/pumpking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/pumpking/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>pumpking&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little
RELRO: &lt;span class="code-dark-green">Full RELRO&lt;/span>
Stack: &lt;span class="code-dark-red">No canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-red">No PIE (0x400000)&lt;/span> 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="configuraciÃ³n-del-entorno">ConfiguraciÃ³n del entorno&lt;/h2>
&lt;p>Puede ocurrir que no tengamos la versiÃ³n de Glibc que acepta el programa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">./pumpking&lt;/span>
zsh: no such file or directory: ./pumpking

&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">ldd&lt;/span> &lt;span class="mtku">pumpking&lt;/span>
./pumpking: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by ./pumpking) 
 linux-vdso.so.1 (0x00007ffc78fd6000)
 libseccomp.so.2 =&amp;gt; /lib/x86_64-linux-gnu/libseccomp.so.2 (0x00007f16439e4000)
 libc.so.6 =&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f16437f2000)
 ./glibc/ld-linux-x86-64.so.2 =&amp;gt; /lib64/ld-linux-x86-64.so.2 (0x00007f1643a25000)
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Por suerte, en &lt;a target="_blank" href="../spooky-time">Spooky Time&lt;/a> nos dan una librerÃ­a y un &lt;em>loader&lt;/em>, versiÃ³n 2.35:&lt;/p></description></item><item><title>Secured Transfer</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/secured-transfer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/secured-transfer/</guid><description>&lt;p>Se nos proporciona un archivo binario llamado &lt;code>securetransfer&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">file&lt;/span> &lt;span class="mtku">securetransfer&lt;/span>
securetransfer: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=0457997eda987eb100de85a2954fc8b8fc660a53, for GNU/Linux 3.2.0, stripped 
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>TambiÃ©n tenemos un archivo de captura de red llamado &lt;code>trace.pcap&lt;/code>.&lt;/p>
&lt;h2 id="anÃ¡lisis-de-trÃ¡fico">AnÃ¡lisis de trÃ¡fico&lt;/h2>
&lt;p>Comenzando por &lt;code>trace.pcap&lt;/code>, podemos usar Wireshark para analizar la captura de red:&lt;/p>
&lt;p>&lt;img alt="Secured Transfer 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Secured-Transfer-1.webp">&lt;/p>
&lt;p>Solamente hay un segmento TCP que contiene datos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">5f558867993dccc99879f7ca39c5e406972f84a3a9dd5d48972421ff375cb18c 
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Podemos usar Ghidra para leer el cÃ³digo descompilado en C. Esta es la funciÃ³n &lt;code>main&lt;/code>:&lt;/p></description></item><item><title>Spookifier</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/spookifier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/spookifier/</guid><description>&lt;p>Se nos proporciona esta pÃ¡gina web:&lt;/p>
&lt;p>&lt;img alt="Spookifier 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Spookifier-1.webp">&lt;/p>
&lt;p>Podemos introducir un texto cualquiera y serÃ¡ mostrado en diferentes fuentes:&lt;/p>
&lt;p>&lt;img alt="Spookifier 2" src="https://7rocky.github.io/images/other/HackTheBooCTF/Spookifier-2.webp">&lt;/p>
&lt;h2 id="anÃ¡lisis-de-cÃ³digo-estÃ¡tico">AnÃ¡lisis de cÃ³digo estÃ¡tico&lt;/h2>
&lt;p>Tenemos el cÃ³digo fuente en Python de la aplicaciÃ³n web, hecha con Flask. Este archivo es &lt;code>application/blueprints/routes.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">flask&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Blueprint&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">request&lt;/span>
&lt;span class="mtk5">from&lt;/span> &lt;span class="mtk8 mtku">flask_mako&lt;/span> &lt;span class="mtk5">import&lt;/span>&lt;span class="mtk8"> render_template&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">application&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">util&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">spookify&lt;/span>

&lt;span class="mtk1">web&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Blueprint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'web'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk8">@&lt;/span>&lt;span class="mtk1">web&lt;/span>&lt;span class="mtk8">.&lt;/span>&lt;span class="mtk8">route&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'/'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">index&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">text&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">args&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">get&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'text'&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span> text:
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">converted&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">spookify&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">text&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">render_template&lt;/span>(&lt;span class="mtk4">'index.html'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">output&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1">converted&lt;/span>&lt;span class="mtk1">)&lt;/span> 
&lt;span class="mtk1"> &lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span> &lt;span class="mtk8">render_template&lt;/span>(&lt;span class="mtk4">'index.html'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">output&lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk4">''&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Lo primero que vemos es que se utilizan plantillas, pero usando &lt;code>mako&lt;/code> en lugar del habitual Jinja2.&lt;/p></description></item><item><title>Spooky RSA</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/spooky-rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/spooky-rsa/</guid><description>&lt;p>Se nos proporciona el siguiente cÃ³digo en Python para cifrar la &lt;em>flag&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Crypto&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">Util&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">number&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>

&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">b&lt;/span>&lt;span class="mtk4">'HTB{????????????????????????????????????????????}&lt;/span>&lt;span class="mtk4">'&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_gen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8">getStrongPrime&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">bits&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">q&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, (&lt;/span>&lt;span class="mtk1">p&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">q&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk1">randint&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">-&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">2&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk8">pow&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">f&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">m&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">%&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">N&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">():&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">key_gen&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">1024&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">bytes_to_long&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">)&lt;/span>

&lt;span class="mtk1"> (&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk1">), (&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">m&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">priv&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">])&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">with&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">open&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">'out.txt'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'w'&lt;/span>&lt;span class="mtk1">) &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">f&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">write&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">'N = &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">N&lt;/span>&lt;span class="mtk6">}\n&lt;/span>&lt;span class="mtk4">(e1, c1) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c1&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">(e2, c2) = (&lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">e2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">, &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">c2&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">)&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">'&lt;/span>&lt;span class="mtk1">)&lt;/span> 


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>TambiÃ©n tenemos la salida del &lt;em>script&lt;/em>:&lt;/p></description></item><item><title>Spooky Time</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/spooky-time/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/spooky-time/</guid><description>&lt;p>Se nos proporciona un binario de 64 bits llamado &lt;code>spooky_time&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">Arch: amd64-64-little 
RELRO: &lt;span class="code-dark-red">No RELRO&lt;/span>
Stack: &lt;span class="code-dark-green">Canary found&lt;/span>
NX: &lt;span class="code-dark-green">NX enabled&lt;/span>
PIE: &lt;span class="code-dark-green">PIE enabled&lt;/span>
RUNPATH: &lt;span class="code-dark-red">b'./glibc/'&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h2 id="ingenierÃ­a-inversa">IngenierÃ­a inversa&lt;/h2>
&lt;p>Si lo abrimos en Ghidra, veremos esta funciÃ³n &lt;code>main&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk7 mtki">void&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">() {&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> in_FS_OFFSET;&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> first_input[&lt;/span>&lt;span class="mtk6">12&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">char&lt;/span>&lt;span class="mtk1"> second_input[&lt;/span>&lt;span class="mtk6">312&lt;/span>&lt;span class="mtk1">];&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> canary;&lt;/span>

&lt;span class="mtk1"> canary &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) (in_FS_OFFSET &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">28&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">setup&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">banner&lt;/span>&lt;span class="mtk1">();&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"It&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s your chance to scare those little kids, say some&lt;/span>&lt;span class="mtk4">thing scary!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__isoc99_scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%11s&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, first_input);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Seriously?? I bet you can do better than "&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(first_input);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Anyway, here comes another bunch of kids, let&lt;/span>&lt;span class="mtk6">\'&lt;/span>&lt;span class="mtk4">s try one more time.."&lt;/span>&lt;span class="mtk1">);&lt;/span> 
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__isoc99_scanf&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">%299s&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">, second_input);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Ok, you are not good with that, do you think that &lt;/span>&lt;span class="mtk4">was scary??&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">printf&lt;/span>&lt;span class="mtk1">(second_input);&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">puts&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk4">"Better luck next time!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">);&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> (canary &lt;/span>&lt;span class="mtk5">!=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk7 mtki">long&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">*&lt;/span>&lt;span class="mtk1">) (in_FS_OFFSET &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">0x&lt;/span>&lt;span class="mtk6">28&lt;/span>&lt;span class="mtk1">)) {&lt;/span>
&lt;span class="mtk3"> /* WARNING: Subroutine does no&lt;/span>&lt;span class="mtk3">t return */&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">__stack_chk_fail&lt;/span>&lt;span class="mtk1">();&lt;/span>
&lt;span class="mtk1"> }&lt;/span>
&lt;span class="mtk1">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;h3 id="vulnerabilidad-de-_format-string_">Vulnerabilidad de &lt;em>Format String&lt;/em>&lt;/h3>
&lt;p>Existen dos vulnerabilidades de &lt;em>Format String&lt;/em> ya que podemos proporcionar dos &lt;em>strings&lt;/em> que serÃ¡n usadas como primer argumento de &lt;code>printf&lt;/code>. El primer argumento de &lt;code>printf&lt;/code> debe ser una &lt;em>format string&lt;/em> que se usarÃ¡ para formatear los siguientes argumentos como enteros (&lt;code>%d&lt;/code>), valores hexadecimales (&lt;code>%x&lt;/code>), caracteres (&lt;code>%c&lt;/code>), &lt;em>strings&lt;/em> (&lt;code>%s&lt;/code>)&amp;hellip;&lt;/p></description></item><item><title>Trick or Breach</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/trick-or-breach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/trick-or-breach/</guid><description>&lt;p>Se nos proporciona un archivo con una captura de trÃ¡fico de red llamado &lt;code>capture.pcap&lt;/code>:&lt;/p>
&lt;h2 id="anÃ¡lisis-de-trÃ¡fico">AnÃ¡lisis de trÃ¡fico&lt;/h2>
&lt;p>Podemos usar Wireshark para analizarlo:&lt;/p>
&lt;p>&lt;img alt="Trick or Breach 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Trick-or-Breach-1.webp">&lt;/p>
&lt;h3 id="consultas-dns">Consultas DNS&lt;/h3>
&lt;p>Todos los paquetes corresponden a consultas DNS (y respuestas). Lo que destaca es el subdominio: todas las consultas preguntan por &lt;code>hex-data.pumpkincorp.com&lt;/code>.&lt;/p>
&lt;p>Si filtramos por los datos hexadecimales en el archivo &lt;code>capture.pcap&lt;/code>, tenemos lo siguiente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">strings&lt;/span> &lt;span class="mtku">capture.pcap&lt;/span> | &lt;span class="code-dark-green">grep&lt;/span> -E &lt;span class="code-dark-yellow">'[0-9a-f]{32,}'&lt;/span> | &lt;span class="code-dark-green">head&lt;/span> 
2504b0304140008080800a52c47550000000000000000000000
2504b0304140008080800a52c47550000000000000000000000
20018000000786c2f64726177696e67732f64726177696e6731
20018000000786c2f64726177696e67732f64726177696e6731
22e786d6c9dd05d6ec2300c07f013ec0e55de695a181343145e
22e786d6c9dd05d6ec2300c07f013ec0e55de695a181343145e
2d04e300ee0256e1b918fca0ea3dc7ed14a36697b011e6dcb3f
2d04e300ee0256e1b918fca0ea3dc7ed14a36697b011e6dcb3f
2f9efcd6e74b6f84462137c23eab212057a15b4f15d230eef6f
2f9efcd6e74b6f84462137c23eab212057a15b4f15d230eef6f
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>NÃ³tese que todas las lÃ­neas empiezan por &lt;code>2&lt;/code>, que no es parte del subdominio (se comprueba en la imagen anterior), por lo que tenemos que quitarlo:&lt;/p></description></item><item><title>Whole Lotta Candy</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/whole-lotta-candy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/whole-lotta-candy/</guid><description>&lt;p>Se nos proporciona el cÃ³digo fuente en Python del servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#1d1e19;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">encrypt&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Encryptor&lt;/span>
&lt;span class="mtk5">from&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">secret&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">FLAG&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>
&lt;span class="mtk5">import&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>

&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> [&lt;/span>&lt;span class="mtk4">'ECB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CBC'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CFB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'OFB'&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">'CTR'&lt;/span>&lt;span class="mtk1">]&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">BaseRequestHandler&lt;/span>&lt;span class="mtk1">):&lt;/span>

&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">handle&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">signal&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">alarm&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk6">0&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">self&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">request&lt;/span>&lt;span class="mtk1">)&lt;/span>


&lt;span class="mtk7 mtki">class&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">ForkingMixIn&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">pass&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.send(&lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">.encode())&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk9 mtki">msg&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">return&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">.recv(&lt;/span>&lt;span class="mtk6">4096&lt;/span>&lt;span class="mtk1">).decode().strip()&lt;/span>


&lt;span class="mtk7 mtki">def&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">main&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">):&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Encryptor&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">while&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">try&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Please interact with the server using json data!&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk7 mtki">f&lt;/span>&lt;span class="mtk4">"Selected mode is &lt;/span>&lt;span class="mtk6">{&lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk6">}&lt;/span>&lt;span class="mtk4">.&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">Options:&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">1.Encrypt flag&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">2.Encrypt plaintext&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">3.Change mode&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">4.Exit&lt;/span>&lt;span class="mtk6">\n\n&lt;/span>&lt;span class="mtk4">&amp;gt; "&lt;/span> 
&lt;span class="mtk1"> )&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">"option"&lt;/span>&lt;span class="mtk1">]&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"1"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">FLAG&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"encrypted"&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"ciphertext"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"2"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Enter plaintext: &lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'plaintext'&lt;/span>&lt;span class="mtk1">].encode()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">enc&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">encrypt&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">plaintext&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1">).&lt;/span>&lt;span class="mtk8">hex&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"encrypted"&lt;/span>&lt;span class="mtk1">,&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"ciphertext"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">ciphertext&lt;/span>
&lt;span class="mtk1"> })&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"3"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"modes"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk1">MODES&lt;/span>&lt;span class="mtk1">})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"These are the supported modes&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">receiveMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Expecting modes: &lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">loads&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">mode&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">random&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">choice&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">payload&lt;/span>&lt;span class="mtk1">[&lt;/span>&lt;span class="mtk4">'modes'&lt;/span>&lt;span class="mtk1">])&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">elif&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">option&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"4"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"Bye bye&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">except&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">Exception&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">as&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">json&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">dumps&lt;/span>&lt;span class="mtk1">({&lt;/span>&lt;span class="mtk4">"response"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk4">"error"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"message"&lt;/span>&lt;span class="mtk1">: &lt;/span>&lt;span class="mtk8 mtku">str&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk1">e&lt;/span>&lt;span class="mtk1">)})&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">sendMessage&lt;/span>&lt;span class="mtk1">(&lt;/span>&lt;span class="mtk9 mtki">s&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">response&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">+&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk6">\n&lt;/span>&lt;span class="mtk4">"&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8">exit&lt;/span>&lt;span class="mtk1">()&lt;/span>


&lt;span class="mtk5">if&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">__name__&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">==&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk4">"__main__"&lt;/span>&lt;span class="mtk1">:&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">socketserver&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8 mtku">TCPServer&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk1">allow_reuse_address&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk6">True&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk5">=&lt;/span>&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk8 mtku">ReusableTCPServer&lt;/span>&lt;span class="mtk1">((&lt;/span>&lt;span class="mtk4">"0.0.0.0"&lt;/span>&lt;span class="mtk1">, &lt;/span>&lt;span class="mtk6">1337&lt;/span>&lt;span class="mtk1">), &lt;/span>&lt;span class="mtk8 mtku">Handler&lt;/span>&lt;span class="mtk1">)&lt;/span>
&lt;span class="mtk1"> &lt;/span>&lt;span class="mtk1">server&lt;/span>&lt;span class="mtk1">.&lt;/span>&lt;span class="mtk8">serve_forever&lt;/span>&lt;span class="mtk1">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>BÃ¡sicamente, tenemos estas opciones:&lt;/p></description></item><item><title>Wrong Spooky Season</title><link>https://7rocky.github.io/ctf/other/hackthebooctf/wrong-spooky-season/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/other/hackthebooctf/wrong-spooky-season/</guid><description>&lt;p>Se nos proporciona un archivo con una captura de trÃ¡fico de red llamado &lt;code>capture.pcap&lt;/code>:&lt;/p>
&lt;h2 id="anÃ¡lisis-de-trÃ¡fico">AnÃ¡lisis de trÃ¡fico&lt;/h2>
&lt;p>Podemos usar Wireshark para analizarlo:&lt;/p>
&lt;p>&lt;img alt="Wrong Spooky Season 1" src="https://7rocky.github.io/images/other/HackTheBooCTF/Wrong-Spooky-Season-1.webp">&lt;/p>
&lt;h3 id="mensajes-http">Mensajes HTTP&lt;/h3>
&lt;p>Hay un montÃ³n de paquetes. Vamos a filtrar primero por HTTP:&lt;/p>
&lt;p>&lt;img alt="Wrong Spooky Season 2" src="https://7rocky.github.io/images/other/HackTheBooCTF/Wrong-Spooky-Season-2.webp">&lt;/p>
&lt;p>Vale, ahora hay muchos menos paquetes para analizar.&lt;/p>
&lt;p>Existen algunos mensajes HTTP que destacan al final. Podemos pensar que un usuario malintencionado estÃ¡ ejecutando comandos de sistema en el servidor de forma remota (&lt;code>cmd=whoami&lt;/code>, &lt;code>cmd=id&lt;/code> &amp;hellip;). El Ãºltimo mensaje utiliza &lt;code>socat&lt;/code> para obtener una conexiÃ³n mediante &lt;em>reverse shell&lt;/em>, podemos seleccionar este paquete y quitar el filtro HTTP.&lt;/p></description></item></channel></rss>