<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Habilidades generales on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/</link><description>Recent content in Habilidades generales on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/picoctf/general-skills/index.xml" rel="self" type="application/rss+xml"/><item><title>Nice netcat...</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/nice-netcat.../</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/general-skills/nice-netcat.../</guid><description>Se nos proporciona un nombre de dominio y un puerto para una instancia remota. Si nos conectamos utilizando nc, nos envía una lista de números:
$ nc mercury.picoctf.net 22902 112 105 99 111 67 84 70 123 103 48 48 100 95 107 49 116 116 121 33 95 110 49 99 51 95 107 49 116 116 121 33 95 100 51 100 102 100 54 100 102 125 10 ^C Estos números parece que son la representación en ASCII decimal de algunos caracteres.</description></item><item><title>Obedient Cat</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/obedient-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/general-skills/obedient-cat/</guid><description>En este reto se nos da un archivo. El contenido de este archivo es la flag:
$ cat flag picoCTF{s4n1ty_v3r1f13d_28e8376d}</description></item><item><title>runme.py</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/runme.py/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/general-skills/runme.py/</guid><description>Se nos proporciona un script con código Python para que lo ejecutemos:
$ python3 runme.py picoCTF{run_s4n1ty_run}</description></item><item><title>Serpentine</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/serpentine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/general-skills/serpentine/</guid><description>Se nos proporciona un script de Python que debería mostrar la flag, pero no lo hace:
import random import sys def str_xor(secret, key): # extend key to secret length new_key = key i = 0 while len(new_key) &amp;lt; len(secret): new_key = new_key + key[i] i = (i + 1) % len(key) return "".join([chr(ord(secret_c) ^ ord(new_key_c)) for (secret_c, new_key_c) in zip(secret, new_key)]) flag_enc = chr(0x15) + chr(0x07) + chr(0x08) + chr(0x06) + chr(0x27) + chr(0x21) + chr(0x23) + chr(0x15) + chr(0x5c) + chr(0x01) + chr(0x57) + chr(0x2a) + chr(0x17) + chr(0x5e) + chr(0x5f) + chr(0x0d) + chr(0x3b) + chr(0x19) + chr(0x56) + chr(0x5b) + \ chr(0x5e) + chr(0x36) + chr(0x53) + chr(0x07) + chr(0x51) + chr(0x18) + chr(0x58) + chr(0x05) + chr(0x57) + chr(0x11) + \ chr(0x3a) + chr(0x0c) + chr(0x5d) + chr(0x5c) + chr(0x52) + \ chr(0x42) + chr(0x50) + chr(0x5a) + chr(0x5d) + chr(0x14) def print_flag(): flag = str_xor(flag_enc, 'enkidu') print(flag) def print_encouragement(): encouragements = ['You can do it!</description></item><item><title>what's a net cat?</title><link>https://7rocky.github.io/ctf/picoctf/general-skills/whats-a-net-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/general-skills/whats-a-net-cat/</guid><description>Se nos proporciona una instancia remota a la que conectarnos. Si establecemos la conexión con nc, obtenemos la flag:
$ nc jupiter.challenges.picoctf.org 25103 You're on your way to becoming the net cat master picoCTF{nEtCat_Mast3ry_d0c64587}</description></item></channel></rss>