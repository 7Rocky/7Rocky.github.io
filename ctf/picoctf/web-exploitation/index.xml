<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Explotación web on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/picoctf/web-exploitation/</link><description>Recent content in Explotación web on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/picoctf/web-exploitation/index.xml" rel="self" type="application/rss+xml"/><item><title>Cookies</title><link>https://7rocky.github.io/ctf/picoctf/web-exploitation/cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/web-exploitation/cookies/</guid><description>&lt;p>Se nos proporciona una página web que pregunta por una &lt;em>cookie&lt;/em>:&lt;/p>
&lt;p>&lt;img alt="Red" src="https://7rocky.github.io/images/picoCTF/cookie.webp">&lt;/p>
&lt;p>Mirando en las herramientas de desarrollador, vemos que tenemos una &lt;em>cookie&lt;/em> &lt;code>name=-1&lt;/code>. Si ponemos &lt;code>snickerdoodle&lt;/code> como el campo de texto sugiere, la &lt;em>cookie&lt;/em> cambiará a &lt;code>name=0&lt;/code>:&lt;/p>
&lt;p>&lt;img alt="Blue" src="https://7rocky.github.io/images/picoCTF/cookie-snickerdoodle.webp">&lt;/p>
&lt;p>Vamos a modificar el valor de la &lt;em>cookie&lt;/em> usando &lt;code>curl&lt;/code> y mostrar solo el mensaje:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">curl&lt;/span> mercury.picoctf.net:27177/check -sH &lt;span class="code-dark-yellow">'Cookie: name=0'&lt;/span> | &lt;span class="code-dark-green">grep&lt;/span> -oE &lt;span class="code-dark-yellow">'&amp;lt;b&amp;gt;.*?&amp;lt;/b&amp;gt;'&lt;/span> 
&lt;span class="code-red">&amp;lt;b&amp;gt;I love snickerdoodle cookies!&amp;lt;/b&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>

&lt;p>Ahora vamos a usar un bucle en Bash para ver si algo cambia al poner otro valor como &lt;code>cookie&lt;/code>:&lt;/p></description></item><item><title>GET aHEAD</title><link>https://7rocky.github.io/ctf/picoctf/web-exploitation/get-ahead/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/web-exploitation/get-ahead/</guid><description>&lt;p>Se nos proporciona una página web que muestra dos colores de fondo:&lt;/p>
&lt;p>&lt;img alt="Red" src="https://7rocky.github.io/images/picoCTF/get-ahead-red.webp">&lt;/p>
&lt;p>&lt;img alt="Blue" src="https://7rocky.github.io/images/picoCTF/get-ahead-blue.webp">&lt;/p>
&lt;p>El botón rojo utiliza una petición GET y el azul usa una petición POST. Pero no vemos nada más.&lt;/p>
&lt;p>Como el nombre del reto incluye HEAD, vamos a ver si qué pasa si hacemos petición HEAD con &lt;code>curl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000!important;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="no-highlight">&lt;span class="code-cyan">$&lt;/span> &lt;span class="code-dark-green">curl&lt;/span> -I mercury.picoctf.net:47967
HTTP/1.1 200 OK
&lt;span class="code-white">flag&lt;/span>: picoCTF{r3j3ct_th3_du4l1ty_cca66bd3} 
&lt;span class="code-white">Content-type&lt;/span>: text/html; charset=UTF-8
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Insp3ct0r</title><link>https://7rocky.github.io/ctf/picoctf/web-exploitation/insp3ct0r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/web-exploitation/insp3ct0r/</guid><description>&lt;p>Se nos proporciona una página web como esta:&lt;/p>
&lt;p>&lt;img alt="Insp3ct0r 1" src="https://7rocky.github.io/images/picoCTF/Insp3ct0r-1.webp">&lt;/p>
&lt;p>Como sugiere la página, tenemos que inspeccionar el código HTML de la página web (atajo: &lt;code>Ctrl + U&lt;/code>):&lt;/p>
&lt;p>&lt;img alt="Insp3ct0r 2" src="https://7rocky.github.io/images/picoCTF/Insp3ct0r-2.webp">&lt;/p>
&lt;p>Podemos ver un trozo de la &lt;em>flag&lt;/em>. Vamos a inspeccionar el archivo CSS (&lt;code>mycss.css&lt;/code>):&lt;/p>
&lt;p>&lt;img alt="Insp3ct0r 3" src="https://7rocky.github.io/images/picoCTF/Insp3ct0r-3.webp">&lt;/p>
&lt;p>Genial, tenemos otra pieza. Vamos a echar un vistazo al archivo JS (&lt;code>myjs.js&lt;/code>):&lt;/p>
&lt;p>&lt;img alt="Insp3ct0r 4" src="https://7rocky.github.io/images/picoCTF/Insp3ct0r-4.webp">&lt;/p>
&lt;p>Perfecto, podemos juntar todas las piezas y formar la &lt;em>flag&lt;/em>: &lt;code>picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?f10be399}&lt;/code>.&lt;/p></description></item><item><title>where are the robots</title><link>https://7rocky.github.io/ctf/picoctf/web-exploitation/where-are-the-robots/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/picoctf/web-exploitation/where-are-the-robots/</guid><description>&lt;p>Se nos proporciona una página web como esta:&lt;/p>
&lt;p>&lt;img alt="where are the robots 1" src="https://7rocky.github.io/images/picoCTF/where-are-the-robots-1.webp">&lt;/p>
&lt;p>La página habla de robots. Existe un archivo especial llamado &lt;code>robots.txt&lt;/code> que previene a &lt;em>crawlers&lt;/em> y arañas web que accedan a ciertas rutas listadas en el archivo. Vamos a echar un vistazo:&lt;/p>
&lt;p>&lt;img alt="where are the robots 2" src="https://7rocky.github.io/images/picoCTF/where-are-the-robots-2.webp">&lt;/p>
&lt;p>Genial, hay una línea &lt;code>Disallow: /8028f.html&lt;/code>, que no significa que no podamos entrar (solamente dice a los escáneres automáticos que no entren). Este es &lt;code>/8028f.html&lt;/code>:&lt;/p></description></item></channel></rss>