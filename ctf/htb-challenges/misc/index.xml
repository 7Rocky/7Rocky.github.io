<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Misc on 7Rocky</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/</link><description>Recent content in Misc on 7Rocky</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/htb-challenges/misc/index.xml" rel="self" type="application/rss+xml"/><item><title>0ld is g0ld</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/0ld-is-g0ld/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/misc/0ld-is-g0ld/</guid><description>Se nos proporciona un archivo PDF llamado 0ld is g0ld.pdf, pero est√° protegido con contrase√±a
Para obtener la contrase√±a, podemos usar pdf2john para extraer nu hash y pas√°rselo a john para romperlo con un ataque de diccionario usando rockyou.txt:
$ pdf2john 0ld\ is\ g0ld.pdf | tee hash 0ld is g0ld.pdf:$pdf$4*4*128*-1060*1*16*5c8f37d2a45eb64e9dbbf71ca3e86861*32*9cba5cfb1c536f1384bba7458aae3f8100000000000000000000000000000000*32*702cc7ced92b595274b7918dcb6dc74bedef6ef851b4b4b5b8c88732ba4dac0c $ john --wordlist=$WORDLISTS/rockyou.txt hash Using default input encoding: UTF-8 Loaded 1 password hash (PDF [MD5 SHA2 RC4/AES 32/64]) Cost 1 (revision) is 4 for all loaded hashes Press 'q' or Ctrl-C to abort, almost any other key for status jumanji69 (0ld is g0ld.</description></item><item><title>Compressor</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/compressor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/misc/compressor/</guid><description>Para este reto solamente tenemos una instancia remota a la que conectarnos:
$ nc 157.245.33.77 31001 [*] Directory to work in: 9wIylX4fBakMNG8u6YfY37k3k1geVXHv Component List: +===============+ | | | 1. Head ü§ñ | | 2. Torso ü¶¥ | | 3. Hands üí™ | | 4. Legs ü¶µ | | | +===============+ [*] Choose component: Podemos elegir el primero, por ejemplo:
[*] Choose component: 1 [*] Sub-directory to work in: 9wIylX4fBakMNG8u6YfY37k3k1geVXHv/Head Actions: 1.</description></item><item><title>Emdee five for life</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/emdee-five-for-life/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/misc/emdee-five-for-life/</guid><description>Tenemos la siguiente p√°gina web:
Parece que tenemos que calcular el hash MD5 de la cadena de texto mostrada y enviarla:
$ echo -n Vzf9GeB5zAFDZ2M3oKSa | md5sum c03463878fee34e249962c4aef9af84c - Pero hemos sido muy lentos&amp;hellip;
Por tanto, tendremos que programar un script que env√≠e la petici√≥n lo m√°s r√°pido posible. Una cosa importante a tener en cuenta es mantener la cookie PHPSESSID configurada por el servidor:
$ curl -I 134.209.187.167:31212/ HTTP/1.</description></item><item><title>Pusheen Loves Graphs</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/pusheen-loves-graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/misc/pusheen-loves-graphs/</guid><description>Se nos proporciona un archivo binario llamado Pusheen. Si lo ejecutamos, veremos un dibujo de un gato:
$ ./Pusheen ‚ñê‚ñÄ‚ñÑ ‚ñÑ‚ñÄ‚ñå ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ ‚ñå‚ñí‚ñí‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñí‚ñí‚ñê‚ñÑ‚ñÄ‚ñÄ‚ñí‚ñà‚ñà‚ñí‚ñà‚ñà‚ñí‚ñÄ‚ñÄ‚ñÑ ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÑ ‚ñå‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÑ ‚ñÄ‚ñà‚ñí‚ñí‚ñà‚ñå‚ñí‚ñí‚ñà‚ñí‚ñí‚ñê‚ñà‚ñí‚ñí‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñå ‚ñÄ‚ñå‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñí‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÄ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê ‚ñÑ‚ñÑ ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñå‚ñÑ‚ñà‚ñí‚ñà ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê‚ñí‚ñà‚ñÄ ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê‚ñÄ ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñå ‚ñå‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê ‚ñê‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñå ‚ñå‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñê ‚ñê‚ñÑ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñå ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÄ Si miramos las cadenas de caracteres imprimibles, vemos que hay muchas que empiezan por e_ (de hecho, hay desde e_0_0 hasta e_66_100). Podemos contarlas de esta manera:
$ strings Pusheen | wc -l 6767 Estas cadenas de caracteres pueden ser nombres de funciones, ya que el binario no ha sido despojado de sus s√≠mbolos:</description></item><item><title>The secret of a Queen</title><link>https://7rocky.github.io/ctf/htb-challenges/misc/the-secret-of-a-queen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/misc/the-secret-of-a-queen/</guid><description>Se nos proporciona una imagen con unos s√≠mbolos raros:
El nombre del reto es una pista, ya que se est√° utilizando el cifrado de la reina Mar√≠a de Escocia. El cifrado se basa en la sustituci√≥n de letras por s√≠mbolos utilizando el siguiente alfabeto:
Si traducimos cada s√≠mbolo de la imagen a una letra, obtenemos la flag: HTB{THEBABINGTONPLOT}.</description></item></channel></rss>