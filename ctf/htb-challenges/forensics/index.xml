<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Forensics on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/</link><description>Recent content in Forensics on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/htb-challenges/forensics/index.xml" rel="self" type="application/rss+xml"/><item><title>Chase</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/chase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/chase/</guid><description>Se nos proporciona un archivo PCAP con mensajes HTTP y segmentos TCP:
Si filtramos por el protocolo HTTP, veremos algunas peticiones y respuestas:
Podríamos pensar que el cibercriminal encontró una vulnerabilidad de subida de archivo y subió un cmd.aspx y luego nc64.exe para ejecutar comandos. De hecho, podemos ver que el cibercriminal consiguió una reverse shell en la máquina Windows:
Al final de la captura PCAP, vemos que el cibercriminal intenta acceder a un archivo llamado JBKEE62NIFXF6ODMOUZV6NZTMFGV6URQMNMH2IBA.</description></item><item><title>Downgrade</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/downgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/downgrade/</guid><description>Se nos proporcionan un montón de logs de Eventos de Windows (archivos .evtx):
$ tree Logs Logs ├── Application.evtx ├── HardwareEvents.evtx ├── Internet Explorer.evtx ├── Key Management Service.evtx ├── Microsoft-Windows-AppModel-Runtime%4Admin.evtx ├── Microsoft-Windows-AppReadiness%4Admin.evtx ├── Microsoft-Windows-AppReadiness%4Operational.evtx ├── Microsoft-Windows-AppXDeployment%4Operational.evtx ├── Microsoft-Windows-AppXDeploymentServer%4Operational.evtx ├── Microsoft-Windows-AppXDeploymentServer%4Restricted.evtx ├── Microsoft-Windows-ApplicationResourceManagementSystem%4Operational.evtx ├── Microsoft-Windows-Bits-Client%4Operational.evtx ├── Microsoft-Windows-CodeIntegrity%4Operational.evtx ├── Microsoft-Windows-Compat-Appraiser%4Operational.evtx ├── Microsoft-Windows-CoreApplication%4Operational.evtx ├── Microsoft-Windows-Crypto-DPAPI%4BackUpKeySvc.evtx ├── Microsoft-Windows-Crypto-DPAPI%4Operational.evtx ├── Microsoft-Windows-DSC%4Admin.evtx ├── Microsoft-Windows-DSC%4Operational.evtx ├── Microsoft-Windows-DataIntegrityScan%4Admin.evtx ├── Microsoft-Windows-DataIntegrityScan%4CrashRecovery.evtx ├── Microsoft-Windows-DeviceSetupManager%4Admin.evtx ├── Microsoft-Windows-DeviceSetupManager%4Operational.evtx ├── Microsoft-Windows-Dhcp-Client%4Admin.evtx ├── Microsoft-Windows-Dhcpv6-Client%4Admin.evtx ├── Microsoft-Windows-Diagnosis-DPS%4Operational.</description></item><item><title>Event Horizon</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/event-horizon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/event-horizon/</guid><description>Tenemos esta descripción del reto:
Our CEO&amp;rsquo;s computer was compromised in a phishing attack. The attackers took care to clear the PowerShell logs, so we don&amp;rsquo;t know what they executed. Can you help us?
Y se nos proporcionan muchos archivos de log:
$ ls -l total 0 drwxrwxr-x 325 root root 10400 Nov 2 2020 Logs drwxrwxr-x 2 root root 64 Sep 15 2018 TraceFormat $ find . . ./Logs .</description></item><item><title>Fake News</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/fake-news/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/fake-news/</guid><description>Se nos proporciona una carpeta llamada html con muchos archivos de un servidor de WordPress:
$ ls index.php wp-activate.php wp-blogs wp-config-sample.php wp-cron.php wp-load.php wp-settings.php xmlrpc.php license.txt wp-admin wp-comments-post.php wp-config.php wp-includes wp-login.php wp-signup.php readme.html wp-blog-header.php wp-config-docker.php wp-content wp-links-opml.php wp-mail.php wp-trackback.php Inspección básica Obviamente, wp-blogs llama la atención, así que examinemos los archivos que están dentro:
$ ls wp-blogs 2022 $ ls wp-blogs/2022/ 11 $ ls wp-blogs/2022/11/ index.php style.css $ du -h wp-blogs/2022/11/* 304K wp-blogs/2022/11/index.</description></item><item><title>Free Services</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/free-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/free-services/</guid><description>Se nos proporciona un archivo de Microsoft Office Excel llamado free_decryption.xlsm. La m en la extensión indica que el archivo contiene macros VBA.
Extracción de macros VBA Desgraciadamente, olevba de oletools no puede extraer el código VBA:
$ olevba free_decryption.xlsm olevba 0.60.1 on Python 3.10.9 - http://decalage.info/python/oletools =============================================================================== FILE: free_decryption.xlsm Type: OpenXML No VBA or XLM macros found. Por lo tanto, tendremos que abrir el archivo (y deshabilitar las macros). Tenemos dos hojas:</description></item><item><title>Halloween Invitation</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/halloween-invitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/halloween-invitation/</guid><description>Se nos proporciona un archivo ZIP que contiene un fichero llamado invitation.docm:
$ unzip -l Halloween\ Invitation.zip Archive: Halloween Invitation.zip Length Date Time Name --------- ---------- ----- ---- 5252634 10-12-2022 14:04 invitation.docm --------- ------- 5252634 1 file $ unzip Halloween\ Invitation.zip Archive: Halloween Invitation.zip [Halloween Invitation.zip] invitation.docm password: inflating: invitation.docm $ file invitation.docm invitation.docm: Microsoft Word 2007+ Extracción de macros VBA Esto significa que tenemos un documento de Microsoft Word con macros VBA.</description></item><item><title>POOF</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/poof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/poof/</guid><description>Se nos proporcionan algunos archivos:
$ unzip -l POOF.zip Archive: POOF.zip Length Date Time Name ---------- ---------- ----- ---- 2567089 10-20-2022 11:12 candy_dungeon.pdf.boo 1096901984 10-20-2022 18:11 mem.dmp 7822474 10-20-2022 11:25 poof_capture.pcap 1126698 10-20-2022 12:04 Ubuntu_4.15.0-184-generic_profile.zip ---------- ------- 1108435601 4 files Y tenemos una instancia remota a la que conectarnos para responder a algunas preguntas:
$ nc 159.65.48.79 31240 +-------+-----------------------------------------------------+ | Title | Description | +-------+-----------------------------------------------------+ | POOF | In my company, we are developing a | | | new python game for Halloween.</description></item><item><title>Wrong Spooky Season</title><link>https://7rocky.github.io/ctf/htb-challenges/forensics/wrong-spooky-season/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/forensics/wrong-spooky-season/</guid><description>Se nos proporciona un archivo con una captura de tráfico de red llamado capture.pcap:
Análisis de tráfico Podemos usar Wireshark para analizarlo:
Mensajes HTTP Hay un montón de paquetes. Vamos a filtrar primero por HTTP:
Vale, ahora hay muchos menos paquetes para analizar.
Existen algunos mensajes HTTP que destacan al final. Podemos pensar que un usuario malintencionado está ejecutando comandos de sistema en el servidor de forma remota (cmd=whoami, cmd=id &amp;hellip;).</description></item></channel></rss>