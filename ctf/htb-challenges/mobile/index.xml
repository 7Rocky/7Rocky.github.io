<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mobile on Blog de 7Rocky. Ciberseguridad y Mates</title><link>https://7rocky.github.io/ctf/htb-challenges/mobile/</link><description>Recent content in Mobile on Blog de 7Rocky. Ciberseguridad y Mates</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://7rocky.github.io/ctf/htb-challenges/mobile/index.xml" rel="self" type="application/rss+xml"/><item><title>APKrypt</title><link>https://7rocky.github.io/ctf/htb-challenges/mobile/apkrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/mobile/apkrypt/</guid><description>Se nos proporciona un archivo APK (APKrypt.apk). Tenemos que encontrar un código VIP en el archivo APK. Por tanto, utilizaremos d2j-dex2jar para conseguir un archivo JAR:
$ d2j-dex2jar APKrypt.apk dex2jar APKrypt.apk -> ./APKrypt-dex2jar.jar Análisis del código fuente Ahora podemos subir el archivo JAR a www.javadecompilers.com y seleccionar Jadx como descompilador.
El archivo principal es sources/com/example/apkrypt/MainActivity.java:
package com.example.apkrypt; import android.app.Activity; import android.os.Bundle; import android.util.Base64; import android.view.View; import android.widget.Button; import android.widget.EditText; import android.</description></item><item><title>Manager</title><link>https://7rocky.github.io/ctf/htb-challenges/mobile/manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/mobile/manager/</guid><description>Se nos proporciona un archivo APK (Manager.apk) y un archivo README.txt:
1. Install this application in an API Level 29 or earlier (i.e. Android 10.0 (Google APIs)). 1. In order to connect to the server when first running the application, insert the IP and PORT that you are provided in the description. Como se puede ver, la aplicación Android se conectará a un servidor remoto, por lo que probablemente analizaremos esa comunicación.</description></item><item><title>Pinned</title><link>https://7rocky.github.io/ctf/htb-challenges/mobile/pinned/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://7rocky.github.io/ctf/htb-challenges/mobile/pinned/</guid><description>Se nos proporciona un archivo APK (Manager.apk) y un archivo README.txt:
1. Install this application in an API Level 29 or earlier (i.e. Android 10.0 (Google APIs)). Análisis dinámico Vamos a arrancar MobSF y Genymotion hacer un análisis dinámico:
Simplemente muestra un formulario de inicio de sesión con las credenciales ya escritas. No pude leer la contraseña desde ahí.Si pinchamosen el botón, veremos un mensaje exitoso:
Resolviendo el reto El reto probablemente esté relacionado con la certificate pinning en SSL/TLS (porque el reto se llama &amp;ldquo;Pinned&amp;rdquo;).</description></item></channel></rss>